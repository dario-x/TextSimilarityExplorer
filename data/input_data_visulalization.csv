,0,1,score_me,student_answer,question,orginal_student_answer,reference_answer
0,0.08381937210386681,-0.7420337514015368,4.0,  high risk addresses that feasible show company that software possibly programmed,What is the role of a prototype program in problem solving?,High risk problems are address in the prototype program to make sure that the program is feasible.  A prototype may also be used to show a company that the software can be possibly programmed.,To simulate the behaviour of portions of the desired software product.
1,-1.0373748716841082,0.7044392218356387,5.0,  simulate portion desire final product quick easy does small specific job way help see how solve final project,What is the role of a prototype program in problem solving?,To simulate portions of the desired final product with a quick and easy program that does a small specific job. It is a way to help see what the problem is and how you may solve it in the final project.,To simulate the behaviour of portions of the desired software product.
2,-1.0286259468053942,1.2082546900092566,5.0,  simulate behavior portion desire software product error checking,What is the role of a prototype program in problem solving?,A prototype program simulates the behaviors of portions of the desired software product to allow for error checking.,To simulate the behaviour of portions of the desired software product.
3,-1.0651966029298259,1.244598416614042,5.0,  define specification phase stimulate behavior portion desire software product meaning temporary solution refined extensively solving,What is the role of a prototype program in problem solving?,"Defined in the Specification phase a prototype stimulates the behavior of portions of the desired software product.  Meaning, the role of a prototype is a temporary solution until the program itself is refined to be used extensively in problem solving.",To simulate the behaviour of portions of the desired software product.
4,0.16130579672163153,-1.4576333167275473,3.0,  let user have first idea complete client evaluate generate much feedback including software specification project estimation total project,What is the role of a prototype program in problem solving?,It is used to let the users have a first idea of the completed program and allow the clients to evaluate the program. This can generate much feedback including software specifications and project estimations of the total project.,To simulate the behaviour of portions of the desired software product.
5,0.3564910372378554,-0.44286503309549385,2.0,  find error finalize,What is the role of a prototype program in problem solving?,To find problem and errors in a program before it is finalized,To simulate the behaviour of portions of the desired software product.
6,0.29591613664346045,-0.833799460329094,3.0,  address major issue creation way account possible bug possible prove tangible,What is the role of a prototype program in problem solving?,"To address major issues in the creation of the program. There is no way to account for all possible bugs in the program, but it is possible to prove the program is tangible. ",To simulate the behaviour of portions of the desired software product.
7,0.05230174445398841,-0.49795677401547256,5.0,  break whole simulate part final program,What is the role of a prototype program in problem solving?,you can break the whole program into prototype programs to simulate parts of the final program,To simulate the behaviour of portions of the desired software product.
8,-0.98655364199963,0.9269872143061971,5.0,  simulating behavior only portion desire software product,What is the role of a prototype program in problem solving?,Simulating the behavior of only a portion of the desired software product.,To simulate the behaviour of portions of the desired software product.
9,-0.988407738433553,0.9367994799331928,5.0,  stimulate behavior portion desire software product,What is the role of a prototype program in problem solving?,A program that stimulates the behavior of portions of the desired software product.,To simulate the behaviour of portions of the desired software product.
10,-1.1137985096130434,1.0582929831653574,5.0,  simulate behavior portion desire software product,What is the role of a prototype program in problem solving?,A program that simulates the behavior of portions of the desired software product.,To simulate the behaviour of portions of the desired software product.
11,0.42051706554546836,-0.577822663163377,2.0,  lay basic give starting point actual solving,What is the role of a prototype program in problem solving?,To lay out the basics and give you a starting point in the actual problem solving.,To simulate the behaviour of portions of the desired software product.
12,0.08514816522832654,-0.47071250569817635,4.0,  simulate part problem,What is the role of a prototype program in problem solving?,To simulate problem solving for parts of the problem,To simulate the behaviour of portions of the desired software product.
13,0.446573944247314,-0.6220236258617367,2.0,  provide basic groundwork further enhance improve solution problem,What is the role of a prototype program in problem solving?,A prototype program provides a basic groundwork from which to further enhance and improve a solution to a problem.,To simulate the behaviour of portions of the desired software product.
14,-0.08703559929389078,-0.6517119141154929,4.0,  part specification phase software solvin employed illustrate how key solve sometimes serve as base expand upon,What is the role of a prototype program in problem solving?,"A prototype program is a part of the Specification phase of Software Problem Solvin.  It's employed to illustrate how the key problem or problems will be solved in a program, and sometimes serves as a base program to expand upon.",To simulate the behaviour of portions of the desired software product.
15,-1.1137985096130434,1.0582929831653574,5.0,  simulate behavior portion desire software product,What is the role of a prototype program in problem solving?,Program that simulates the behavior of portions of the desired software product,To simulate the behaviour of portions of the desired software product.
16,0.6772853164454008,-0.7001009402355037,2.0,  provide limited proof concept verify client actually programming whole application,What is the role of a prototype program in problem solving?,it provides a limited proof of concept to verify with the client before actually programming the whole application.,To simulate the behaviour of portions of the desired software product.
17,0.2682797257805315,-0.6462808927515046,2.0,  test main function leaving fine detail,What is the role of a prototype program in problem solving?,It tests the main function of the program while leaving out the finer details.,To simulate the behaviour of portions of the desired software product.
18,1.136754102521971,-2.155766140223002,3.0,  get early feedback user early stage development show user first idea do look like meet requirement intense programming begin,What is the role of a prototype program in problem solving?,To get early feedback from users in early stages of development.  To show users a first idea of what the program will do/look like.  To make sure the program will meet requirements before intense programming begins.,To simulate the behaviour of portions of the desired software product.
19,-1.1137985096130434,1.0582929831653574,5.0,  simulate behavior portion desire software product,What is the role of a prototype program in problem solving?,it simulates the behavior of portions of the desired software product,To simulate the behaviour of portions of the desired software product.
20,-1.1137985096130434,1.0582929831653574,5.0,  simulate behavior portion desire software product,What is the role of a prototype program in problem solving?,It simulates the behavior of portions of the desired software product.,To simulate the behaviour of portions of the desired software product.
21,0.2615220431364375,-0.618419840592542,1.0,  collect datum problem,What is the role of a prototype program in problem solving?,A prototype program is used in problem solving to collect data for the problem.,To simulate the behaviour of portions of the desired software product.
22,0.3093245304578091,-0.8011516771147918,2.0,  ease understanding discussion ease understanding program,What is the role of a prototype program in problem solving?,To ease the understanding of problem under discussion and to ease the understanding of the program itself,To simulate the behaviour of portions of the desired software product.
23,-1.1137985096130434,1.0582929831653574,5.0,  simulate behavior portion desire software product,What is the role of a prototype program in problem solving?,it simulates the behavior of portions of the desired software product,To simulate the behaviour of portions of the desired software product.
24,0.24946698798894157,-0.665466807930129,2.0,  help spot key arise actual programing,What is the role of a prototype program in problem solving?,The role of a prototype program is to help spot key problems that may arise during the actual programing.,To simulate the behaviour of portions of the desired software product.
25,0.2461238364347775,-0.5360630727816926,4.0,  give general idea end product do time effort write entire program,What is the role of a prototype program in problem solving?,"the prototype program gives a general idea of what the end product will do,   without the time and effort to write out the entire program.",To simulate the behaviour of portions of the desired software product.
26,0.31276237335994034,-0.9231324417502056,4.0,  show that certain part work as suppose,What is the role of a prototype program in problem solving?,to show that a certain part of the program works as it is supposed to,To simulate the behaviour of portions of the desired software product.
27,5.398594770903893,3.0303969192621776,3.0,  programming approach programming enable take organized approach developing effective minimal error strategic pattern when e book give example costumer withdrawing money bank approach was taking pseudo code level ooa design lvl proceeding creating solution,What is the role of a prototype program in problem solving?,"Prototype programming is an approach to programming that enables one to take an organized approach to developing an effective program with minimal errors and a strategic pattern when solving a problem. i.e. book gave an example of a costumer withdrawing money from a bank, the approach that was taking on a pseudo code level during the OOA/Design lvl before proceeding into creating a solution. ",To simulate the behaviour of portions of the desired software product.
0,-0.13958530503616087,2.0718015283931845,5.0,  refining possibly design if phase reveal problem design production affected if program unworkable current form lead later production time than originally estimate affect coding because need rewrite code program remove error,What stages in the software life cycle are influenced by the testing stage?,Refining and possibly the design if the testing phase reveals problems in the design. Production can be affected if the program is unworkable in its current form which will lead to a later production time than originally estimated. Also affects coding because after testing you may need to rewrite the code for the program to remove errors.,The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7)
1,0.6485852455129549,0.26557414368647675,3.0,  implementation phase maintenance phase effected,What stages in the software life cycle are influenced by the testing stage?,The implementation phase and the maintenance phase are effected,The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7)
2,-0.7023656130592089,0.4895636937118236,4.0,  verification coding refining solution maintenance stage,What stages in the software life cycle are influenced by the testing stage?,"Verification, coding, refining the solution and maintenance are all influenced by the testing stage.",The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7)
3,6.513142978489504,0.3922316129562325,2.0,  rup : elaboration phase refine progject vision iterative devilopment core system development system requirement more accurate time cost estimate construction phase iterative development remaining system transition phase deployment system,What stages in the software life cycle are influenced by the testing stage?,"In RUP the stages in the software life cycle are influenced by the testing stage is:  Elaboration phase- refined progject vision, iterative devilopment of core system, development of system requirements, more accurate time and cost estimates.  Construction phase- iterative development of remaining system.  Transition phase-testing and deployment of the system.",The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7)
4,-0.7262352234592792,0.4741937789333832,3.0,  refining solution production maintenance stage,What stages in the software life cycle are influenced by the testing stage?,"Refining the solution, Production and Maintenance are all influenced by the Testing stage. ",The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7)
5,0.28006549660163244,-0.5624622780765084,2.0,  elaboration construction transition affected testing,What stages in the software life cycle are influenced by the testing stage?,"Elaboration, Construction, and Transition are all affected by testing",The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7)
6,-0.6359391219049644,0.4087682572665625,3.0,  refining production maintenance,What stages in the software life cycle are influenced by the testing stage?,"Refining, Production, Maintenance",The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7)
7,-0.45162298975740234,-0.05011507529574387,3.0,  refining solution,What stages in the software life cycle are influenced by the testing stage?,Refining the solution,The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7)
8,-0.47587463410073955,0.1991113300175318,5.0,  refining coding,What stages in the software life cycle are influenced by the testing stage?,Refining and Coding,The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7)
9,1.8258767566121532,0.363734951352872,2.0,  second half elaboration phase construction phase transition phase,What stages in the software life cycle are influenced by the testing stage?,"The second half of the Elaboration phase, Construction phase, and the Transition phase. ",The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7)
10,-0.7296271125416116,0.3381525838434608,3.0,  refining step production step maintenance stage,What stages in the software life cycle are influenced by the testing stage?,"The refining step, the production step, and the maintenance stage.  ",The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7)
11,0.2720351794918234,-0.5856876681553173,2.0,  elaboration construction transition,What stages in the software life cycle are influenced by the testing stage?,"Elaboration, Construction, Transition",The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7)
12,-0.41572012833890104,-0.07252527397317401,3.0,  refining,What stages in the software life cycle are influenced by the testing stage?,Refining.,The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7)
13,-0.32613179088344,-1.2323333064536603,2.0,  have direct final version program being as debugging finalization revision,What stages in the software life cycle are influenced by the testing stage?,"The testing stage has a direct influence on the final version of a program, being as it is the debugging and finalization of a software revision.",The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7)
14,-0.13356565651940647,3.8945058380059385,5.0,  directly : refining coding because refining right phase coding right phase indirectly : production maintenance because refining occur last two cycle,What stages in the software life cycle are influenced by the testing stage?,"Directly: Refining, coding.  Because Refining is right before the Testing Phase and Coding is right after the Testing Phase.  Indirectly: Production, Maintenance.  Because Refining occurs before these last two stages in the Software Life Cycle.",The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7)
15,-0.6359391219049645,0.4087682572665625,3.0,  refining production maintenance,What stages in the software life cycle are influenced by the testing stage?,"Testing, refining, production, and maintenance.",The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7)
16,-0.34094672243266655,-1.158857300085101,2.0,  depending how work done spread processes as prevent error showing later lack foresight,What stages in the software life cycle are influenced by the testing stage?,"Depending on how the work is done, Testing is spread throughout the  process as to prevent errors from showing up later on due to lack of foresight. ",The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7)
17,0.2720351794918234,-0.5856876681553173,2.0,  elaboration construction transition,What stages in the software life cycle are influenced by the testing stage?,"Elaboration, construction, and transition.",The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7)
18,-0.24918604204071795,-2.1960589271888953,2.0,  except setting program requirement if test fail change whole design implementation etc program as well as final outcome,What stages in the software life cycle are influenced by the testing stage?,"All stages are influenced except setting the program requirements.  If a test fails, it can change the whole design, implementation, etc of a program as well as the final outcome.",The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7)
19,-0.6359391219049645,0.4087682572665625,3.0,  refining production maintenance,What stages in the software life cycle are influenced by the testing stage?,"Refining, production, and maintenance",The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7)
20,-0.47587463410073955,0.1991113300175318,5.0,  coding refining,What stages in the software life cycle are influenced by the testing stage?,coding and refining,The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7)
21,-0.6359391219049645,0.4087682572665625,3.0,  refining production maintenance,What stages in the software life cycle are influenced by the testing stage?,"refining, production, maintenance.",The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7)
22,-0.36723781554452417,-0.7773423318128592,2.0,  removing logical error valid datum random datum actual datum,What stages in the software life cycle are influenced by the testing stage?,"Removing logical errors, testing for valid data, random data and actual data.",The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7)
23,-0.7764143332991049,0.5678595488367855,1.0,  1 specification 2 design 3 risk analyses 4 verification 5 coding 6 7 refining 8 production 9 maintenance,What stages in the software life cycle are influenced by the testing stage?,1- specification 2- design 3- risk analysis 4- verification 5- coding 6- testing 7- refining 8- production 9- maintenance,The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7)
24,-0.6903323620407751,0.4517835802559546,3.0,  refining production maintenance stage,What stages in the software life cycle are influenced by the testing stage?,"Refining stage, Production stage, and Maintenance stage.  ",The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7)
25,-0.38455959723929084,-0.8869141643952339,2.0,  could affect part could go back specification if does not test well,What stages in the software life cycle are influenced by the testing stage?,Testing could affect all parts of the life cycle; it could make you go back   to specification if it does not test well.,The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7)
26,-0.31303051088180983,-0.24209418723969353,3.0,  coding,What stages in the software life cycle are influenced by the testing stage?,coding,The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7)
27,0.43032612269573967,-2.9926187682459204,1.0,  individual component step as analyses design implementing code as well as entire system tested execution requirement identified analyses e main output,What stages in the software life cycle are influenced by the testing stage?,"The Individual components and steps such as  analysis, design, and implementing code  as well as the entire system are tested for execution of the requirements identified during the analysis stage. i.e. Main output ",The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7)
0,3.296048456002305,6.7959782243822024,4.0,  modularability ability reuse part program later program sometimes completely different goal program easier debug code dividing code classes that do specific job when program fail one job only have one classes debug good security purpose because let someone program sort list having give accesses source code inheritance polymorphism,What are the main advantages associated with object-oriented programming?,"Modularability, the ability to reuse parts of the program later in another program sometimes with completely different goals for the program. Also it makes it easier to debug code by dividing up the code into classes that each do a specific job and when the program fails at one job you only have one class to debug. Good for security purposes because it allows you to let someone use a program which sorts lists without having to give them access to the source code. ALso allows you to use inheritance and polymorphism.",Abstraction and reusability.
1,4.940115739282366,2.0700722285432644,5.0,  type more flexible making easier add modify program type fail safe program check individual module eliminate redundant code program easier read other programmer when debugging program easier track source problem module rather than two million line program,What are the main advantages associated with object-oriented programming?,"This type of programming is more flexible, making it easier to add and modify the program.  It is also a type of a fail safe program, you check each individual module.  This eliminates redundant code and makes the program easier to read for other programmers.  When debugging the program it is easier to track down the source of a problem within a module rather than a 2 million line program.",Abstraction and reusability.
2,-0.15221526778414587,0.1720107721823338,3.0,  that existing classes reuse program maintenance verification easier,What are the main advantages associated with object-oriented programming?,The main advantages to object-oriented programming are that existing classes can be reused and program maintenance and verification are easier.,Abstraction and reusability.
3,-2.009331279893021,0.6474578582610979,2.0,  that oop build classes three principle oop : encapsulation combine datum operation inheritance classes inherit properties other classes polymorphism determine appropriate operation execution time,What are the main advantages associated with object-oriented programming?,The advantages is that OOP allows us to build classes of objects.  Three principles that make up OOP are:  Encapsulation- Objects combine data and operations.  Inheritance- Classes can inherit properties from other classes.  Polymorphism- Objects can determine appropriate operations at execution time.,Abstraction and reusability.
4,-0.1628785591468046,0.07246046945832385,3.0,  existing classes reuse program maintenance verification easier accomplish,What are the main advantages associated with object-oriented programming?,Some advantages are existing classes can be reused and program maintenance and verification are easier to accomplish.,Abstraction and reusability.
5,-1.30011009736147,-0.10804232163808943,1.0,  programmer classes change manipulate not affecting entire once classes hold attrubute affect object,What are the main advantages associated with object-oriented programming?,Object oriented programming allows programmers to use an object with classes that can be changed and manipulated while not affecting the entire object at once. The classes all hold attrubutes that affect the object.,Abstraction and reusability.
6,0.06539238813578034,-1.5669268847059803,4.0,  reusable component extensibility maintainability reduce large problem smaller more manageable problem,What are the main advantages associated with object-oriented programming?,"Reusable components, Extensibility, Maintainability, it reduces large problems into smaller more manageable problems.",Abstraction and reusability.
7,-1.7893055208876558,0.2516108874993026,2.0,  encapsulation combine datum operation inheritance classes inherit properties other classes polymorphism determine appropriate operation execution time,What are the main advantages associated with object-oriented programming?,Encapsulation-objects combine data and operations Inheritance- classes can inherit properties from other classes Polymorphism- Objects can determine appropriate operations at execution time,Abstraction and reusability.
8,-0.9518601601572401,-0.676793422083215,3.0,  usability ease maintenance,What are the main advantages associated with object-oriented programming?,Re-usability  and ease of maintenance,Abstraction and reusability.
9,-1.4541143671955266,1.0262700320167846,5.0,  one hide inner detail technique know encapsulation combine datum operation not see how work reuse classes have been define earlier program method know as inheritance finally determine appropriate operation execution time technique know as polymorphism,What are the main advantages associated with object-oriented programming?,"One of the main advantages is you can hide inner details a technique known by encapsulation. Objects combine the data and operations but you cannot see how it works.   Another advantage is you can reuse classes that have been defined earlier in the program, a method known as inheritance.   Finally another advantage is objects can determine appropriate operations at execution time a technique known as polymorphism. ",Abstraction and reusability.
10,-0.1615398450406071,0.07150415569855327,3.0,  existing classes reuse program maintenance verification easier,What are the main advantages associated with object-oriented programming?,"Existing classes can be reused, and program maintenance and verification are easier.",Abstraction and reusability.
11,-0.23640119236668133,-0.7094813163016647,2.0,  using different module easier debugging,What are the main advantages associated with object-oriented programming?,Using different modules allows for easier debugging,Abstraction and reusability.
12,-1.229698526351618,-0.6762394502180277,3.0,  datum encapsulation concept function method manipulate datum,What are the main advantages associated with object-oriented programming?,"Data encapsulation concept,the use of functions or methods to manipulate data.",Abstraction and reusability.
13,-0.7582053051190858,-0.5328168899868735,5.0,  modular reusable code allowing faster deployment solution more general view solution,What are the main advantages associated with object-oriented programming?,"Modular, reusable code, allowing faster deployment of solutions, and a more general view of a solution.",Abstraction and reusability.
14,7.972130491451227,-4.067695264726529,5.0,  coding debugging program easier as compiler specify working incorrectly function was assigned easier identify code look more organized easier read help avoid redundant coding post maintenance easier module reuse several time other program too much hassle abstraction art breaking one big problem smaller simple problem solving many smaller problem share unique complex problem creating module solve smaller repeated problem save time when encounter again,What are the main advantages associated with object-oriented programming?,"Coding and Debugging programs are usually easier, as either the compiler will specify the object that is working incorrectly, or the function an object was assigned to will be easier to identify.  The code itself also looks more organized and is easier to read and will help to avoid redundant coding.  Post-programming maintenance is also easier.  Also, modules can be reused several times in other programs without too much hassle.   Abstraction is the art of breaking down one big problem into smaller, simpler problems and solving them.  Many of the smaller problems are shared between unique complex problems, and creating modules to these solve these smaller repeated problems can save time when you encounter them again.",Abstraction and reusability.
15,-0.4524476018411549,-0.8749210497191988,4.0,  variable remain private code easily modified reusable as well as easily implemented not mention easier read follow along as observer,What are the main advantages associated with object-oriented programming?,"Variables can remain private. The code is easily modified and reusable, as well as easily implemented. Not to mention easier to read and follow along as an observer.",Abstraction and reusability.
16,-0.6500418922919676,-0.9471336140650981,3.0,  datum abstraction control possible isolate element other element lot easier prevent tampering datum,What are the main advantages associated with object-oriented programming?,Data Abstraction and control... it is possible to isolate elements from other elements a lot easier and prevent tampering of data.,Abstraction and reusability.
17,-1.8429011471059316,0.13104763608903958,5.0,  encapsulation operation knowing how operation work inheritance cut redundancy reusing earlier classes polymorphism select correct operation situation,What are the main advantages associated with object-oriented programming?,Encapsulation - Objects use operations without knowing how the operation works. Inheritance - cuts redundancy by reusing earlier classes. Polymorphism - objects select the correct operation to use in the situation.,Abstraction and reusability.
18,0.6988369797421171,0.005383709675140108,5.0,  easier reuse adapt previously written code separate complex program smaller easier understand classes,What are the main advantages associated with object-oriented programming?,"They make it easier to reuse and adapt previously written code and they separate complex programs into smaller, easier to understand classes.",Abstraction and reusability.
19,-0.1615398450406071,0.07150415569855327,3.0,  existing classes reuse program maintenance verification easier,What are the main advantages associated with object-oriented programming?,"Existing classes can be reused, Program maintenance and verification are easier ",Abstraction and reusability.
20,-0.23603926095628658,0.01181449500738782,3.0,  existing classes feuse program maintenance verification easier,What are the main advantages associated with object-oriented programming?,"Existing classes can be feused, Program maintenance and verification are easier",Abstraction and reusability.
21,-0.5003939085172159,-0.8672062366943853,5.0,  datas abstraction easier maintenance re usability,What are the main advantages associated with object-oriented programming?,"the main advantages to object-oriented programming  is data abstraction, easier maintenance, and re-usability.",Abstraction and reusability.
22,-0.5619588838074324,0.17260730847609032,3.0,  existing classes reuse program maintenance verification easy,What are the main advantages associated with object-oriented programming?,Existing classes can be reused Program maintenance and verifications are easy,Abstraction and reusability.
23,-0.1615398450406071,0.07150415569855327,3.0,  1 existing classes reuse 2 program maintenance verification easier,What are the main advantages associated with object-oriented programming?,1- Existing classes can be reused 2- Program maintenance and verification are easier,Abstraction and reusability.
24,-0.02414124348188962,-0.7246425146854217,3.0,  information hidden easier debug easier more manageable,What are the main advantages associated with object-oriented programming?,Information can be hidden. It is easier to debug. Programming is easier and more manageable.,Abstraction and reusability.
25,-0.1615398450406071,0.07150415569855327,3.0,  existing classes reuse program maintenance verification easier,What are the main advantages associated with object-oriented programming?,"Existing classes can be reused, program maintenance and verification are   easier.",Abstraction and reusability.
26,-0.1615398450406071,0.07150415569855327,3.0,  existing classes reuse program maintenance verification easier,What are the main advantages associated with object-oriented programming?,existing classes can be reused program maintenance and verification are easier,Abstraction and reusability.
27,-1.8527806151456987,0.0376645647407005,3.0,  well one encapsulation value variable private unless method written pass info as well as inheritance where subclasses inherit variable method super classes example book include clock how alarm still clock first classes,What are the main advantages associated with object-oriented programming?,"Well for one encapsulation the values of the variables inside an object are private, unless methods are written to pass info outside of the object. As well as Inheritance where each subclass inherits all variables and methods of its super class.  Example in the book included obj clock and how obj alarm would still use clock from the first class. ",Abstraction and reusability.
0,-0.5967161704384861,0.13331256527101096,5.0,  function int main,Where do C++ programs begin to execute?,At function ‘int main ()’,At the main function.
1,-0.46562781284935223,0.07276191370864389,5.0,  function main,Where do C++ programs begin to execute?,the Function main().,At the main function.
2,0.6818534366442162,-0.1119323026184271,5.0,  main method,Where do C++ programs begin to execute?,c++ programs begin to execute in the main method.,At the main function.
3,-0.4656278128493516,0.07276191370864403,5.0,  main function,Where do C++ programs begin to execute?,A C++ program will begin to execute at the main() function.,At the main function.
4,-0.46562781284935184,0.07276191370864395,5.0,  main function,Where do C++ programs begin to execute?,They begin in the main() function.,At the main function.
5,0.14747372725552682,-0.2645253487220199,5.0,  int main,Where do C++ programs begin to execute?,Int main(),At the main function.
6,0.6818534366442159,-0.11193230261842771,5.0,  main method,Where do C++ programs begin to execute?,main method,At the main function.
7,0.6114018177046755,-1.0319417620446953,0.0,  testing phase,Where do C++ programs begin to execute?,in the testing phase,At the main function.
8,0.27856208484466133,-0.32507600028438716,5.0,  main,Where do C++ programs begin to execute?,main,At the main function.
9,0.31117933206411813,-0.3865540479630204,5.0,  funcion main,Where do C++ programs begin to execute?,They begin to execute at the funcion main().,At the main function.
10,0.6818534366442158,-0.11193230261842767,5.0,  main method,Where do C++ programs begin to execute?,The main method.,At the main function.
11,0.5398118730443345,-0.8367819692791415,0.0,  root,Where do C++ programs begin to execute?,At the root,At the main function.
12,-0.4656278128493518,0.07276191370864389,5.0,  main function,Where do C++ programs begin to execute?,In the main() function.,At the main function.
13,0.45428394293606505,0.13008540715291125,5.0,  execution main,Where do C++ programs begin to execute?,C++ programs begin execution at main.,At the main function.
14,-0.4656278128493518,0.07276191370864389,5.0,  main function,Where do C++ programs begin to execute?,In the Main function..?,At the main function.
15,-0.4656278128493518,0.07276191370864389,5.0,  main function,Where do C++ programs begin to execute?,"At the ""main()"" function",At the main function.
16,-0.4656278128493518,0.07276191370864389,5.0,  main function,Where do C++ programs begin to execute?,The main function.,At the main function.
17,-0.4656278128493518,0.07276191370864389,5.0,  function main,Where do C++ programs begin to execute?,The function main,At the main function.
18,1.8019726420621465,1.6759754307854817,5.0,  loading require include statement librarie main method execution,Where do C++ programs begin to execute?,"After loading the required include statements and libraries, the main method begins the execution.",At the main function.
19,-0.4656278128493518,0.07276191370864389,5.0,  main function,Where do C++ programs begin to execute?,main function,At the main function.
20,0.27856208484466144,-0.3250760002843872,5.0,  main,Where do C++ programs begin to execute?,main,At the main function.
21,-0.28990595475794817,0.5279233211459423,5.0,  execution main function,Where do C++ programs begin to execute?,C++ programs begin execution at the main function.,At the main function.
22,0.27856208484466144,-0.3250760002843872,5.0,  main,Where do C++ programs begin to execute?,At main,At the main function.
23,0.35244798930256843,-0.4767087246443763,5.0,  beging excute main,Where do C++ programs begin to execute?,they beging to excute at main,At the main function.
24,-0.8013838675388153,0.5119356650653261,5.0,  main function int main,Where do C++ programs begin to execute?,at the main function  int main() {},At the main function.
25,-0.28990595475794817,0.5279233211459423,5.0,  execution main function,Where do C++ programs begin to execute?,C++ programs begin execution at the main function.,At the main function.
26,-0.4656278128493518,0.07276191370864389,5.0,  main function,Where do C++ programs begin to execute?,"in the ""main"" function",At the main function.
27,-0.4656278128493518,0.07276191370864389,5.0,  main function,Where do C++ programs begin to execute?,Within the main function,At the main function.
0,0.408319568327978,0.36568459970190714,1.0,  integer string program,What is a variable?,Variable can be a integer or a string in a program.,A location in memory that can store a value.
1,2.1842134065456333,0.8750645814129295,4.0,  programming structure hold datum uniquely name programmer hold datum assigned new value assigned program finished,What is a variable?,"In programming, a structure that holds data and is uniquely named by the programmer. It holds the data assigned to it until a new value is assigned or the program is finished. ",A location in memory that can store a value.
2,-0.751567907225905,-0.48769509813634326,5.0,  location memory where value store,What is a variable?,A variable is a location in memory where a value can be stored.,A location in memory that can store a value.
3,-0.8718034079727763,-0.0536654778720459,5.0,  location computer memory value store later retrieve value,What is a variable?," Variable is a location in the computer's memory, in which a value can be stored and later can retrieve that value.",A location in memory that can store a value.
4,-0.8750942278677055,0.11379147494810919,5.0,  location computer memory where value store program have name value type size,What is a variable?,"A variable is a location in the computer's memory where a value can be stored for use by a program. Each variable has a name, a value, a type and a size.",A location in memory that can store a value.
5,0.8533343471906388,0.6372340492891558,2.0,  name object hold numerical letter value,What is a variable?,A named object that can hold a numerical or letter value,A location in memory that can store a value.
6,0.7535461111283382,3.4221849405326323,3.0,  sybol name value number example : a_used_number stand give number programmer refer number using name,What is a variable?,"It's a sybol or name for a value/number. Example: 'a_used_number' can stand for any given number, and the programmer can refer to that number by using the variable name.",A location in memory that can store a value.
7,-0.7526442586637195,-0.4501725067993793,5.0,  location computer memory where value store program,What is a variable?,A variable is a location in the computers memory where a value can be stored for use by a program,A location in memory that can store a value.
8,0.7684639178756104,-0.23585592021522359,5.0,  block memory hold specific type datum,What is a variable?,a block of memory that holds a specific type of data,A location in memory that can store a value.
9,-0.6139454428078938,-0.7308270239931376,5.0,  location computer memory where store program,What is a variable?,It is a location in the computer's memory where it can be stored for use by a program.,A location in memory that can store a value.
10,-0.7515679072259047,-0.48769509813634365,5.0,  location memory where value store,What is a variable?,A location in memory where value can be stored.,A location in memory that can store a value.
11,0.019542823270125964,0.9740627760090784,3.0,  value word assume set value,What is a variable?,a value/word that can assume any of a set of values,A location in memory that can store a value.
12,-0.19467986273894158,-0.32449149353834844,3.0,  pointer location memory,What is a variable?,A pointer to a location in memory.,A location in memory that can store a value.
13,-0.26937200054606925,0.11652194941984746,5.0,  memory addresses specific type store datum mathematical perspective symbol representing fixed definition changing value,What is a variable?,"A variable is the memory address for a specific type of stored data, or from a mathematical perspective, a symbol representing a fixed definition with changing values.",A location in memory that can store a value.
14,-0.17221197499146634,1.0954432301426682,5.0,  value subject change computer memory program program change value recall later act directly,What is a variable?,A variable is a value that is subject to change in a computer's memory that can be used by programs.  Programs can change the value of the variable and recall it later or act on it directly.,A location in memory that can store a value.
15,0.28605613190227847,1.034180916861166,3.0,  symbol stand value not change depending program,What is a variable?,a symbol that stands in for a value that may or may not change depending on the program.,A location in memory that can store a value.
16,5.536383440595353,-1.9346746886915775,4.0,  placeholder hold information program example : int hold : 1 2 3 4 68 72 256 etc float hold : 1 54 55 55 1 24 5 657 8 8123 et char hold : a b c d e f 4 5 6 p etc,What is a variable?,"a placeholder to hold information used in the program... for example: int can hold: 1, 2, 3, 4, 68, 72, 256, etc. float can hold: 1.54, 55.55, 1.24, 5.657, 8.8123, et. char can hold: A, B, C, D, E, F, !, 4, 5, 6, P, etc. ",A location in memory that can store a value.
17,0.023990334596252716,0.3930875319336747,4.0,  store value program,What is a variable?,a stored value used by the program,A location in memory that can store a value.
18,0.3940817945223682,0.9529332748035153,4.0,  way store different value program as number word letter etc,What is a variable?,"A way to store different values into the program, such as numbers, words, letters, etc.",A location in memory that can store a value.
19,-0.7688463975827768,-0.5427770483292339,2.0,  object location memory where value store,What is a variable?,An object with a location in memory where value can be stored,A location in memory that can store a value.
20,-0.7515679072259047,-0.48769509813634365,5.0,  location memory where value store,What is a variable?,location in memory where a value can be stored,A location in memory that can store a value.
21,-0.07801363291727073,-0.2745068106598581,2.0,  object where datum store,What is a variable?,a variable is an object where data is stored.,A location in memory that can store a value.
22,-0.7515679072259047,-0.48769509813634365,5.0,  location memory where value store,What is a variable?,Location in memory where a value can be stored.,A location in memory that can store a value.
23,-0.7515679072259047,-0.48769509813634365,5.0,  location memory where value store,What is a variable?,it is a location in memory where value can be stored,A location in memory that can store a value.
24,-0.7526442586637195,-0.4501725067993792,5.0,  location computer memory where value store program,What is a variable?,A variable is the location in a computer's memory where a value can be stored for use by a program.,A location in memory that can store a value.
25,-0.7526442586637195,-0.4501725067993792,5.0,  location computer memory where value store program,What is a variable?,A variable is a location in a computers memory where a value can be stored   for use by a program.,A location in memory that can store a value.
26,-0.5696787247963521,-0.8302107510378343,5.0,  location memory where datum store retrieve,What is a variable?,a location in memory where data can be stored and retrieved,A location in memory that can store a value.
27,-0.7985138916126453,-1.2641870996375684,5.0,  method identifier say bind datum object memory location then store location accessed when manipulate later when name called,What is a variable?,"Is a method or identifier I would say,  we use to bind a data object to memory location; which is then stored in a location that can be accessed when and manipulated later when the variable name is called. ",A location in memory that can store a value.
0,-0.6256139580236153,-0.6955328278106683,1.0,  right good practice beginning label food,Where are variables declared in a C++ program?,"They can be declared right before they are used, but it is a good practice to declare them at the beginning of the program and label what they are food.",Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)
1,0.1840911467274091,-0.3079639667862064,1.0,  function main using variable,Where are variables declared in a C++ program?,In the Function main() before using the variable.,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)
2,2.9529874333946613,-0.47460473314156304,5.0,  local method function beginning method global function method generally function define,Where are variables declared in a C++ program?,"Local variables are declared inside the method or function they will be used in at the beginning of the method. Global variables are declared outside of any function or method, generally before functions are defined.",Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)
3,-0.3822717547618212,-0.4675139547910415,4.0,  ever define inside block locally outside block globally,Where are variables declared in a C++ program?,Variables are declared where ever it is defined either inside a block locally or outside a block globally.,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)
4,-0.5344721891269033,-0.6125303252908658,3.0,  actually main globally,Where are variables declared in a C++ program?,Variables are declared before they are actually used. They can be declared before main() to use globally,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)
5,-0.6004847032707183,-0.6355790174816454,2.0,  good programing practice main least,Where are variables declared in a C++ program?,"For good programing practice they should be declared before main(), but should at least be declared before they are used.",Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)
6,0.4433042429463252,-1.6954731564292704,5.0,  globally main method subject only method scope still beginning method,Where are variables declared in a C++ program?,"They can be declared globally just before the main method (but also outside of it)... or variables can be subject to only the method they're scoped within, but would still be declared at the beginning of that method (but inside of it).",Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)
7,0.35249229374162916,-0.2300721226818719,5.0,  local method global body,Where are variables declared in a C++ program?,local variables are declared inside the method while global variables are declared in the body.,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)
8,-0.12141146102918021,0.12923934650139715,4.0,  globally entire locally individual function including statement,Where are variables declared in a C++ program?,"Globally for an entire program, and locally for individual functions (including FOR statements)",Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)
9,-0.5586727636604264,-0.6204385654497392,2.0,  beginning always contain name datum type,Where are variables declared in a C++ program?,They are usually declared at the beginning before they can be used in the program. They always contain a name and a data type.,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)
10,-0.2547228243973008,-0.6653051179193897,2.0,  method,Where are variables declared in a C++ program?,Inside the method.,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)
11,-0.5569452983211344,-0.3497291130708211,1.0, top,Where are variables declared in a C++ program?,at the top,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)
12,1.6730940035775794,0.8649093263040688,5.0,  global body code local function unless function being passed always,Where are variables declared in a C++ program?,Global variables are declared in the body of the code. Local variables are declared in the function they are to be used (unless the function is being passed a variable). Variables should always be declared before use.,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)
13,-0.46052993504504014,-0.34155002970378895,2.0,  beginning module code,Where are variables declared in a C++ program?,Variables are usually declared at the beginning of a module of C++ code.,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)
14,-0.09561478578812069,0.7364251550337183,3.0,  main function top code almost anywhere must code act upon,Where are variables declared in a C++ program?,"In the main function, usually at the top of code.  They can be declared almost anywhere, but must be declared before the code can use or act upon them.",Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)
15,-0.5561949519210518,-0.682814698814339,1.0,  very beginning main start,Where are variables declared in a C++ program?,in the very beginning of the program. Before the main() starts.,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)
16,-2.5583643397307294,3.7568009772066953,2.0,  declaration functions statement statement body if do statement namespace header etc almost anywhere anywhere as long as own line,Where are variables declared in a C++ program?,"In the declaration of Functions, for statements, and while statements. in the body of If, For, while, do while, statements, in namespaces, headers, etc  ( almost anywhere. ) anywhere in the program, as long as it is on it's own line.",Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)
17,-0.6494199570217585,-0.31373132148399,1.0,  declaration datas type,Where are variables declared in a C++ program?,After declaration of the variable's data type.,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)
18,-0.8771715808843182,0.7549137378341598,3.0,  anywhere code top middle code anywhere,Where are variables declared in a C++ program?,"anywhere in the code, can be at the top, or in the middle of the code, or anywhere.",Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)
19,-0.5308181653550764,-0.4024875356096181,2.0, use,Where are variables declared in a C++ program?,Before they are used.,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)
20,-0.6075383973053686,-0.008839023297252791,3.0,  anywhere same scope,Where are variables declared in a C++ program?,Anywhere in the same scope before they are used,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)
21,-0.2615641796326568,-0.6888413166306806,1.0,  classes method,Where are variables declared in a C++ program?,variables can be declared in classes and methods.,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)
22,1.4047916040274913,0.23329453479764392,5.0,  function scope function scope case global variable,Where are variables declared in a C++ program?,inside the function scope and outside of the function scope in case of global variables,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)
23,1.4290009254036509,0.22612684377228423,3.0,  global main function local other function,Where are variables declared in a C++ program?,global variables are declared in the main function local variables are declared in any other function,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)
24,-1.0213678010927794,0.28010008435512207,4.0,  very beginning as long as appear called upon,Where are variables declared in a C++ program?,"Variables are usually declared at the very beginning of a C++ program, but can be declared any in the program as long as they appear before they are called upon.",Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)
25,0.18917193366442528,-0.31925822068547727,1.0,  main function operation attempted variable,Where are variables declared in a C++ program?,"Variables are declared in the main function, before any operation is   attempted with the variables.",Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)
26,-0.5518786923345659,0.08363858647214668,4.0,  anywhere depend want accessible scope,Where are variables declared in a C++ program?,"anywhere, but where you declare them depends on where you want them to be accessible (their scope)",Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)
27,3.1761241552194206,2.4468164548010165,4.0,  depend if global then have side source code scope local one local function etc obviously does not need seeing how function block being called,Where are variables declared in a C++ program?,It depends if it’s a global then they have to be declared out side the source code to be used in every scope however a local variable is one declared in a local function etc. which obviously doesn’t need to be declared outside the variable seeing how it is used for the function or block its being called for.,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)
0,1.1799860901323687,-2.362609309249203,4.0,  first evaluate condition then execute line code zero more time execute line code then evaluate condition,What is the main difference between a while and a do...while statement?,"""The “do” statement first evaluates the condition and then executes the lines of code in the statement 0 or more times. 	The “do while” statement executes the lines of code and then it evaluates the condition. """,The block inside a do...while statement will execute at least once.
1,-1.9234914925943383,0.5045690684797063,5.0,  evaluate whether not loop running block contained least once differance that have possibility never being other hand always run least once before evaluating whether run again,What is the main difference between a while and a do...while statement?,do...while statements evaluate whether or not to loop after running the block contained within it at least once. So the main differance is that while statements have a possibility of never being used. Do ... while statements on the other hand are always run at least once before evaluating whether to run again.,The block inside a do...while statement will execute at least once.
2,-1.3893691165728737,2.6565045913471628,5.0,  loop that loop always cycle loop least once loop does not always,What is the main difference between a while and a do...while statement?,"The main difference between a while and a do...while loop is that the do...while loop always cycles through the loop at least once, but the while loop does not always do so.",The block inside a do...while statement will execute at least once.
3,5.844465125407488,2.2317861243136776,5.0,  loop execute block code as long as condition true loop execute block code as long as condition satisfied loop test condition execution content loop test condition execution content least once,What is the main difference between a while and a do...while statement?,While loop used to execute a block of code as long as some condition is true.  A do...while loop used to execute a block of code as long as some condition is satisfied.  The difference between while and do...while is while loop tests its condition before the execution of its contents and the do...while loop tests its condition after the execution of its contents at least once.,The block inside a do...while statement will execute at least once.
4,0.2542044329590588,0.37898520319642703,5.0,  termination condition end loop run least once as if condition false begin then loop never run,What is the main difference between a while and a do...while statement?,"The termination condition of a do...while statement is usually at the end of the loop so it will run at least once. As for the while statement, if the condition is false to begin with, then the loop will never run.",The block inside a do...while statement will execute at least once.
5,-0.7006385952963785,0.29052552869779,5.0,  loop check true executing loop execute checking see if run again,What is the main difference between a while and a do...while statement?,A while loop will check the statement to make sure it is true before executing. A do while loop will execute before checking the statement to see if it should run again.,The block inside a do...while statement will execute at least once.
6,-0.5377249347367705,1.5728680222376643,5.0,  test condition loop first chance loop never run loop always run once then test determine if run again,What is the main difference between a while and a do...while statement?,"A while statement will test the condition of the while loop FIRST - there is a chance the loop will never run. A do...while loop will ALWAYS run once, and then the while test will determine if it will run again.",The block inside a do...while statement will execute at least once.
7,-1.11646382603838,0.4258655168683858,5.0,  loop always execute once loop conditional have true run,What is the main difference between a while and a do...while statement?,a do while loop always executes once. A while loop's conditional statement has to be true for it to run.,The block inside a do...while statement will execute at least once.
8,-1.1811019391376067,3.872878020949676,5.0,  evaluate executing cycle loop including first cycle meaning that loop not always execute run evaluate running cycle loop ensuring that loop always execute least one time,What is the main difference between a while and a do...while statement?,"while statements will evaluate the statement BEFORE executing a cycle of the loop, including the first cycle, meaning that a while loop will not always execute. A do...while will run evaluate the statement AFTER running through a cycle of the loop, ensuring that the loop always executes at least one time.",The block inside a do...while statement will execute at least once.
9,-0.03890118615423808,-1.649578536984476,5.0,  block always execute atleast once only execute if condition true,What is the main difference between a while and a do...while statement?,The main difference between a do and a do...while statement is in a do...while statement is the statements in a do block are always executed atleast once.   The while statement will only execute if its condition is true.,The block inside a do...while statement will execute at least once.
10,-1.2252924676701646,-0.5939849644582259,4.0,  loop always execute once,What is the main difference between a while and a do...while statement?,The loop of a do...while statement always executes once.,The block inside a do...while statement will execute at least once.
11,-1.8075157067870382,-1.9722421409123705,5.0,  only process if meet always process once then only continue if meet,What is the main difference between a while and a do...while statement?,"a while statement will only process if the statement is met, while a do...while will always process once, then only continue if the statement is met.",The block inside a do...while statement will execute at least once.
12,-1.3844225370171985,-1.4185908081455372,4.0,  run embedded code least once command does not necessarily,What is the main difference between a while and a do...while statement?,"Do ...while runs the embedded code at least once, the do command does not necessarily",The block inside a do...while statement will execute at least once.
13,-1.3554669749094872,-1.4283940073337764,5.0,  test true first running run once first checking,What is the main difference between a while and a do...while statement?,"While tests for true first before running, do...while runs once first before checking.",The block inside a do...while statement will execute at least once.
14,-0.14370814967728845,-1.305114340965809,5.0,  body always execute least once where as not execute at all unless condition true,What is the main difference between a while and a do...while statement?,A do...while statement's body always executes at least once.  Where as a while statement will not execute at all unless the condition for the while is true.,The block inside a do...while statement will execute at least once.
15,0.7385611144565434,0.16277937933961473,5.0,  block loop always execute least once regardless condition whereas loop never execute if condition not meet,What is the main difference between a while and a do...while statement?,The statements within the block of the do while loop will always be executed at least once regardless of the conditions. Whereas the while loops may never be executed if the conditions are not met.,The block inside a do...while statement will execute at least once.
16,-1.2368235528418567,1.3858129647532698,5.0,  loop always run once loop perform test running loop,What is the main difference between a while and a do...while statement?,"a do... while loop will always run through once, while an while loop performs a test before running through the loop.",The block inside a do...while statement will execute at least once.
17,0.08526194146677388,-0.9050341630604373,5.0,  test condition start loop once condition tested,What is the main difference between a while and a do...while statement?,A while statement tests the condition before it can start. A do...while statement loops through once before the condition is tested.,The block inside a do...while statement will execute at least once.
18,-1.0494262670520775,1.0098217751104746,3.0,  loop terminate beginning loop terminate end loop,What is the main difference between a while and a do...while statement?,"A while loop terminates at the beginning of the loop, a do/while terminates at the end of the loop.",The block inside a do...while statement will execute at least once.
19,-1.2384626240601018,-0.5180284930814016,3.0,  loop body always execute least once,What is the main difference between a while and a do...while statement?,the loop body always executes at least once,The block inside a do...while statement will execute at least once.
20,-0.6459434109839317,1.412928131950561,5.0,  loop evaluate expression top loop decide if need execute always execute least once then evaluate expression bottom loop,What is the main difference between a while and a do...while statement?,"While loop evaluates its expression at the top of its loop and decides if it needs to execute, and the do-while always executes at least once and then evaluates its expression at the bottom of its loop.",The block inside a do...while statement will execute at least once.
21,0.24825103484094302,-1.6770878104035916,5.0,  always execute piece code least once checking condition always check condition first,What is the main difference between a while and a do...while statement?,"A do...while statement will always execute the ""do"" piece of code at least once before checking the condition. A while statement will always check the condition first.",The block inside a do...while statement will execute at least once.
22,0.018409868787258594,-1.171704319879944,5.0,  passes one time checking condition fail enter loop if condition fail first place,What is the main difference between a while and a do...while statement?,"A do-while passes atleast 1 time before checking the condition, however, a while would fail to enter the loop if the condition fails in its first place.",The block inside a do...while statement will execute at least once.
23,2.3223743133631594,0.8709815412136301,5.0,  loop check if condition true not first if was true excute loop execute check condition if condition was true excute again loop excute atleast once,What is the main difference between a while and a do...while statement?,"a while loop checks if the condition is true or not first, if it was true, it excutes the statement. a do.. while loop executes the statement before it checks the condition. if the condition was true it would excute the statement again. so a do...while loop would excute the statement atleast once.",The block inside a do...while statement will execute at least once.
24,-0.1730396441143342,0.1686129499395439,5.0,  loop always execute atleast once loop never execute depending teh condition,What is the main difference between a while and a do...while statement?,"A do...while loop will always execute atleast once, a while loop may never   execute depending on teh conditions.",The block inside a do...while statement will execute at least once.
25,3.0102742542118244,-0.23884554097199656,5.0,  loop pre check check condition execute code block loop post check check condition block execute run least once no matter condition,What is the main difference between a while and a do...while statement?,"a while loop is pre-check (it checks the condition statement before it executes the code within the while block)  a do while loop is post-check (it checks the condition AFTER the block executes, it runs at least once no matter what the condition statement is)",The block inside a do...while statement will execute at least once.
26,3.4460042500186425,-1.7037043829508474,5.0,  construct consist block code condition first code block execute then condition evaluate done prove false loop test condition code block execute,What is the main difference between a while and a do...while statement?,"))     What is the main difference between a while and a do...while statement? The do while construct consists of a block of code and a condition. First, the code within the block is executed, and then the condition is evaluated, this is done until it is proven false. The difference between the While loop is it tests the condition before the code within the block is executed. ",The block inside a do...while statement will execute at least once.
0,2.0650249893794337,-1.3509566893944742,1.0,  set get displaymessge other message tell properties have does not reveal implementation could have anything want own definition,What is typically included in a class definition?,"For us it is usually a set, get, and displayMessge or other messages that tell you what properties a class has but does not reveal its implementations. You could have anything you want in your own class definition.",Data members (attributes) and member functions.
1,1.6613109137556354,0.22901319296054068,4.0,  attribute said whether not subclasses whether public private protected,What is typically included in a class definition?,The attributes of said class. Also whether or not it is a subclass. Also whether it is public private or protected.,Data members (attributes) and member functions.
2,-1.3089711880845634,-0.29448621108235556,5.0,  information telling compiler datas member member function belong classes,What is typically included in a class definition?,Information telling the compiler what data members and member functions belong to the class.,Data members (attributes) and member functions.
3,0.21666846685512936,5.008540972450375,5.0,  since user define body declaration contain member datum function declaration optionally accesses specifier example specifier public private protected keyword class class body enclose bracket,What is typically included in a class definition?,"Since class is user defined, the body of the declaration can contain members, that can be either data or function declarations, and optionally access specifiers.  Example for specifiers would be public, private, and protected.  There is the keyword Class and the Class body is enclosed with brackets ({}). ",Data members (attributes) and member functions.
4,0.5596624406598929,-0.3023794250975813,1.0,  object datum,What is typically included in a class definition?,An object and data.,Data members (attributes) and member functions.
5,1.1144064282847583,-0.32604490610069004,2.0,  specific name only information define implementation detail etc,What is typically included in a class definition?,"It's specific class name, includes only information defined by that class... implementation details... etc.",Data members (attributes) and member functions.
6,-1.2641617909524847,-0.11653333302730645,5.0,  datum member member function,What is typically included in a class definition?,data members and member functions.,Data members (attributes) and member functions.
7,-0.39481832771384867,-0.11435394877872948,5.0,  contain function datas member,What is typically included in a class definition?,A class definition usually contains the function and its data members,Data members (attributes) and member functions.
8,-1.2641617909524847,-0.11653333302730645,5.0,  datum member member function,What is typically included in a class definition?,Data members and member functions,Data members (attributes) and member functions.
9,-0.251072907245119,-0.26152971607013603,3.0,  member function,What is typically included in a class definition?,member functions,Data members (attributes) and member functions.
10,-1.302135235014088,-0.1295911092656949,5.0,  member function datum member belonging classes,What is typically included in a class definition?,Member functions and data members belonging to the class.,Data members (attributes) and member functions.
11,1.0358334507189189,0.05400604352972839,5.0,  public private area function variable classes,What is typically included in a class definition?,a public and private area that includes the functions and variables that are used in the class,Data members (attributes) and member functions.
12,1.4612335825501355,0.6813629189107921,3.0,  keyword followed name inside declare public private declaration classes,What is typically included in a class definition?,"the keyword class followed by they class name, on the inside you declare public and private declarations of your class",Data members (attributes) and member functions.
13,0.5769987470708827,-0.37611137842350667,3.0,  function definition,What is typically included in a class definition?,A class definition typically includes function definitions.,Data members (attributes) and member functions.
14,-1.173515801864498,0.09774731561326105,5.0,  begin class followed name then constructor datas member member function delineate definition,What is typically included in a class definition?,"It begins with Class, followed by the class name, then usually a constructor, data members and member functions that delineates the class is included in any class's definition.",Data members (attributes) and member functions.
15,0.5480697182811664,-0.31100366944707075,5.0,  datum method,What is typically included in a class definition?,the data and methods,Data members (attributes) and member functions.
16,0.7695793258499727,-0.5291125781080426,5.0,  constructor function variable accessible possibly other depending how done,What is typically included in a class definition?,"A constructor, functions, and variables that are accessible to by that class, and possibly other classes depending on how they are done.",Data members (attributes) and member functions.
17,-1.2641617909524847,-0.11653333302730645,5.0,  member function datum member,What is typically included in a class definition?,Member functions and data members.,Data members (attributes) and member functions.
18,1.5927917713491007,-0.02337769531673721,1.0,  public section private section must semicolon set end,What is typically included in a class definition?,"public section and private section, and there must be a semicolon to set the end",Data members (attributes) and member functions.
19,-1.0592549639203812,-0.18237957690934273,5.0,  member funtion datum member,What is typically included in a class definition?,member funtions and data members,Data members (attributes) and member functions.
20,-1.2641617909524847,-0.11653333302730645,5.0,  datum member member function,What is typically included in a class definition?,Data members and Member functions,Data members (attributes) and member functions.
21,-1.2641617909524847,-0.11653333302730645,5.0,  datum member member function,What is typically included in a class definition?,data members and member functions,Data members (attributes) and member functions.
22,0.6182648599241692,-0.06357172178179835,2.0,  name public datum type as constructor method function,What is typically included in a class definition?,"the class name and its public data types such as constructors, methods, functions.",Data members (attributes) and member functions.
23,-1.0171483894211963,-0.1757662042944487,4.0,  constructor several datas member at least one public datas member method,What is typically included in a class definition?,"a constructor and several data members, and at least one public data member or method",Data members (attributes) and member functions.
24,1.3885195172918248,0.05071648478718971,1.0,  name two curly prentheses public private,What is typically included in a class definition?,"class name, two curly prenthesis, public and private",Data members (attributes) and member functions.
25,-1.2641617909524847,-0.11653333302730645,5.0,  datum member member function,What is typically included in a class definition?,data members and member functions,Data members (attributes) and member functions.
26,0.3090339429108444,-0.23235952839220964,5.0,  datum function,What is typically included in a class definition?,Data and functions,Data members (attributes) and member functions.
27,-0.5307190651001404,-0.20020247753653445,5.0,  function datum member belong classes,What is typically included in a class definition?,functions and data members that belong to the class,Data members (attributes) and member functions.
28,0.6023262553072373,-0.3569320534230814,5.0,  variable function classes,What is typically included in a class definition?,"class variables, function definitions for the class",Data members (attributes) and member functions.
29,0.10288221388973137,-0.19202804066563414,5.0,  expanded concept datum structure hold both datum function being execute,What is typically included in a class definition?,"A class is an expanded concept of a data structure, it holds both the data and the functions being executed ",Data members (attributes) and member functions.
0,-0.5044941672504974,-0.5975672084019927,1.0,  component particular classes functioning component classes,What is the difference between a data member and a local variable inside a member function?,Data members are the data components of a particular class.  A member function are the functioning components of the class.,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.
1,0.10602483473502479,0.21280370452569244,1.0,  field declare as classes avariable that isdeclare method,What is the difference between a data member and a local variable inside a member function?,A field variable is a variable that is declared as a member of a class. A local variable is avariable that isdeclared local to a method.,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.
2,-0.9169442661942013,-0.3385947922989299,4.0,  declare classes object classes keep own copy datas store memory,What is the difference between a data member and a local variable inside a member function?,"Data members are declared inside the class, but outside of any member functions. Unlike with local variables, each object of the class keeps its own copy of the data members stored in memory.",Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.
3,-1.8841237342519896,1.986092956193886,4.0,  datas represent attribute classes definition declare body not outside body when terminate value lose,What is the difference between a data member and a local variable inside a member function?,Data member are variables that represent an attribute in a class definition.  Local variables declared in a function body cannot be used outside of that function body.  When a function terminates the values of its local variables are lost.,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.
4,-1.103477607015708,-0.26388083959365194,5.0,  not accessed declare data normally private declare private accessible only classes declare,What is the difference between a data member and a local variable inside a member function?,A local variable cannot be accessed outside the function in which it is declared. Data members normally are private. Variables of functions declared private are accessible only to member functions of the class in which they are declared.,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.
5,0.376021414063789,-0.8727180570384765,4.0,  data part c classes structure store certain type only available derive desire outcome,What is the difference between a data member and a local variable inside a member function?,"A data member is part of a C++ class or structure that stores data of a certain type... A local variable inside a member function is only available inside that function, and can be used to derive a desired outcome.",Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.
6,0.7508211858062932,-0.8241964759202289,3.0,  only accessed scope declaration,What is the difference between a data member and a local variable inside a member function?,A local variable can only be accessed within the scope of its declaration.,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.
7,0.05071147678673786,0.4142313604994606,4.0,  atribute not value lose terminate,What is the difference between a data member and a local variable inside a member function?,Data members are the atributes of the function and can be used outside the function. Local variable can not be used outside the function and the value is lost after the function terminates.,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.
8,-0.07445437237060978,-0.018664998626950067,3.0,  permanent attribute classes lose when scope end,What is the difference between a data member and a local variable inside a member function?,"data members are permanent attributes of the class, local variables inside a member function are lost when the scope of the member function ends.",Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.
9,-2.259654524098574,1.2018394737930345,3.0,  declare classes definition bodies classes definition declare definition body,What is the difference between a data member and a local variable inside a member function?,data members are declared in a class definition but outside the bodies of a class's member-function definitions. Local variables are declared in a function definition's body,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.
10,0.785767114990497,-0.8535543865305119,4.0,  data globally accessible only accessible function,What is the difference between a data member and a local variable inside a member function?,"A data member is globally accessible, while a local variable is only accessible inside the member function.",Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.
11,0.7545790137486234,-0.8428569297446764,5.0,  only accessed accessed throughought program,What is the difference between a data member and a local variable inside a member function?,A variable inside a member function can only be accessed inside that member and a data member can be accessed throughought the program.,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.
12,0.7259934665257204,-0.6567733543041072,5.0,  only scope declaration,What is the difference between a data member and a local variable inside a member function?,Local variables are used only within the scope of its declaration,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.
13,2.0520473341537633,0.01224090254303894,0.0,  data more general term describing object instantiate refer more scope locate anything control structure class scope same as function,What is the difference between a data member and a local variable inside a member function?,"A data member is a more general term describing all objects instantiated within a member function.  ""Local"" in local variables refers more to the scope of a variable, which may be located in anything from a control structure to a class.  Local variables whose scope are in a member function are the same as data members of member functions.",Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.
14,4.008880920666385,2.9299759485291603,2.0,  data exist permanently program memory as long as run temporal only operate exist as long as run,What is the difference between a data member and a local variable inside a member function?,A data member exists permanently in that program's memory as long as it's run.  A local variable inside a member function is temporal and only used to operate in the function and exists as long as the function is run.,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.
15,1.0965750460076482,-0.04286864407014255,5.0,  only where as set public accesses,What is the difference between a data member and a local variable inside a member function?,"local variables can only be used within the function, where as data members can be set to public access and can be used throughout",Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.
16,0.07307527089682779,-0.16284103129843228,4.0,  lose once exit block code datas not,What is the difference between a data member and a local variable inside a member function?,"The local variable is lost once it exits the block of code, while the data member is not.",Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.
17,0.5716525034394455,-0.5331368194338982,4.0,  access modify datas only line declaration next closing lose memory,What is the difference between a data member and a local variable inside a member function?,Every member function can access and modify a data member. A local variable can only be used from the line of declaration to the next closing } before it is lost from memory.,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.
18,-0.2012559421757179,-0.2809219359444713,5.0,  datas accessible classes where only available value lose when close,What is the difference between a data member and a local variable inside a member function?,"data member is accessible to all functions in the class, where local variable is only available to the member function and value is lost when function closes",Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.
19,-1.128367821080188,-0.000605876546019385,4.0,  declare classes definition outside bodies classes only declaration,What is the difference between a data member and a local variable inside a member function?,Data members are variables that are declared inside the class definition but outside of the bodies of the class member functions. Local variables can only be used within the function declaration.,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.
20,-0.23870233208771127,-0.5247928070725291,3.0,  datas accessed classes whereas not,What is the difference between a data member and a local variable inside a member function?,"The data member can be accessed outside of the class, whereas the local variable cannot.",Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.
21,-0.5347532076424751,2.2984802983873003,5.0,  not outside body when terminate value lose where as classes definition exist life object,What is the difference between a data member and a local variable inside a member function?,"Local variables cannot be used outside of that function body. When a function terminates the values of its local variables are lost. Where as data members are variables in a class definition, and they exist throughout the life of the object. ",Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.
22,0.3712939727852383,-0.20024152400275286,0.0,  have static change value freely,What is the difference between a data member and a local variable inside a member function?,a local variable in a member function has to be static. a data member can change its value freely.,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.
23,0.1653511604641362,-0.7883681116477055,5.0,  only useable define whereas available method classes,What is the difference between a data member and a local variable inside a member function?,"a local variable is only useable within the function it is defined, whereas a data member is available to any method within its class",Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.
24,-0.649868849691241,0.20627471682128845,5.0,  declare defination body not outside data accessible only classes,What is the difference between a data member and a local variable inside a member function?,Variable declared in a function defination's body cannot be used outside of that function.  Data members accessible only to member function of that class.,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.
25,-1.2447735696102935,1.9945946831640773,5.0,  declare definition body not outside body when terminate value lose,What is the difference between a data member and a local variable inside a member function?,"data members   local variables are declared in a function definition’s body. they Cannot be used outside of that function body. When a function terminates, the values of its local variables are lost.   ",Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.
26,0.6823000233564651,-0.6771266205793096,4.0,  only available function,What is the difference between a data member and a local variable inside a member function?,local variable is only available in the function.,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.
27,0.07637516171880261,-1.0146909800192425,4.0,  accessed only datas accessed classes,What is the difference between a data member and a local variable inside a member function?,local variables are accessed inside member functions only while data members   can be accessed throughout the class,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.
28,-0.001293428475481272,-1.1117922306499277,5.0,  datas accessible anywhere classes only accessible particular free exit,What is the difference between a data member and a local variable inside a member function?,"A data member is accessible anywhere in the class, while i local variable in a member function is only accessible in that particular function, and is freed after the function exits.",Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.
29,-1.9053060782007234,-0.650340420732987,3.0,  datas encapsulate classes object static share instance classes only block declare not whole classes other wise called global variable,What is the difference between a data member and a local variable inside a member function?,"a Data member is encapsulated within a class or object,  it is static and can be shared by all instances of that class.  however local variable's are only used from the function or block in which it is declared and not the whole class. other wise they would be called global variables. ",Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.
0,-1.7851238986216795,0.041043241892185764,2.0,  initialize object object classes classes perform task as display line text do kind mathematical operation,What is the difference between a constructor and a function?,A constructor initializes an object or objects of a class.  A function of a class performs a task such as display a line of text or do some kind of mathematical operations.,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type."
1,1.1933661711360668,1.2698188741102951,2.0,  not have nearly infinite purpose always create instance classes using change how does something not does change not only how,What is the difference between a constructor and a function?,"all constructors are functions but not all functions are constructors. Also functions can have nearly infinite purposes, while constructors always create an instance of whichever class you are using. You can change how a constructor does something but not what it does. With functions you can change not only the how but also the what.","A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type."
2,0.04472450156998829,1.6152809076398458,5.0,  regular only initialize object datas when create must give same name as classes not return value,What is the difference between a constructor and a function?,"Unlike regular functions, constructors are only used to initialize an object’s data when it is created. Constructors must also be given the same name as the class and cannot return any values. ","A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type."
3,0.8477625391402435,-0.8357006313216137,4.0,  typically intialize datas member allocate resource instance memory file etc not return value operation maybe globally define,What is the difference between a constructor and a function?,"A constructor typically used to intialize data members and allocate resources, for instance memory, files, etc.  Also a constructor cannot return values.  Functions are operations that maybe globally defined.","A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type."
4,2.2477281412220487,-0.39263631923193426,3.0,  not return value not specify return type normally declare public,What is the difference between a constructor and a function?,"Constructors cannot return values, so they cannot specify a return type. Normally, constructors are declared public.","A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type."
5,-1.5135132568750007,-1.2782854185636852,2.0,  method start new instance classes example : employee employee1 parameter start new instance object type employee simply module w program complete single desire task,What is the difference between a constructor and a function?,A constructor is a method that starts new instances of a class. (Example: Employee employee1(parameters) starts a new instance of object of type Employee). A function is simply a module w/in a program that completes its single desired task.,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type."
6,-1.192871833919697,-0.5699057254568921,4.0,  called whenever new object classes,What is the difference between a constructor and a function?,A constructor is called whenever a new object of that class is made.,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type."
7,4.877654395400656,-0.008273616569447218,3.0,  does not return date have return type return date not return datum have return type,What is the difference between a constructor and a function?,A constructor does not return any date and has no return type.  Functions can return date or not return data can have a return type.,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type."
8,-1.1983124676439503,-0.27811058081440687,4.0,  automatically called whenever instance classes create must explicitly called user,What is the difference between a constructor and a function?,"A constructor is automatically called whenever an instance of a class is created, a function must be explicitly called by the user. ","A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type."
9,2.2010181739012102,-0.3348063054232741,3.0,  not return value not specify return type like,What is the difference between a constructor and a function?,"constructors cannot return values, so they cannot specify a return type like functions can.","A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type."
10,-0.98781102890683,0.2006558547366532,4.0,  initialize object datas when create,What is the difference between a constructor and a function?,A constructor is a function used to initialize an object's data when it is created.,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type."
11,-0.5776315477571492,-1.5700986969499875,2.0,  initialise everything that nothing left empty random variouble modifies variable datum,What is the difference between a constructor and a function?,a constructor initialises everything so that nothing is left empty or with random varioubles and a function modifies those variables with data.,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type."
12,-0.26034612909404553,-1.1929203055228097,4.0,  initialize value execution instantiation provide default value,What is the difference between a constructor and a function?,A constructor initialized values at the execution of its instantiation. It provides default values.,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type."
13,-1.0429673968476671,-0.046459353682645,4.0,  set default value variable when object instantiate whereas interaction object,What is the difference between a constructor and a function?,"A constructor sets up the default values of variables when an object is instantiated, whereas a function allows interaction with that object.","A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type."
14,-0.7635260522555997,2.6534052939049184,3.0,  create object employed main program not execute code set code execute when called does not create new object,What is the difference between a constructor and a function?,"A constructor is used to create an object that can be employed in the main function of a program.  This may or may not execute code along with it.  A function is a set of code that executes when called, but does not create a new object.","A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type."
15,0.6259238537919769,-0.6541936827067545,3.0,  initialize datas member actually perform task not return value,What is the difference between a constructor and a function?,a constructor initializes data members but the functions actually perform tasks. Constructors cant return values either.,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type."
16,0.1644289785583281,-0.8782369581638998,3.0,  does not need type initialize variable,What is the difference between a constructor and a function?,"a constructor does not need a type, and it is used to initialize the variables.","A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type."
17,0.9798414372091466,-0.701280624872027,3.0,  do not have return type,What is the difference between a constructor and a function?,Constructors don't have a return type.,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type."
18,-1.4216788351159886,0.19245532604599092,2.0,  create classes object memory where perform action object,What is the difference between a constructor and a function?,constructor creates the class object into memory where functions perform actions against that object,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type."
19,0.7764796945273738,-0.696605806853732,3.0,  not return value,What is the difference between a constructor and a function?,constructors cannot return values,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type."
20,-0.5353988653833268,-1.2473865737698326,2.0,  initialize value usual perform sort operation,What is the difference between a constructor and a function?,A constructor initializes values and a function usual performs some sort of operation.,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type."
21,-0.3784865788604073,2.9346125021502427,5.0,  initialize object datas when create call implicitly when object create must define same name as classes not return value like,What is the difference between a constructor and a function?,A constructor is a function used to initialize an object's data when it is created. It's call is made implicitly when the object is created and must be defined with the same name as the class. Constructor also cannot return a value like a function can.,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type."
22,-0.5347392984624225,1.4539483982591057,4.0,  create instance classes have same name as classes not have same name as classes compute datum,What is the difference between a constructor and a function?,A constructor is used to create an instance of a class and has the same name as that class. A function cannot have the same name as a class and computes data.,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type."
23,-0.9813574347064876,-1.0540772405446264,2.0,  initialize classes instance perform task written,What is the difference between a constructor and a function?,"a constructor is a function that initializes a class instance, a function performs whatever task it is written for","A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type."
24,2.227637966722428,-0.18859517866999648,3.0,  not return value not even void get return value,What is the difference between a constructor and a function?,"A constructor cannot return values, not even void, but function get a return value.","A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type."
25,1.6188185926312286,1.810079834707155,5.0,  not return value not even void initialize object datas when create whereas create do specific task return value,What is the difference between a constructor and a function?,"a constructor cannot return values, its not even void. it is used to initialize an object's data when it is created. whereas, a function is created to do a specific task, and it can return values.","A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type."
26,-1.1103873105187998,-0.4709512406020201,1.0,  initialize object part object,What is the difference between a constructor and a function?,A constructor initializes an object. A function is part of an object.,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type."
27,-0.5655062327592536,-1.2599949496232579,2.0,  initialize datum then calculation function,What is the difference between a constructor and a function?,constructors initialize the data that is then used in the calculations of a   function,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type."
28,-1.1469883959212057,0.07593866012884033,4.0,  called when classes create called time,What is the difference between a constructor and a function?,"a constructor is called when the class is created, a function can be called any time.","A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type."
29,-1.8087378821611222,1.4112803157676337,4.0,  special block statement called when object create when declare statically constructed stack portion code large program perform specific task independent rest code,What is the difference between a constructor and a function?,"constructor is a special block of statements called when an object is created, either when it is declared statically or constructed on the stack. However a function is a portion of code within a larger program, which performs a specific task and independent to the rest of the code. ","A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type."
0,-0.06754045914593995,-0.23406021018572232,5.0,  compiler do not define one classes file,When does C++ create a default constructor?,The compiler creates a default constructor when we do not define one in our class file,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor."
1,0.7557123892223592,-0.5566847527981453,2.0,  compilation,When does C++ create a default constructor?,during compilation,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor."
2,-1.3051894025590258,0.25960054388785264,5.0,  classes not explicitly include constructor,When does C++ create a default constructor?,When the class does not explicitly include a constructor.,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor."
3,0.7611631394185492,-0.6125815530650877,3.0,  parameter set,When does C++ create a default constructor?,When no parameters are set is when a default constructor is used.,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor."
4,-1.3051894025590252,0.25960054388785236,5.0,  classes not explicitly include constructor,When does C++ create a default constructor?,When a class does not explicitly include a constructor.,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor."
5,0.7611631394185486,-0.6125815530650873,1.0,  argument passed,When does C++ create a default constructor?,When there are no arguments passed.,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor."
6,-0.10532654071135099,-0.15089248401912503,5.0,  not one already specific classes,When does C++ create a default constructor?,when there is not one already for a specific class,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor."
7,0.7646461543368029,-0.596197924290984,2.0,  program compile,When does C++ create a default constructor?,When it the programs compiles,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor."
8,0.14359299470700423,0.4688276797388273,5.0,  not provide programmer classes,When does C++ create a default constructor?,when a constructor is not provided by the programmer of the class,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor."
9,-1.305189402559025,0.25960054388785264,5.0,  classes not explicitly include constructor,When does C++ create a default constructor?,In any class that does not explicitly include a constructor.,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor."
10,0.7965933631590828,-0.6561797589431796,0.0,  main function code,When does C++ create a default constructor?,Before the main function of the code.,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor."
11,0.460169864801687,-0.2987052920977524,5.0,  whenevery do not specifiy own,When does C++ create a default constructor?,whenevery you dont specifiy your own,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor."
12,0.963427433371757,-0.0515879635060882,5.0,  non provide,When does C++ create a default constructor?,When non are provided,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor."
13,0.8471013437990991,-0.3859357112555919,5.0,  other present,When does C++ create a default constructor?,C++ will create a default constructor when no other constructor is present.,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor."
14,0.07831016219327233,0.24658366928368394,5.0,  was specified classes classes instantiate program,When does C++ create a default constructor?,"When no constructor was specified in the constructor's class, but the class is instantiated in a program.","If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor."
15,0.8200692180763894,-0.8594452927398653,5.0,  exist one needed parameterless declare,When does C++ create a default constructor?,"When no constructor exists when one is needed, a parameterless default constructor is declared.","If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor."
16,0.7053741409879357,-0.7723561827716656,5.0,  compiler automatically unless specifically one,When does C++ create a default constructor?,"The Compiler creates this automatically for you, unless you specifically create one.","If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor."
17,-1.305189402559025,0.25960054388785264,5.0,  classes not explicitly include constructor,When does C++ create a default constructor?,In any class that doesn't explicitly include a constructor.,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor."
18,0.921560089246356,-0.49122941838351825,5.0,  user define exist,When does C++ create a default constructor?,when no user-defined constructor exists,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor."
19,-0.9695505479362497,0.31985730293740355,5.0,  if classes not explicitly include compiler one,When does C++ create a default constructor?,"If a class does not explicitly include a constructor, the compiler creates one.","If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor."
20,0.2971692853302729,0.3080158822489764,5.0,  do not provide own constructor,When does C++ create a default constructor?,When you do not provide your own constructor.,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor."
21,-1.305189402559025,0.25960054388785264,5.0,  classes not explicitly include constructor,When does C++ create a default constructor?,When a class does not explicitly include a constructor.,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor."
22,0.6331607660003222,0.284596400545999,5.0,  compilation if not provide,When does C++ create a default constructor?,C++ creates a default constructor during compilation if one is not provided.,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor."
23,-1.305189402559025,0.25960054388785264,5.0,  classes not explicitly include constructor,When does C++ create a default constructor?,when a class does not explicitly include a constructor,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor."
24,-0.39069880670604096,0.5595398290439866,5.0,  compiler provide one classes not explictly include consructor,When does C++ create a default constructor?,The compiler will provide one when class does not explictly include a consructor.,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor."
25,-1.0081511973526287,-0.10104417145984693,5.0,  programmer not explicitly include constructor,When does C++ create a default constructor?,when the programmer does not explicitly include a constructor,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor."
26,-0.2243912888885519,-0.4597692794124176,5.0,  one not explicitly state,When does C++ create a default constructor?,When one is not explicitly stated.,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor."
27,-1.0052228669840124,0.09179551451303052,5.0,  one not explicitly include classes,When does C++ create a default constructor?,when one is not explicitly included by a class,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor."
28,-0.039381952661285774,-0.4087270275711411,5.0,  do not specify constructor,When does C++ create a default constructor?,When you dont specify any constructors.,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor."
29,1.9321865916707763,3.4111590339261935,5.0,  very beginning run complier matter fact generate own classes provide if other have been provide user,When does C++ create a default constructor?,"at the very beginning when you run a complier, matter a fact in C++ it generates its own default constructor for the class provided if no other constructors have been provided by user","If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor."
0,-1.1037377056619575,-0.5353623291946806,0.0,  one classes,How many constructors can be created for a class?,Just one per class.,Unlimited number.
1,2.2327765961840553,0.5874025025134199,5.0,  as as want long as have different parameter,How many constructors can be created for a class?,As many as you want so long as they have different parameters.,Unlimited number.
2,-1.2240276492882405,0.06048328637319402,5.0,  limit number because like function overloaded,How many constructors can be created for a class?,"There is no limit to the number of constructors in a class because like functions, constructors can be overloaded.",Unlimited number.
3,-1.1268745636977038,0.10652641649584106,1.0,  depend type being define typically have call object,How many constructors can be created for a class?,It depends what type of class is being defined.  Typically you would have a constructor call for each object.,Unlimited number.
4,-1.1415931505305108,0.31676880066284063,5.0,  c overloaded more than one having different parameter,How many constructors can be created for a class?,"In C++, the constructor can be overloaded in that there can be more than one constructor for a class, each having different parameters.",Unlimited number.
5,-1.0574867732924906,-0.4964972722201179,0.0, one,How many constructors can be created for a class?,1,Unlimited number.
6,-0.908118899599649,-0.1327844735346476,5.0,  number want,How many constructors can be created for a class?,any number you want,Unlimited number.
7,-1.0574867732924906,-0.4964972722201179,0.0, one,How many constructors can be created for a class?,One,Unlimited number.
8,0.7893002117083332,-0.07868906062311198,5.0,  default one overloaded as as necessary,How many constructors can be created for a class?,"by default just one, but they may be overloaded to create as many constructors as necessary",Unlimited number.
9,1.0492322907848417,-0.12581807276905121,5.0,  as as want,How many constructors can be created for a class?,as many as you want,Unlimited number.
10,1.0954854656301425,0.42131811464849434,5.0,  as as want different parameter,How many constructors can be created for a class?,"As many as you want, with different parameters.",Unlimited number.
11,-0.9406617835416807,-0.36276489956855973,5.0,  infinite,How many constructors can be created for a class?,infinite,Unlimited number.
12,0.9107601050458985,-0.18754678159736454,5.0,  as as need,How many constructors can be created for a class?,as many as you need,Unlimited number.
13,2.074691402974178,0.36564358980079203,5.0,  as as needed depending variable one wishes directly modify leave as default when instantiating object,How many constructors can be created for a class?,"As many as are needed, depending on how many variables one wishes to directly modify or leave as default when instantiating an object.",Unlimited number.
14,-1.5734888605425366,4.11290939394672,5.0,  very large amount give overloading when two different type number parameter said overloaded c recognize base type variable passed returned,How many constructors can be created for a class?,"A very large amount of constructors can be created for any given class through overloading.  When two constructors with a different type or number of parameters are created, they are said to be overloaded, and C++ can recognize which constructor to use based on the type of the variables that are passed/returned.",Unlimited number.
15,-1.1451776760939933,-0.1353627374874295,1.0,  depend number object object have constructor,How many constructors can be created for a class?,It depends on the number of objects. Each object should have a constructor.,Unlimited number.
16,1.1370310608193697,-0.16138900788933036,5.0,  theoretically unlimited as long as define programmer,How many constructors can be created for a class?,"Theoretically unlimited, as long as they are defined by the programmer.",Unlimited number.
17,0.9729666793227737,-0.16185897416179548,5.0,  as as needed,How many constructors can be created for a class?,As many as needed.,Unlimited number.
18,0.9926487070185614,-0.1703123646501871,5.0,  as as wanted needed,How many constructors can be created for a class?,as many as wanted/needed,Unlimited number.
19,-0.9630427151666542,-0.37041501780366615,4.0,  several,How many constructors can be created for a class?,several,Unlimited number.
20,-1.0574867732924906,-0.4964972722201179,0.0, one,How many constructors can be created for a class?,One,Unlimited number.
21,-1.0574867732924906,-0.4964972722201179,0.0, one,How many constructors can be created for a class?,one,Unlimited number.
22,1.1063850259677281,0.14647853916733802,5.0,  infinite as long as signature different,How many constructors can be created for a class?,There can be infinite constructors as long as the signature is different.,Unlimited number.
23,-1.2288943241559083,-0.24766073885025786,0.0,  depend number datum member classes,How many constructors can be created for a class?,that depends on the number of data members in the class,Unlimited number.
24,-1.0574867732924906,-0.4964972722201179,0.0, one,How many constructors can be created for a class?,one,Unlimited number.
25,-0.007796504065044478,-0.2965190171511566,5.0,  overload as need,How many constructors can be created for a class?,you can overload constructors as you need,Unlimited number.
26,1.116034074212715,-0.1485777586934115,5.0,  as as programmer want create,How many constructors can be created for a class?,As many as the programmer wants to create.,Unlimited number.
27,-1.0574867732924906,-0.4964972722201179,0.0, one,How many constructors can be created for a class?,one,Unlimited number.
28,3.3012977335346987,0.15805610743437848,5.0,  as as want as long as have unique argument list,How many constructors can be created for a class?,"as many as you want, as long as they each have a unique argument list",Unlimited number.
29,0.9297251188954501,-0.18154188374768523,5.0,  as as user decide,How many constructors can be created for a class?,as many as the user decides to use.,Unlimited number.
0,-0.360055829036226,-1.2169318180665378,5.0,  does not require additional information need passed parentheses execute require more than one parameter passed order complete task,What is the difference between a function prototype and a function definition?,A function definition does not require any additional information that needs to be passed inside its parenthesis  to execute. While a definition prototype requires more than one parameters to be passed in order to complete its  task.,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function."
1,10.258250472930653,0.21886458643214168,1.0,  where programmer declare that using other than main like declaring variable programmer know that using future have yet say where going how answer question give name character common practice place beginning program # include main gut where programmer decide going do tell how do take information give perform operation work sort of like brain brain take input base upon input perform way producing output defintion place outside main other own entity thought as,What is the difference between a function prototype and a function definition?,"The FUNCTION PROTOTYPE is where the programmer declares that he/she is using a function other than main( ). This is like declaring a variable, the programmer knows that he/she will be using in the future, but has yet to say where they are going to use it, or how. This is answers the question who, it gives the function a name and character. The function prototype, by common practice is placed at the beginning of the program after the #includes and before main( ). The FUNCTION DEFINITION is the guts of the function. This is where the programmer decides what the function is going to do and tells it how to do it. It takes whatever information it is given and performs the operations. It works sort of like the brain, the brain takes in input and based upon that input performs in some way producing an output. The function defintion is placed outside of main( ) and any other functions. A function is its own entity and should be thought of as such.","A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function."
2,-0.6250966717190471,1.7593237898678884,5.0,  tell compiler name return type number type parameter revealing implementation contained definition,What is the difference between a function prototype and a function definition?,"A function prototype tells the compiler the function name, return type and the number and type of parameters without revealing the implementations contained in the function definition.","A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function."
3,-0.12290341890380416,-0.8329364380639463,3.0,  declaration multiple parameter often require more than one piece information perform task,What is the difference between a function prototype and a function definition?,Function prototype is a declaration.  Function definitions (w/multiple parameters) often require more than one piece of information. to perform their tasks.,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function."
4,-0.5625957158347135,1.6610150672548962,5.0,  declaration tell compiler name return type type parameter,What is the difference between a function prototype and a function definition?,"A function prototype is a declaration of a function that tells the compiler the function's name, its return type and the types of its parameters.","A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function."
5,-0.5902792238567001,1.5850987893154995,5.0,  show only return type necessary parameter include name parameter define object actually capable doing,What is the difference between a function prototype and a function definition?,A prototype shows only return types and necessary parameters. The definition includes names for those parameters and defines what the object is actually capable of doing.,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function."
6,-0.5203248398083103,0.8926079684103573,5.0,  only tell user datas type go type returned,What is the difference between a function prototype and a function definition?,prototype only tells the user what data types go into a function and what type is returned.,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function."
7,-0.30585475648044147,0.4276866261358929,4.0,  locate h file only contain accesses name paramater type contain code perform activity,What is the difference between a function prototype and a function definition?,Function prototype is located in the .h file and only contains the access function name and paramater type.  Function definition contains the code for the function to perform its activity.,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function."
8,-0.654286910706772,0.7889253360529331,4.0,  reference compiler define later actual complete return type parameter etc,What is the difference between a function prototype and a function definition?,"a function prototype is used to reference the compiler to a function that will be defined later on, a function definition is the actual function itself, complete with return type, parameters, etc...","A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function."
9,-0.5810751543996261,-1.815254280319211,5.0,  describe classes public interface revealing classes member implementation,What is the difference between a function prototype and a function definition?,A function prototype describes a class's public interface without revealing the class's member function implementations,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function."
10,-0.2408898369481417,-0.6329818692763914,1.0,  that compiler check call correct,What is the difference between a function prototype and a function definition?,"Function definitions are just that, the definition. The prototype is what the compiler uses to check that calls to function are correct.","A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function."
11,0.08738925231341825,-0.9445806410864949,3.0,  does not include actual code where have code execute program,What is the difference between a function prototype and a function definition?,a prototype does not include any actual code where the function has all the code that is executed in the program.,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function."
12,-0.2295991325154636,-0.6056975602307353,3.0,  declare program definition,What is the difference between a function prototype and a function definition?,a prototype declares what will be used in the program and the definition,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function."
13,-0.6662763369827798,1.801598950855326,5.0,  lay name return type number type parameter expect receive certain order detail definition,What is the difference between a function prototype and a function definition?,"A function prototype lays out the name, return type, and the number and types of parameters the function expects to receive in a certain order.  The details for function prototypes are in the function definition.","A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function."
14,-0.44164981403241277,1.3860809371070457,5.0,  code define place bracket determine operation show public interface exposing implementation show name return type type paramater,What is the difference between a function prototype and a function definition?,"A function definition is the code that defines the function placed in the {} brackets that determines that function's operation.  A function prototype shows the function's public interface without exposing implementation.  It shows name, return type and type of paramaters.","A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function."
15,-0.21782398687067797,-0.6831404449016695,3.0,  declaration existing not as actual have create tell compiler does,What is the difference between a function prototype and a function definition?,"A function prototype is just a declaration of the function existing, and cant be used as an actual function. A function has to be created with a definition within to tell the compiler what the function does.","A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function."
16,-0.15134357680063718,-0.8245242659491184,5.0,  create framework call where actually programmed create final product,What is the difference between a function prototype and a function definition?,the Prototype creates a framework to call the function definition. While a function definition is where the function is actually programmed out and created into a final product.,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function."
17,-0.2396585310311323,-1.5467407885760056,5.0,  describe classes public interface providing how work contain inner working function,What is the difference between a function prototype and a function definition?,A function prototype describes the class's public interface without providing how the function works. A function definition contains the inner workings of the function.,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function."
18,-0.18041672110395687,-0.9486375006428845,3.0,  state classes compilation where actually hold source function,What is the difference between a function prototype and a function definition?,"prototype states all functions in that class before compilation, where the definition actually holds the source for the functions","A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function."
19,-0.23278498747918258,1.8088887788487158,5.0,  tell compiler name return type type parameter where as actually implement member function,What is the difference between a function prototype and a function definition?,"Function prototypes tell the compiler the function names, its return type, and the types of its parameters where as, function definitions actually implement the member functions.","A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function."
20,-0.4456647315374055,-0.2907331963236644,4.0,  specifies parameter include parameter code body,What is the difference between a function prototype and a function definition?,A function prototype just specifies parameters.  A function definition includes parameters and a code body.,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function."
21,-0.49201799350194403,-1.3945002184617359,5.0,  describe classes public interface,What is the difference between a function prototype and a function definition?,Function prototypes describe the class's public interface,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function."
22,-0.2894376647622706,2.1764510466949827,4.0,  only declare name return type input type define scope variable processes return function,What is the difference between a function prototype and a function definition?,"A prototype only declares name, return type, and input type. A definition also defines the scope, variables, process, and return function ","A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function."
23,-0.22441869264282072,-0.3906874587851233,4.0,  simply declare parameter include necessary variable actual code,What is the difference between a function prototype and a function definition?,"a function prototype simply declares the functions parameters, the function definition includes any necessary variables and the function's actual code","A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function."
24,-0.43016217347983543,-0.7819702269775379,3.0,  functgion declaration specifies does,What is the difference between a function prototype and a function definition?,"A functgion prototype is a declaration of a function , while function definition specifies what a function does","A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function."
25,-0.2797493792553475,0.9138935361822974,5.0,  include return type name parameter if needed write code do,What is the difference between a function prototype and a function definition?,"in a function prototype you include the return type, the name of the function, and its parameters if any are needed.  in a function definition you write the code of what the function will do. ","A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function."
26,-0.014240654782590961,-0.31862959888622827,5.0,  contain code work show output input name,What is the difference between a function prototype and a function definition?,"A function definition contains all the code for a function to work. A function prototype just shows the output, input and function name.","A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function."
27,-0.6386200054202845,-1.906963391190901,5.0,  describe classes public interface revealing classes member implementation show implementation being done,What is the difference between a function prototype and a function definition?,"function prototype describe the class's public interface without revealing   the class's member function implementations,  function definitions show what   implementations are being done","A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function."
28,-0.38778791478081903,1.1335985660168755,5.0,  only name return type argument list define above as well as actually does,What is the difference between a function prototype and a function definition?,"A function prototype only names the function, its return type, and it's argument list, while a definition defines the above as well as what the function actually does.","A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function."
29,-0.22062507057072916,-1.4191242814366298,5.0,  describe classes interface reviling inside as ca not do,What is the difference between a function prototype and a function definition?,function prototype describes a classes interface without reviling whatever is inside as for the function definition can't do that.,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function."
0,0.39656188047732066,-0.6889362892551517,5.0,  list function classes do hiding inner working function,What is the role of a header-file?,the role of a header file list all the functions a class can do while hiding the inner workings of its functions,"To store a class interface, including data members and member function prototypes."
1,-0.04666615975268477,-0.12631782443999087,3.0,  main share information various file,What is the role of a header-file?,The main role of header file is it is used to share information among various files.,"To store a class interface, including data members and member function prototypes."
2,-0.5532525558444069,-1.3961561598120624,4.0,  separate classes define compiler recognize classes when elsewhere,What is the role of a header-file?,Header files separate files in which classes are defined and allow the compiler to recognize classes when used elsewhere.,"To store a class interface, including data members and member function prototypes."
3,-0.03360613482726309,-0.10217017688647209,0.0, no,What is the role of a header-file?,No,"To store a class interface, including data members and member function prototypes."
4,-1.4657897061101768,2.2798788654269524,4.0,  consist reusable source code as classes that convention have h filename extension differ cpp contain source code,What is the role of a header-file?,"A header file consists of ""reusable"" source code such as a class in a file that by convention has a .h filename extension. This differs from .cpp files that contain ""source-code.""","To store a class interface, including data members and member function prototypes."
5,0.7309033970838643,-0.605528371217374,5.0,  provide information content library include definition classes declaration function datum type constant,What is the role of a header-file?,"To provide information about the contents of a library. It includes the definition of classes, declarations of functions, data types, and constants.","To store a class interface, including data members and member function prototypes."
6,0.4861713279511835,0.37015499180825756,5.0,  show user type go come out function does not user manipulate actual code function,What is the role of a header-file?,the header file shows the user what types go into and come out of a function but does not allow a user to manipulate the actual code for the function.,"To store a class interface, including data members and member function prototypes."
7,0.09729701597256904,-0.5997354856957867,3.0,  declare classes member function,What is the role of a header-file?,Header files declares the class member functions.,"To store a class interface, including data members and member function prototypes."
8,-0.07426943046054757,-0.09474447805900983,5.0,  separation declaration implementation separate file,What is the role of a header-file?,A header file allows for the separation of declaration and implementation into separate files.,"To store a class interface, including data members and member function prototypes."
9,-0.46887507119289834,-0.9432839979727328,0.0,  have accesses c standard library certain classes like classes string work,What is the role of a header-file?,the header file has access to the C++ Standard Library and makes certain classes like class string work.,"To store a class interface, including data members and member function prototypes."
10,-0.06450678120133532,-0.39209188416229596,2.0,  instruct compiler how interface library user written component,What is the role of a header-file?,“Instruct” the compiler on how to interface with library and user-written components.,"To store a class interface, including data members and member function prototypes."
11,0.04664394913701792,0.16181242478919208,3.0,  create comon area contain reusable function,What is the role of a header-file?,create a comon area to contain reusable functions.,"To store a class interface, including data members and member function prototypes."
12,0.0882635386300883,-0.5886206670626788,3.0,  declare function being classes,What is the role of a header-file?,to declare the functions being used in the classes,"To store a class interface, including data members and member function prototypes."
13,5.216197547634333,1.2191724166310225,0.0,  # include hat h hat container called act pulling name hat hat include function storage retrieval content mainly put peek pull,What is the role of a header-file?,"#include ""hat.h""  allows the use of the hat container, so called from the act of pulling names from a hat.  The header file for hat includes functions for storage and retrieval of it's contents, mainly put(), peek(), and pull().","To store a class interface, including data members and member function prototypes."
14,-0.5137089134094206,1.7548242015323154,5.0,  hold reusable content module separate actual source code easily reference employed different program,What is the role of a header-file?,To hold reusable content or modules separate from the actual  source-code file that can be easily referenced and employed for different programs.,"To store a class interface, including data members and member function prototypes."
15,0.2951888109953727,-0.3171378445550443,5.0,  store list prototye function datum member,What is the role of a header-file?,a header file is a file used to store a list of prototye functions and data members.,"To store a class interface, including data members and member function prototypes."
16,-0.9639820922119816,2.609843415955683,3.0,  cross communication method source help limit size individual program program one large lump code thus fairly hard debug traverse,What is the role of a header-file?,"A header file is a cross communication method between source files, to help limit the size of each individual program. Without header files a program will be 1 large lump of code and thus fairly hard to debug and traverse.","To store a class interface, including data members and member function prototypes."
17,-0.7025855365442641,0.735086384796044,3.0,  contain reusable source code other classes,What is the role of a header-file?,It contains reusable source code for use by other classes.,"To store a class interface, including data members and member function prototypes."
18,-0.09536025662839392,0.9717321808872931,4.0,  separate source code main function method classes include program direct coding usability,What is the role of a header-file?,"to separate the source code from the main function, allows the methods/classes to be included in the program without direct coding. allows re usability.","To store a class interface, including data members and member function prototypes."
19,-0.6275249349827368,1.1773014357059481,3.0,  have reusable source code that programer,What is the role of a header-file?,Header files have reusable source code in a file that a programer can use.,"To store a class interface, including data members and member function prototypes."
20,-0.24777348463527554,-0.4474905881623095,4.0,  hide definition detail classes help readability main c file,What is the role of a header-file?,To hide the definition and details of a class.  Also to help readability of the main C++ file.,"To store a class interface, including data members and member function prototypes."
21,-0.3652432980707465,-1.0615771328850343,3.0,  compiler recognize classes when elsewhere,What is the role of a header-file?,To allow the compiler to recognize the classes when used elsewhere.,"To store a class interface, including data members and member function prototypes."
22,-0.01993499194902369,-0.9965644904358151,5.0,  declare classes datum function available classes,What is the role of a header-file?,"A header file declares a class, its data, and functions available through that class.","To store a class interface, including data members and member function prototypes."
23,-0.30582724243919596,0.4397910859411264,3.0,  contain code multiple file,What is the role of a header-file?,header files contain code which can be used in multiple files,"To store a class interface, including data members and member function prototypes."
24,-0.3652432980707465,-1.0615771328850343,3.0,  compiler recognize classes when elsewhere,What is the role of a header-file?,Allow compiler to recognize the classes when used elsewhere,"To store a class interface, including data members and member function prototypes."
25,-0.3652432980707465,-1.0615771328850343,3.0,  compiler recognize classes when elsewhere,What is the role of a header-file?,Allow compiler to recognize the classes when used elsewhere,"To store a class interface, including data members and member function prototypes."
26,0.2291983428218371,-0.17758915082530408,3.0,  promote function reusuablitly,What is the role of a header-file?,To promote function reusuablitly,"To store a class interface, including data members and member function prototypes."
27,-0.16809899620487373,-0.5159187309656847,3.0,  classes definition place here,What is the role of a header-file?,class definitions are placed here,"To store a class interface, including data members and member function prototypes."
28,0.004654259884138662,-0.4043101953367364,4.0,  contain classes function prototype,What is the role of a header-file?,A header file usually contains class and/or function prototypes.,"To store a class interface, including data members and member function prototypes."
29,-0.143587887980998,-0.1382696699742738,0.0,  contain standard c library e string,What is the role of a header-file?,contains all the standard C++ library's i.e. string,"To store a class interface, including data members and member function prototypes."
0,0.3697970803342174,0.40889901993917105,4.0,  name program type parameter take brief description does,What does a function signature include?,"It includes the name of the program, the type of parameters it can take. It should also include a brief description of what the function does.",The name of the function and the types of the parameters.
1,0.8186392254884289,0.5039632440732085,1.0,  specific information as input output variable type how many,What does a function signature include?,it includes the specific information about the function such as input and output variable types and how many of each.,The name of the function and the types of the parameters.
2,-0.40078155487942557,-0.6069051242031683,5.0,  name type argument,What does a function signature include?,The function signature includes the name of the function and the types of its arguments.,The name of the function and the types of the parameters.
3,2.440760482538841,-0.8165809060770759,4.0,  consist prototype tell general information name parameter scope other miscellaneous information,What does a function signature include?,"A function signature consists of the function prototype.  This tells you the general information about a function, its name, parameters, what scope it is in, and other miscellaneous information.",The name of the function and the types of the parameters.
4,-0.4007815548794267,-0.6069051242031676,5.0,  name type argument,What does a function signature include?,It includes the name of the function and the types of its arguments.,The name of the function and the types of the parameters.
5,1.5283305438100276,-0.9535585497763908,4.0,  name paramater scope other general information,What does a function signature include?,"Name, paramaters, scope, and other general function information",The name of the function and the types of the parameters.
6,-0.169863237402698,1.1517936413028165,5.0,  name parameter list not return type must different,What does a function signature include?,It includes a function name and parameter list. Does not include return type. Function signatures must be different.,The name of the function and the types of the parameters.
7,0.35832562323299355,1.290031970083803,1.0,  input parameter return type,What does a function signature include?,input parameters and return type,The name of the function and the types of the parameters.
8,-1.0860913327438606,-0.052960281465372475,5.0,  portion prototyp tha have name argument not return type,What does a function signature include?,The portion of the function prototyp tha has the function name and the arguments but NOT the return type.,The name of the function and the types of the parameters.
9,-0.4007815548794267,-0.6069051242031678,5.0,  name type argument,What does a function signature include?,Name of the function and the types of it's arguments,The name of the function and the types of the parameters.
10,-0.4007815548794267,-0.6069051242031678,5.0,  name type argument,What does a function signature include?,The name of the function and the types of its arguments.,The name of the function and the types of the parameters.
11,-0.4007815548794267,-0.6069051242031678,5.0,  name type argument,What does a function signature include?,Includes the name of the function and the types of its arguments.,The name of the function and the types of the parameters.
12,-0.4838400829981301,0.80435431538362,5.0,  identification datum type parameter have name datas type variable,What does a function signature include?,"identification of a function and the data types of its parameters, it has the name, and the data type variables ",The name of the function and the types of the parameters.
13,0.35832562323299355,1.2900319700838028,1.0,  return type input parameter,What does a function signature include?,"a return type, and input parameters",The name of the function and the types of the parameters.
14,0.17159981192489607,-0.0015466572168681958,5.0,  method name input type,What does a function signature include?,The function signature includes the method name and the input types.,The name of the function and the types of the parameters.
15,-1.3098512623906946,0.15299836107234432,5.0,  name type argument not return type,What does a function signature include?,"A function signature includes the name of the function and types of arguments, but not the return type.  ",The name of the function and the types of the parameters.
16,0.17272400114934572,0.25430826301948856,1.0,  result type throw error,What does a function signature include?,The signature can include a result type and thrown errors.,The name of the function and the types of the parameters.
17,0.8292472562957739,-0.2989394248142109,5.0,  name input paramater,What does a function signature include?,"function name, and input paramaters",The name of the function and the types of the parameters.
18,-0.8346941472557492,0.08350215215707044,5.0,  name type argument number type order parameter appear,What does a function signature include?,"The name of the function and the types of its arguments. This includes the number, type, and order the parameters appear in.",The name of the function and the types of the parameters.
19,-0.4007815548794267,-0.6069051242031678,5.0,  name type argument,What does a function signature include?,the name of the function and the types of its arguments,The name of the function and the types of the parameters.
20,-0.4007815548794267,-0.6069051242031678,5.0,  name type argument,What does a function signature include?,A function signature includes the name of the function and the types of its arguments,The name of the function and the types of the parameters.
21,0.2634156773647185,1.2744813069701209,1.0,  return type parameter semi colon,What does a function signature include?,"A function signature includes a function's return type, parameters and semi-colon.",The name of the function and the types of the parameters.
22,-0.4007815548794267,-0.6069051242031678,5.0,  name type argument,What does a function signature include?,the name of the function and the types of its arguments,The name of the function and the types of the parameters.
23,0.836852289591668,0.058900695387813805,5.0,  name parameter,What does a function signature include?,the function's name and parameters,The name of the function and the types of the parameters.
24,-0.4007815548794267,-0.6069051242031678,5.0,  name type argument,What does a function signature include?,The name of the function and the types of its arguments.,The name of the function and the types of the parameters.
25,-0.3719298594856511,-0.7661244488816555,5.0,  portion prototype name type argument,What does a function signature include?,The portion of a function prototype that includes the name of the function and the types of its arguments,The name of the function and the types of the parameters.
26,0.836852289591668,0.058900695387813805,5.0,  name parameter,What does a function signature include?,the name of the function and its parameters,The name of the function and the types of the parameters.
27,0.836852289591668,0.058900695387813805,5.0,  name parameter,What does a function signature include?,The function name and parameters,The name of the function and the types of the parameters.
28,-0.4007815548794267,-0.6069051242031678,5.0,  name type argument,What does a function signature include?,name of function and types of arguments,The name of the function and the types of the parameters.
29,0.24193502592156754,1.2657706577380474,1.0,  return type parameter list,What does a function signature include?,a function's return type and parameter list,The name of the function and the types of the parameters.
30,-1.7995717489977556,0.30192452227632127,5.0,  name type argument not specify return type same scope must have unqiue signature,What does a function signature include?,"it includes the name of the function, and the types of its arguments. it does not specify the function return type. Function in the same scope must have unqiue signatures. ",The name of the function and the types of the parameters.
0,1.1503767476396098,-0.13327700511537618,5.0,  function follow deceleration source code file allowed have accesses retrain value execution program,What is the scope of global variables?,Any functions that follows their deceleration that  are in the source code file are allowed to have access the variables.  Also global scope variables retrain their value throughout the execution of the program.,File scope.
1,-0.3897678266939928,-0.26545397322785197,0.0,  accessed c file anywhere,What is the scope of global variables?,they can be accessed by any C++ file anywhere.,File scope.
2,-0.44204209244434955,-1.126919484027577,5.0,  have file scope,What is the scope of global variables?,Global variables have file scope.,File scope.
3,3.837075003225713,0.7764247249677827,0.0,  create placing declaration classes function definition retain value execution program reference function follow declaration definition source file,What is the scope of global variables?,The scope of global variables are created by placing variable declarations outside any class or function definition.  Global variables retain their values throughout the execution of the program and they can be referenced by any function that follows their declarations or definitions in the source file.,File scope.
4,0.007961249011593211,-0.5457532573110118,5.0,  identifier retain value execution program have file scope,What is the scope of global variables?,A global variable is an identifier that retains it's value throughout the execution of the program. It has file scope.,File scope.
5,-0.03359601359145254,-0.09116408435241276,3.0,  variables function as long as appropriate h file hold include,What is the scope of global variables?,Global Variables can be used in any function as long as the appropriate .h file that holds the variable is included,File scope.
6,1.964580290500472,0.39109361642059154,5.0,  accessed part program reference function follow declaration definition source file,What is the scope of global variables?,They can be accessed by any part of the program. It can be referenced by any function that follows the declarations or definitions in the source file.,File scope.
7,-0.574312072971807,-0.050073136755994896,1.0,  accese classes have object classes,What is the scope of global variables?,can be accesed by any classes that have and object of that variables class in it,File scope.
8,0.33405400582917827,-1.4506139300053833,5.0,  have file know function file,What is the scope of global variables?,Global variables have file-scope.  The variable is know to all functions throught the file,File scope.
9,-0.6136006463997451,0.7166218872910435,4.0,  entire program,What is the scope of global variables?,The entire program,File scope.
10,0.08207678247755029,-0.9110395081892974,5.0,  have file when place function,What is the scope of global variables?,They have file scope when placed outside a function.,File scope.
11,-0.41101881414716207,-0.8174065619169315,5.0,  file scope,What is the scope of global variables?,File scope.,File scope.
12,-0.5438131533813154,0.6036917164752984,4.0,  program,What is the scope of global variables?,They can be used throughout the program,File scope.
13,-0.5076011785556418,0.30598767263981913,1.0,  accessed classes wit object classes,What is the scope of global variables?,Global variable can b accessed by any class wit an object in the variables class,File scope.
14,-0.35482822315921314,-0.5194610967026311,5.0,  file level,What is the scope of global variables?,The scope of global variables is at the file level.,File scope.
15,-0.44204209244434917,-1.126919484027578,5.0,  have file scope,What is the scope of global variables?,Global variables all have file scope.,File scope.
16,-0.14391485837776274,0.8095976710239412,4.0,  accessible function program,What is the scope of global variables?,it is accessible by all functions within a program,File scope.
17,-0.8389074112350792,1.5269608737399951,4.0,  accessible anywhere program as long as public,What is the scope of global variables?,"variables accessible anywhere in the program, as long as they are public.",File scope.
18,1.596774561587658,-0.2534105616372996,5.0,  reference function following declaration definition source file,What is the scope of global variables?,They can be referenced by any function following their declaration or definition inside the source file.,File scope.
19,-0.6437693832988015,0.8518334354345084,4.0,  globally anywhere program,What is the scope of global variables?,"globally, anywhere in the program.",File scope.
20,-0.44204209244434917,-1.126919484027578,5.0,  have file scope,What is the scope of global variables?,Global variables have a file scope,File scope.
21,-0.6136006463997451,0.7166218872910434,4.0,  entire program,What is the scope of global variables?,The entire program.,File scope.
22,-0.3991564546121725,0.6477239775337794,4.0,  execution program,What is the scope of global variables?,throughout the execution of the program,File scope.
23,-0.09842548062312005,0.1883158717045409,4.0,  if declare function classes variable,What is the scope of global variables?,"If a variable is declared global, any function or class can use that variable.",File scope.
24,-0.36697065217996255,0.15509599202109262,5.0,  entire program file,What is the scope of global variables?,The entire program or file.,File scope.
25,-0.6299428378504007,0.08251423852515605,4.0,  throught programm,What is the scope of global variables?,throught the programm,File scope.
26,-0.6122374423282617,0.09520676398272718,4.0,  whole code,What is the scope of global variables?,the whole code,File scope.
27,-0.41101881414716207,-0.8174065619169315,5.0,  file scope,What is the scope of global variables?,File scope,File scope.
28,1.8226839064343099,-0.1884542326163567,5.0,  reference function follow declaration definition source file,What is the scope of global variables?,can be referenced by any function that follows their declarations or definitions in the source file,File scope.
29,-0.6597500531864567,1.233905860321069,4.0,  have program accessible anywhere program,What is the scope of global variables?,global variables have program scope (accessible anywhere in program),File scope.
30,-0.6232243062337772,0.3226761724578252,4.0,  exist entire script value change anytime code fucntion,What is the scope of global variables?,variables that exist throught the entire script. their values can be changed anytime in the code and fucntions.,File scope.
0,-0.25962712553675943,1.7982136838407223,4.0,  expand definition place once called as many time as need expand function,How does the compiler handle inline functions?,It expands the function's definition in that place.  Once the functions is called you can use it as many times as you need.  The compiler just expands on the function.,It makes a copy of the function code in every place where a function call is made.
1,6.074002488773781,0.44362562472854505,4.0,  when expand call code get inserted caller code stream conceptually similar happen # define macro depending zillion other thing improve performance because optimizer procedurally integrate called code — optimize called code caller,How does the compiler handle inline functions?,"When the compiler inline-expands a function call, the function's code gets inserted into the caller's code stream (conceptually similar to what happens with a #define macro). This can, depending on a zillion other things, improve performance, because the optimizer can procedurally integrate the called code — optimize the called code into the caller.   ",It makes a copy of the function code in every place where a function call is made.
2,-0.2865835393420054,-0.6404168061316056,5.0,  keyword advise copy code place avoid call typically ignore qualifier smallest function,How does the compiler handle inline functions?,The inline keyword advises the compiler to copy the function's code in place to avoid function calls; however the compiler can and typically does ignore the inline qualifier for all but the smallest functions.,It makes a copy of the function code in every place where a function call is made.
3,-0.9198900376662015,0.9602922902483151,2.0,  ignore qualifier typically smallest function,How does the compiler handle inline functions?,The compiler can ignore the inline qualifier and typically does so for all but the smallest functions.,It makes a copy of the function code in every place where a function call is made.
4,-0.052259257133097314,-1.693006267648573,5.0,  placing qualifier return type definition advise generate copy code place avoid call,How does the compiler handle inline functions?,"Placing the qualifier inline before a function's return type in the function definition ""advises"" the compiler to generate a copy of the function's code in place to avoid a function call.",It makes a copy of the function code in every place where a function call is made.
5,-0.5907557417636895,-0.39660803420405105,0.0,  declare header int main then call anytime main program quickly easily,How does the compiler handle inline functions?,You declare your inline function in the header or before your int main(). You then can call that function at anytime in your main program quickly and easily.,It makes a copy of the function code in every place where a function call is made.
6,0.06978364196991188,0.577126151134115,4.0,  expand small making code longer run faster,How does the compiler handle inline functions?,"It expands a small function out... making your code longer, but also makes it run faster.",It makes a copy of the function code in every place where a function call is made.
7,-0.6371975557946455,1.042349686762489,4.0,  not treated as separate unit like other function,How does the compiler handle inline functions?,the function is not treated as a separate unit like other functions,It makes a copy of the function code in every place where a function call is made.
8,-0.41806977472240775,-0.8133712482266847,5.0,  when program compile copy inplace avoiding call,How does the compiler handle inline functions?,"When the program compiles,it will copy the function inplace, avoiding a function call.",It makes a copy of the function code in every place where a function call is made.
9,0.06911992629532304,-0.47758778196448665,5.0,  replace instance call code resulting in longer faster program,How does the compiler handle inline functions?,"It replaces all instances of that function call with the inline code itself, resulting in longer but faster programs.",It makes a copy of the function code in every place where a function call is made.
10,-0.9198900376662013,0.960292290248316,2.0,  ignore qualifier typically smallest function,How does the compiler handle inline functions?,The compiler can ignore the inline qualifier and typically does so for all but the smallest functions.,It makes a copy of the function code in every place where a function call is made.
11,-0.9198900376662013,0.960292290248316,2.0,  ignore qualifier typically smallest function,How does the compiler handle inline functions?,Ignores the inline qualifier and typically does so for all but the smallest functions.,It makes a copy of the function code in every place where a function call is made.
12,-0.5725822160483511,0.8778202745439555,5.0,  if small enough expand run faster as avoid making many call function,How does the compiler handle inline functions?,If the function is small enough it will expand it but it will run faster as it will avoid making so many calls to the function.,It makes a copy of the function code in every place where a function call is made.
13,-0.7500331007750973,0.8829376562959277,2.0,  treat as same function,How does the compiler handle inline functions?,it treats them as the same function,It makes a copy of the function code in every place where a function call is made.
14,-0.6705200803415209,-0.002567182019319063,5.0,  copied place instead being reference,How does the compiler handle inline functions?,"Inline functions are copied in place, instead of being referenced.",It makes a copy of the function code in every place where a function call is made.
15,0.15139031966903851,-1.7077508218312056,5.0,  create copy code place not have call add call stack,How does the compiler handle inline functions?,"For inline functions, the compiler creates a copy of the function's code in place so it doesn't have to make a function call and add to the function call stack.",It makes a copy of the function code in every place where a function call is made.
16,-0.7894956420733572,-0.18209111139361475,5.0,  generate copy coding eliminate calling function,How does the compiler handle inline functions?,it generates a copy of the function's coding which eliminates calling the function,It makes a copy of the function code in every place where a function call is made.
17,-0.6296562072574217,0.2467682969337467,0.0,  not answered,How does the compiler handle inline functions?,not answered,It makes a copy of the function code in every place where a function call is made.
18,-0.09159760447331826,-0.7273693360000264,4.0,  generate copy code inserting program,How does the compiler handle inline functions?,It generates a copy of the function's code by by inserting it in the program.,It makes a copy of the function code in every place where a function call is made.
19,-0.22725334799061564,-0.6524240121661221,5.0,  tell copy code place avoid call typically ignore except smallest function,How does the compiler handle inline functions?,"tells the compiler to make a copy of function's code in place to avoid a function call.  it typically ignores it, except for the smallest functions.",It makes a copy of the function code in every place where a function call is made.
20,-0.9198900376662013,0.960292290248316,2.0,  ignore qualifier typically smallest function,How does the compiler handle inline functions?,The compiler can ignore the inline qualifier and typically does so for all but the smallest functions.,It makes a copy of the function code in every place where a function call is made.
21,0.09085463907742033,0.13902262586859887,4.0,  multiple copies code inserted program making bigger,How does the compiler handle inline functions?,"Multiple copies of the function code are inserted into the program, making it bigger.",It makes a copy of the function code in every place where a function call is made.
22,-0.7252347062801342,0.45609243843295083,2.0,  ignore qualifier,How does the compiler handle inline functions?,compiler ignores inline qualifier,It makes a copy of the function code in every place where a function call is made.
23,-0.6922491573529407,-0.44751355354165173,2.0,  generate copy if needed again,How does the compiler handle inline functions?,"It generates a copy of the function, if it is needed again.",It makes a copy of the function code in every place where a function call is made.
24,-0.6792210007900822,0.37723944979964974,5.0,  complier include copies instead making call only very small function,How does the compiler handle inline functions?,"The complier includes copies of inline functions instead of making function calls, but usually only with very small functions.",It makes a copy of the function code in every place where a function call is made.
25,0.16023252224644466,-1.6029512707129614,5.0,  generate copy code place when appropriate avoid call,How does the compiler handle inline functions?,Compiler generate a copy of the function's code in place (when appropriate) to avoid a function call,It makes a copy of the function code in every place where a function call is made.
26,-0.5988720672943085,-0.685163071628225,5.0,  instead calling time invoke replace call copy body,How does the compiler handle inline functions?,"instead of calling the function every time it is invoked, the compiler will replace the function call with a copy of the function body",It makes a copy of the function code in every place where a function call is made.
27,-0.4976410856865251,0.43865288908655203,4.0,  expand program,How does the compiler handle inline functions?,Expands the function into the program,It makes a copy of the function code in every place where a function call is made.
28,0.014756030698501349,-1.4754041631387402,5.0,  generate copy code place avoid call,How does the compiler handle inline functions?,it generates a copy of the functions code in place to avoid a function call,It makes a copy of the function code in every place where a function call is made.
29,0.14426730381687655,-0.060418902541790935,5.0,  call replace code was define function,How does the compiler handle inline functions?,the function call will be replaced by the code that was defined in the inline function,It makes a copy of the function code in every place where a function call is made.
30,6.074002488773783,0.4436256247285408,4.0,  when expand call code get inserted caller code stream conceptually similar happen # define macro depending zillion other thing improve performance because optimizer procedurally integrate called code — optimize called code caller,How does the compiler handle inline functions?,"When the compiler inline-expands a function call, the function's code gets inserted into the caller's code stream (conceptually similar to what happens with a #define macro). This can, depending on a zillion other things, improve performance, because the optimizer can procedurally integrate the called code — optimize the called code into the caller. ",It makes a copy of the function code in every place where a function call is made.
0,0.011732951424696441,1.0079029467741858,5.0,  overall program have better performance mean faster because does not have copy large amount datum,What is the main advantage associated with function arguments that are passed by reference?,Overall the program has better performance (means it is faster) because it does not have to copy large amounts of data.,It avoids making copies of large data structures when calling functions.
1,-1.1926543678587846,0.1428603042462901,5.0,  because ca not change original passing limit memory needed program,What is the main advantage associated with function arguments that are passed by reference?,because you can't change the original and passing by reference limits memory needed for the program.,It avoids making copies of large data structures when calling functions.
2,1.0533823076258793,1.6933969250138936,5.0,  passing eliminate passes value overhead copying large amount datum,What is the main advantage associated with function arguments that are passed by reference?,Passing by reference can eliminate the pass-by-value overhead of copying large amounts of data.,It avoids making copies of large data structures when calling functions.
3,-1.4618687811509603,1.3730613461221663,5.0,  often more efficient pass rather than large object compiler pass addresses object maintaining syntax have been access object,What is the main advantage associated with function arguments that are passed by reference?,"It is often more efficient to pass references, rather than large objects, to functions. This allows the compiler to pass the address of the object while maintaining the syntax that would have been used to access the object.",It avoids making copies of large data structures when calling functions.
4,1.0648475218415527,2.0923808095165626,5.0,  pass good performance reason because eliminate passes value overhead copying large amount datum,What is the main advantage associated with function arguments that are passed by reference?,"Pass by reference is good for performance reasons, because it can eliminate the pass by value overhead of copying large amounts of data.",It avoids making copies of large data structures when calling functions.
5,-0.9536543035447681,-0.019258590429912226,3.0,  do not alter original value variable was passed,What is the main advantage associated with function arguments that are passed by reference?,You do not alter the original value of the variable that was passed.,It avoids making copies of large data structures when calling functions.
6,-0.8523311444074759,-0.15840702086616826,4.0,  do not have copies stuff,What is the main advantage associated with function arguments that are passed by reference?,Don't have to make copies of stuff.,It avoids making copies of large data structures when calling functions.
7,-1.269059828684924,-0.3594189532678171,5.0,  do not unessesary memory space copy variable function,What is the main advantage associated with function arguments that are passed by reference?,you do not use unessesary memory space to copy variables between functions,It avoids making copies of large data structures when calling functions.
8,0.2165087197672544,0.0871826624744523,5.0,  elimitate need copy large amont datum,What is the main advantage associated with function arguments that are passed by reference?,It elimitates the need to copy large amonts of data,It avoids making copies of large data structures when calling functions.
9,0.24584561151748596,-0.6320094524775458,3.0,  change datum store variable directly,What is the main advantage associated with function arguments that are passed by reference?,The function can change the data stored in a variable passed by reference directly.,It avoids making copies of large data structures when calling functions.
10,0.9116386815329537,-1.1945874091313777,3.0,  gives called ability access modify caller datum,What is the main advantage associated with function arguments that are passed by reference?,Gives called function the ability to access and modify the caller’s argument data.,It avoids making copies of large data structures when calling functions.
11,1.1680295342704583,-1.4301172976505294,3.0,  gives called ability access modify caller datum directly,What is the main advantage associated with function arguments that are passed by reference?,Gives called function the ability to access and modify the caller’s argument data directly.,It avoids making copies of large data structures when calling functions.
12,-1.054248800398735,0.21261018667510773,3.0,  more efficient change variable not online outside that new value elsewhere,What is the main advantage associated with function arguments that are passed by reference?,It is more efficient and it changes the variable not online inside the function but outside so that the new value can be used elsewhere.,It avoids making copies of large data structures when calling functions.
13,-1.0715911680785917,-0.21027481260760347,5.0,  do not copy waste memory,What is the main advantage associated with function arguments that are passed by reference?,you don't make another copy and waste memory,It avoids making copies of large data structures when calling functions.
14,0.9703458077761938,1.5904574482558211,5.0,  passing eliminate copying large amount datum typical passes value,What is the main advantage associated with function arguments that are passed by reference?,"Passing by reference eliminates the copying of large amounts of data, typical with pass by value.",It avoids making copies of large data structures when calling functions.
15,-0.33058233353847577,0.6186874610853481,5.0,  if large size computing time memory space not waste copying passing pass give called permission read edit directly,What is the main advantage associated with function arguments that are passed by reference?,"If a function's arguments are large in size, computing time and memory space is not wasted copying down the argument and passing it to the function.  Also pass by reference gives the function called the permission to read edit the argument directly.",It avoids making copies of large data structures when calling functions.
16,1.510701417848505,-0.7818613324824495,3.0,  give accesses caller datum directly modifying datum,What is the main advantage associated with function arguments that are passed by reference?,"Gives access to the caller data directly, also it allows for modifying the data.",It avoids making copies of large data structures when calling functions.
17,-0.0018023412230932802,-0.684728917151594,4.0,  less overhead overall modify variable directly,What is the main advantage associated with function arguments that are passed by reference?,"less overhead overall, and you modify the variable directly.",It avoids making copies of large data structures when calling functions.
18,-0.2320808584641181,-0.934489050183811,3.0,  original variable being modified directly called function,What is the main advantage associated with function arguments that are passed by reference?,The original variable being referenced can be modified directly by the called function.,It avoids making copies of large data structures when calling functions.
19,1.1912610867294948,-1.2618939456843148,3.0,  give ability access modify caller datum directly,What is the main advantage associated with function arguments that are passed by reference?,gives function ability to access and modify the caller's argument data directly,It avoids making copies of large data structures when calling functions.
20,1.2711300113963053,-1.4071751855884633,3.0,  give called ability access modify caller datum directly,What is the main advantage associated with function arguments that are passed by reference?,Gives the called function the ability to access and modify the caller's argument data directly.,It avoids making copies of large data structures when calling functions.
21,-0.2836507713582558,0.6758687706067025,4.0,  less overhead than value especially when using large number,What is the main advantage associated with function arguments that are passed by reference?,"Less overhead than passed by value, especially when using large numbers.",It avoids making copies of large data structures when calling functions.
22,-0.5785981065760608,0.6273458022268439,5.0,  large datas item copying entire datas point reducing execution time amout memory space needed,What is the main advantage associated with function arguments that are passed by reference?,"large data items can be passed without copying the entire data point, reducing execution time and the amout of memory space needed ",It avoids making copies of large data structures when calling functions.
23,2.1571114428933433,0.19907502245135997,4.0,  datum modified directly instead making copy datum improves execution time large amount datum,What is the main advantage associated with function arguments that are passed by reference?,The data can be modified directly instead of making a copy of the data. Improves execution time with large amounts of data.,It avoids making copies of large data structures when calling functions.
24,0.016567137314611895,-0.7571875158777124,3.0,  directly modify reference,What is the main advantage associated with function arguments that are passed by reference?,Functions can directly modify arguments that are passed by reference.,It avoids making copies of large data structures when calling functions.
25,2.0362806410563707,0.8941031670567186,5.0,  give accesses modify caller datum directly eliminate passes value overhead copying large amount ofdata,What is the main advantage associated with function arguments that are passed by reference?,It gives access and modify the caller's argument data directly. It eliminate the pass by value overhead of copying large amounts ofdata,It avoids making copies of large data structures when calling functions.
26,-0.8710824102056591,-0.28597135037568694,4.0,  take less memory thus program faster,What is the main advantage associated with function arguments that are passed by reference?,"it takes less memory, thus it would make the program faster",It avoids making copies of large data structures when calling functions.
27,-0.08214278468120076,-0.8708624471159602,3.0,  able modify variable directly,What is the main advantage associated with function arguments that are passed by reference?,You are able to modify the variable that is referenced directly.,It avoids making copies of large data structures when calling functions.
28,-0.5930937961800801,1.3650196747762509,3.0,  if pass modify value as oppose passing value where not change value,What is the main advantage associated with function arguments that are passed by reference?,"if you pass by reference, you can modify the value as opposed to passing by value where you cannot change the value",It avoids making copies of large data structures when calling functions.
29,-1.6594931562043327,-0.10155185780596503,5.0,  only memory addresses send copy object send need run faster save memory,What is the main advantage associated with function arguments that are passed by reference?,"only the memory address is sent to the function, so no copy of the object sent needs to be made. It makes the function run faster, and saves memory.",It avoids making copies of large data structures when calling functions.
30,-1.3374479204396033,-1.4901573885848014,3.0,  actual dummy when subroutine procedure actual list identifies correspondence actual provide list dummy subprogram,What is the main advantage associated with function arguments that are passed by reference?,"Actual arguments are associated with dummy arguments when a function or subroutine is referenced. In a procedure reference, the actual argument list identifies the correspondence between the actual arguments provided in the list and the dummy arguments of the subprogram",It avoids making copies of large data structures when calling functions.
0,-1.7366240558108692,0.9073886571966412,5.0,  select proper execute base number type order argument call,How are overloaded functions differentiated by the compiler?,"The compiler selects the proper functions to execute based on number, types and order of arguments in the function call.","Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call."
1,0.8218676162173862,-0.6826959259509466,4.0,  condition input one function,How are overloaded functions differentiated by the compiler?,They differentiated by the compiler by the conditions/inputs used for one of the overloaded functions.,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call."
2,-0.16809710541568118,-0.19345537761498155,5.0,  distinguishes signature encode identifier number type parameter generate type safe linkage ensure proper called,How are overloaded functions differentiated by the compiler?,"The compiler distinguishes overloaded functions by their signatures. It encodes each function identifier with the number and types of its parameters to generate type-safe linkage, which ensures the proper overloaded function is called.","Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call."
3,0.10876138186991811,0.11936439266813204,5.0,  distinguished signature name mangling name decoration type safe linkage ensure that proper called type argument conform tpe parameter,How are overloaded functions differentiated by the compiler?,"Overloaded functions are distinguished by their signatures, Name mangling or name decoration, and type-safe linkage ensures that proper overloaded functions is called and types of the arguments conform to tpes to the parameters.","Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call."
4,-1.7366240558108588,0.907388657196634,5.0,  select proper execute base number type order argument call,How are overloaded functions differentiated by the compiler?,"The compiler selects proper function to execute based on number, types and order of arguments in the function call.","Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call."
5,0.45040017299254786,-0.5166831362935106,2.0,  type initilize int char etc,How are overloaded functions differentiated by the compiler?,"By the type they are initilized with (int, char, etc.)","Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call."
6,-1.7366240558108588,0.907388657196634,5.0,  select proper execute base number type order argument call,How are overloaded functions differentiated by the compiler?,"It selects the proper function to execute based on number, types and order of arguments in the function call.","Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call."
7,1.134131375123003,-0.56490756690366,1.0,  must have same return type different input parameter,How are overloaded functions differentiated by the compiler?,overloaded functions must have the same return type but different input parameters,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call."
8,-0.09787361709978726,-0.05353877061983998,5.0,  examine name type order argument function,How are overloaded functions differentiated by the compiler?,"It examines the names, types, and order of arguments on each function.","Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call."
9,0.6683107893024524,-0.8092756576908737,5.0,  unique signature,How are overloaded functions differentiated by the compiler?,unique function signatures,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call."
10,-1.0431239840624167,0.4773912995075544,5.0,  base number type order argument call,How are overloaded functions differentiated by the compiler?,"Is based on number, types, and order of arguments in the function call.","Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call."
11,-1.7366240558108588,0.907388657196634,5.0,  select proper execute base number type order argument call,How are overloaded functions differentiated by the compiler?,"Compiler selects proper function to execute based on number, types and order of arguments in the function call.","Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call."
12,0.6151244632247991,-0.7181746515089419,0.0,  not answered,How are overloaded functions differentiated by the compiler?,not answered,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call."
13,1.2230960350336653,-0.6172645890059728,1.0,  have have same return type different input parameter,How are overloaded functions differentiated by the compiler?,"they have to have same return type, but different input parameters","Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call."
14,0.6879934186041889,-0.7704641240193252,4.0,  parameter,How are overloaded functions differentiated by the compiler?,Overloaded functions are differentiated by their parameters.,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call."
15,-1.412674336646204,0.503708771511782,5.0,  select right execute number type order argument call,How are overloaded functions differentiated by the compiler?,"The compiler selects the right function to execute from the number, types and order of arguments in the function call.","Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call."
16,0.7688406713137662,-0.9503490523550728,3.0,  create set candidate then set viable function,How are overloaded functions differentiated by the compiler?,it creates a set of candidate functions then a set of viable functions,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call."
17,0.6522925112986947,-0.785349457745326,5.0,  signature,How are overloaded functions differentiated by the compiler?,their function signature.,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call."
18,0.17501307394892318,-0.40424778397963806,5.0,  number type parameter,How are overloaded functions differentiated by the compiler?,The number and type of its parameters.,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call."
19,0.6522925112986947,-0.785349457745326,5.0,  signature,How are overloaded functions differentiated by the compiler?,by their function signature,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call."
20,1.265570334791211,-0.5363857016185015,3.0,  have same name different parameter,How are overloaded functions differentiated by the compiler?,"They have the same name, just different parameters.","Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call."
21,-0.9168316218459012,0.19657505468256925,5.0,  differntiate number type order argument call,How are overloaded functions differentiated by the compiler?,"They are differntiated by number, types and order of arguments in the function call.","Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call."
22,-0.9168316218459005,0.1965750546825701,5.0,  look number type order argument call,How are overloaded functions differentiated by the compiler?,"it looks at the number, types, and order of arguments in the function call ","Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call."
23,0.6522925112986947,-0.785349457745326,5.0,  signature,How are overloaded functions differentiated by the compiler?,The compiler differentiates overloaded functions by their signature.,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call."
24,-0.5839258993024524,0.015999141559533997,5.0,  number type order argument,How are overloaded functions differentiated by the compiler?,"By the number, types, and order of their arguments","Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call."
25,-1.7366240558108588,0.907388657196634,5.0,  select proper execute base number type order argument call,How are overloaded functions differentiated by the compiler?,"Compiler selects proper function to execute based on number, types and order of arguments in the function call.","Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call."
26,0.6000189170347481,-0.6962949772590108,4.0,  paremeter,How are overloaded functions differentiated by the compiler?,paremeters,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call."
27,-0.15599834313575364,-0.23761864643492628,5.0,  number type order parameter,How are overloaded functions differentiated by the compiler?,"By the number, and the types and order of the  parameters.","Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call."
28,-0.25291448221777574,-0.15062999598517945,5.0,  number type argument,How are overloaded functions differentiated by the compiler?,by the number and type of arguments,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call."
29,0.2151127982721342,-0.46904334002038084,3.0,  signature return type argument list,How are overloaded functions differentiated by the compiler?,"by their signature (return type, argument list)","Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call."
30,3.540272709001366,4.680520669901399,1.0,  simply invovle haing method same name classes implement method subclasses override other word replace implementation super classes overloading concept providing different meaning object base context presence overloading one type polymorphism feature programing,How are overloaded functions differentiated by the compiler?,overloaded function simply invovles haing a method with the same name within the class. is used to implement a method for subclass which overrides in other words replaces the implementation of the super class. Overloading the concept of providing different meaning to a object based on the context of its presence. Overloading is one type of polymorphism and this is also a feature in programing.,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call."
0,-0.05195982620785677,1.6070489920144977,5.0,  base case simplest case problem that lead if does not happen then end as loop condition know terminate,"When defining a recursive function, what are possible causes for infinite recursion?","A base case that is the simplest case for a problem so that the function will lead to it, if this does not happen then it will end up as an infinite loop. And a condition to know when to terminate.   ","If the recursion step is defined incorrectly, or if the base case is not included."
1,2.5859721331673597,-0.27708515801211314,2.0,  badly designed algorithyms using non problem,"When defining a recursive function, what are possible causes for infinite recursion?",badly designed algorithyms. using recursion for a non recursive problem.,"If the recursion step is defined incorrectly, or if the base case is not included."
2,-0.5892518222330343,-1.2731685764250738,5.0,  occur base case omitted step written incorrectly that never converge base case,"When defining a recursive function, what are possible causes for infinite recursion?",Infinite recursion can occur when the base case is omitted or the recursion step is written incorrectly so that it never converges on the base case.,"If the recursion step is defined incorrectly, or if the base case is not included."
3,-1.7931498441617408,0.17141288742779465,5.0,  loop if condition not meet omitting base case writing step incorrectly that does not converge base case indefinite eventually exhausting memory,"When defining a recursive function, what are possible causes for infinite recursion?","Infinite recursion is an infinite loop if the condition is not met.  Either omitting the base case, or writing the recursion step incorrectly so that it does not converge on the base case causes ""indefinite"" recursion, eventually exhausting memory.  ","If the recursion step is defined incorrectly, or if the base case is not included."
4,-1.2608027706294167,-0.7114318304061102,5.0,  omitting base case writing step incorrectly that does not converge base case recursion,"When defining a recursive function, what are possible causes for infinite recursion?",Either omitting the base case or writing the recursion step incorrectly so that it does not converge on the base case can cause an infinite recursion.,"If the recursion step is defined incorrectly, or if the base case is not included."
5,0.4345036642073234,-0.2496925482072662,3.0,  not having base case return base value,"When defining a recursive function, what are possible causes for infinite recursion?",Not having a base case that returns a base value.,"If the recursion step is defined incorrectly, or if the base case is not included."
6,-1.609771534236125,-1.4321306829007547,5.0,  incorrect missing base case must reduce base case must get simple time run converge base case,"When defining a recursive function, what are possible causes for infinite recursion?",Incorrect or missing base case. Must reduce to the base case. The function must get simpler each time it is run (converge to the base case).,"If the recursion step is defined incorrectly, or if the base case is not included."
7,1.20209306719286,-0.5644292216891015,4.0,  base case change value,"When defining a recursive function, what are possible causes for infinite recursion?",no base case no change in values.,"If the recursion step is defined incorrectly, or if the base case is not included."
8,0.17229800258832806,2.4690043475076897,5.0,  if call problem does not diminish if does not diminish base case recursion,"When defining a recursive function, what are possible causes for infinite recursion?","If at each recursive call the problem does not diminish or if it does not diminish to a base case, can cause infinite recursion.","If the recursion step is defined incorrectly, or if the base case is not included."
9,0.8158530258660884,-1.0314122335232214,5.0,  omitting base case incorrectly calling step,"When defining a recursive function, what are possible causes for infinite recursion?",Omitting the base case or incorrectly calling the recursive step.,"If the recursion step is defined incorrectly, or if the base case is not included."
10,0.9714474829216445,-0.09711905636676187,4.0,  problem not reduce reach base case,"When defining a recursive function, what are possible causes for infinite recursion?",The recursive problem cannot be reduced to reach the base case.,"If the recursion step is defined incorrectly, or if the base case is not included."
11,-1.1703828583596299,-0.6277911424165051,5.0,  lack base case writing step incorrectly that does not converge base case,"When defining a recursive function, what are possible causes for infinite recursion?","Lack of defining a base case, or writing the recursion step incorrectly so that it does not converge on the base case","If the recursion step is defined incorrectly, or if the base case is not included."
12,1.4609867765936009,-0.01716331836415919,3.0,  not having proper case leave recursion,"When defining a recursive function, what are possible causes for infinite recursion?",Not having the proper case to leave the recursion,"If the recursion step is defined incorrectly, or if the base case is not included."
13,-0.29754813341979225,-0.26078513484735516,5.0,  base case call do not converge base case,"When defining a recursive function, what are possible causes for infinite recursion?","no base case, or the recursive calls do not converge to the base case","If the recursion step is defined incorrectly, or if the base case is not included."
14,-1.0057730846698936,-0.4210222059097683,5.0,  base case incorrectly written step does not converge base case lead recursion,"When defining a recursive function, what are possible causes for infinite recursion?","No base case, or an incorrectly written recursion step that does not converge on the base case will lead to infinite recursion.","If the recursion step is defined incorrectly, or if the base case is not included."
15,-2.7113271358388356,2.829028719570778,5.0,  if never reaches successfully define base case recurse forever happen many way as does not progress base case code poorly does not even contain base case,"When defining a recursive function, what are possible causes for infinite recursion?","If the recursion function never reaches or successfully defines the base case it will recurse forever.  This happens many ways, such as the function doesn't progress towards the base case, or the function is coded poorly and doesn't even contain a base case.","If the recursion step is defined incorrectly, or if the base case is not included."
16,-0.9496777778174176,-0.3226055180737835,5.0,  not creating base case case where base case never meet,"When defining a recursive function, what are possible causes for infinite recursion?"," not creating a base case, or in the case where the base case will never be met.","If the recursion step is defined incorrectly, or if the base case is not included."
17,1.5030956883294035,-0.13098697102515441,2.0,  improper handling case that not value able handle,"When defining a recursive function, what are possible causes for infinite recursion?",improper handling of cases such that not all possible values are able to be handled.,"If the recursion step is defined incorrectly, or if the base case is not included."
18,0.7223297088077154,0.3188929450731065,4.0,  base case step does not reduce problem call,"When defining a recursive function, what are possible causes for infinite recursion?",There is no base case. The recursion step doesn't reduce the problem during each recursive call.,"If the recursion step is defined incorrectly, or if the base case is not included."
19,0.8850623323284149,0.6508238464741393,2.0,  base case as single return does not include calling again static value end,"When defining a recursive function, what are possible causes for infinite recursion?","no base case, as in a single return that does not include calling the function again.  a static value to end at.","If the recursion step is defined incorrectly, or if the base case is not included."
20,-0.9390504412533706,-0.5228523524458046,5.0,  omitting base case writing step incorrectly does not reach base case recursion,"When defining a recursive function, what are possible causes for infinite recursion?","Either omitting the base case, or writing the recursion step incorrectly so the it does not reach the base case can cause infinite recursion.","If the recursion step is defined incorrectly, or if the base case is not included."
21,-0.8733444003774624,-0.1950582729793256,5.0,  omitting base case writing call that does not converge upon base case,"When defining a recursive function, what are possible causes for infinite recursion?",omitting the base case or writing the recursive call so that it does not converge upon the base case.,"If the recursion step is defined incorrectly, or if the base case is not included."
22,-1.231617744721982,-0.7370133720107421,5.0,  omitting base case writing step incorrectly that does not converge base case,"When defining a recursive function, what are possible causes for infinite recursion?","Either omitting the base case, or writing the recursion step incorrectly so that it does not converge on the base case","If the recursion step is defined incorrectly, or if the base case is not included."
23,0.8925016389101039,1.1020616535539245,4.0,  occur if base case define if call not varied,"When defining a recursive function, what are possible causes for infinite recursion?",Infinite recursion may occur if no base case is defined or if the call is not varied.,"If the recursion step is defined incorrectly, or if the base case is not included."
24,-0.9440136395298612,0.3335635687451715,5.0,  not having base case building processes does not converge base case,"When defining a recursive function, what are possible causes for infinite recursion?","Not having a base case, or building a recursion process that doesn't converge on the base case.","If the recursion step is defined incorrectly, or if the base case is not included."
25,0.8127034930463812,-1.002297836623787,5.0,  omitting base case writing step incorerectly,"When defining a recursive function, what are possible causes for infinite recursion?","Either omitting the base case, or writing the recursion step incorerectly ","If the recursion step is defined incorrectly, or if the base case is not included."
26,-1.3119653600871932,1.0688500538785632,5.0,  base case if programmar does not define base case as simplest case never get reached,"When defining a recursive function, what are possible causes for infinite recursion?",no base case or if the programmar does not define the base case as the simplest case and it never gets reached,"If the recursion step is defined incorrectly, or if the base case is not included."
27,-0.017525347183337394,-0.7566720427402778,5.0,  no easily reached base case base case at all,"When defining a recursive function, what are possible causes for infinite recursion?",No easily reached base case and no base case at all,"If the recursion step is defined incorrectly, or if the base case is not included."
28,1.058920962369971,-0.5586263673120524,5.0,  never allowed reach base case,"When defining a recursive function, what are possible causes for infinite recursion?",function is never allowed to reach the 'base case',"If the recursion step is defined incorrectly, or if the base case is not included."
29,-0.13347855931948066,-0.6842843132215642,5.0,  have base case base case never meet,"When defining a recursive function, what are possible causes for infinite recursion?","it has no base case, or the base case is never met","If the recursion step is defined incorrectly, or if the base case is not included."
30,3.3728723037172332,1.3229411412550214,1.0,  refer situation call type know as being said occur designed way as call self forever stopping cause,"When defining a recursive function, what are possible causes for infinite recursion?",recursion refers to situations in which functions call themselves. These types of functions are known as recursive functions. That being said Infinite recursion occurs when the function is designed in such a way as to call it self forever without stopping possible causes,"If the recursion step is defined incorrectly, or if the base case is not included."
0,-0.04281992138265643,0.65682455185861,5.0,  involve controlled repetition structure have termination test loop forever,What are the similarities between iteration and recursion?,"Both involve a controlled repetition structures, and they both have a termination test.  Also both of them can loop forever. ",They both involve repetition; they both have termination tests; they can both occur infinitely.
1,-1.8929690054044108,0.041052033326407715,1.0,  as discussed earlier process iterative action calculation where answer describe function relate,What are the similarities between iteration and recursion?,"As discussed earlier, recursion may be used to process iterative actions. Recursion is used for calculations where the answer can be described in a function that relates to itself.",They both involve repetition; they both have termination tests; they can both occur infinitely.
2,-0.2599659089083102,-0.6028942575624884,5.0,  base control statement involve repetition occur indefinitely,What are the similarities between iteration and recursion?,Both iteration and recursion are based on control statements and involve repetition. They can both also occur indefinitely.,They both involve repetition; they both have termination tests; they can both occur infinitely.
3,6.623086965231138,4.938319137140602,5.0,  base control statement repetition structure selection structure involve repetition explicitly repetition structure repeated function call involve termination test loop termination test base case gradually approach termination modifies counter loop termination test fail produce progressively simple version problem occur indefinitely if loop continuation condition never fail if step does not simplify problem,What are the similarities between iteration and recursion?,Both are based on a control statement         - Iteration-repetition structure         - Recursion-selection structure        Both involve repetition         -Iteration-explicitly uses repetition structure         -Recursion-repeated function calls        Both involve a termination test         -Iteration-loop-termination test         -Recursion-base case         Both gradually approach termination         -Iteration-modifies counter until loop-termination test fails         -Recursion-produces progressively simpler versions of problem        Both can occur indefinitely         -Iteration-if loop-continuation condition never fails         -Recursion-if recursion step does not simplify the problem,They both involve repetition; they both have termination tests; they can both occur infinitely.
4,1.8402863305007446,-1.2744635789300847,5.0,  have many : base control statement involve repetition involve termination test gradually approach termination occur infinitely,What are the similarities between iteration and recursion?,"Iteration and recursion have many similarities: both are based on a control statement, involve repetition, involve a termination test, gradually approach termination and can occur infinitely.",They both involve repetition; they both have termination tests; they can both occur infinitely.
5,-1.336079628503133,0.8632596354127091,5.0,  rely repetition have base case become infinite loop anything recursive solve iteration,What are the similarities between iteration and recursion?,"Both rely on repetition, both have a base case, both can become an infinite loop. Anything recursive can also be solved with iteration.",They both involve repetition; they both have termination tests; they can both occur infinitely.
6,-1.6331431508496639,1.9579890220725726,3.0,  repeat loop condition meet exit loop capable entering infinite loop,What are the similarities between iteration and recursion?,"Both will repeat (loop) until a condition is met, and exit the loop. Both are capable of entering an infinite loop.",They both involve repetition; they both have termination tests; they can both occur infinitely.
7,-2.0629599315580136,0.03615206248444783,2.0,  anything do iterativly do recursively,What are the similarities between iteration and recursion?,anything you can do iterativly you can do recursively,They both involve repetition; they both have termination tests; they can both occur infinitely.
8,-1.5171216367371236,0.04713228928776703,4.0,  repetative have end test,What are the similarities between iteration and recursion?,Both are repetative and both have a end test.,They both involve repetition; they both have termination tests; they can both occur infinitely.
9,-2.032659987541002,0.7562655528280745,3.0,  incorrectly writing result infinite loop perform same task over over,What are the similarities between iteration and recursion?,"Incorrectly writing either can result in infinite loops, both perform the same task over and over.",They both involve repetition; they both have termination tests; they can both occur infinitely.
10,1.8537227354110875,-1.2828793682419115,5.0,  base control statement involve repetition involve termination test gradually approach termination occur infinitely,What are the similarities between iteration and recursion?,Both are based on a control statement. Both involve repetition. Both involve a termination test. Both gradually approach termination. Both can occur infinitely.,They both involve repetition; they both have termination tests; they can both occur infinitely.
11,1.8537227354110875,-1.2828793682419115,5.0,  base control statement involve repetition involve termination test gradually approach termination occur infinitely,What are the similarities between iteration and recursion?,"Both are based on a control statement, Both involve repetition, Both involve a termination test, Both gradually approach termination, Both can occur infinitely",They both involve repetition; they both have termination tests; they can both occur infinitely.
12,-1.708530487592273,0.011689290094920052,0.0,  not answered,What are the similarities between iteration and recursion?,not answered,They both involve repetition; they both have termination tests; they can both occur infinitely.
13,-2.0629599315580136,0.03615206248444783,2.0,  anything do recursively do iteratively,What are the similarities between iteration and recursion?,anything you can do recursively you can do iteratively,They both involve repetition; they both have termination tests; they can both occur infinitely.
14,-0.7890911250905239,0.7492762232891295,2.0,  many problem solve both go condition infinite execution if termination test omitted,What are the similarities between iteration and recursion?,"Many problems can be solved by both iteration and recursion, and either may go into a condition of infinite execution if a termination test is omitted.",They both involve repetition; they both have termination tests; they can both occur infinitely.
15,1.7163230385569266,-1.2260111581091526,5.0,  repetition perform several simple operation algorithm successively reach certain limit involve termination test find limit slowly approach that termination limit base control statement as well if code poorly continue forever compiler computer lock shut halt operation,What are the similarities between iteration and recursion?,"Iteration and recursion both use repetition and perform several simple operations and algorithms successively until they reach a certain limit.  So both involve a termination test to find that limit and both slowly approach that termination limit.  Both are based on a control statement as well.    If coded poorly, both can continue on for forever until the compiler or the computer either locks up, shuts down or halts the operation.",They both involve repetition; they both have termination tests; they can both occur infinitely.
16,0.7824907439114922,-0.2670501856540908,5.0,  base control statement involve repetition involve termination test loop,What are the similarities between iteration and recursion?,"both based on control statement, involve repetition, and involve a termination test within loops",They both involve repetition; they both have termination tests; they can both occur infinitely.
17,-1.899320693104558,0.005804729075961407,1.0,  method repeating same task,What are the similarities between iteration and recursion?,they are methods of repeating the same task.,They both involve repetition; they both have termination tests; they can both occur infinitely.
18,-0.11242474923651752,0.3206505013512053,5.0,  involve termination test control statement repition solve problem result infinite loop,What are the similarities between iteration and recursion?,Both involve a termination test.   They use a control statement and repition to solve the problem.  They can also result in an infinite loop.,They both involve repetition; they both have termination tests; they can both occur infinitely.
19,0.7115011122955041,-0.7814180856394783,5.0,  base control statement involve repetition involve termination test,What are the similarities between iteration and recursion?,"based on a control statement, involve repetition, involve a termination test.",They both involve repetition; they both have termination tests; they can both occur infinitely.
20,1.6569887388319136,-1.3058786931259008,5.0,  basis control statement involve repetition involve termination test gradually approach termination occur infinitely,What are the similarities between iteration and recursion?,Both are bases on a control statement. Both involve repetition. Both involve a termination test. Both gradually approach termination. Both can occur infinitely.,They both involve repetition; they both have termination tests; they can both occur infinitely.
21,1.5031782178197182,-1.2848459724062236,5.0,  base control statement involve repitition involve termination test gradually approach termination potentially occur infinetly,What are the similarities between iteration and recursion?,"both based on a control statement, both involve repitition, both involve a termination test, both gradually approach termination, both can potentially occur infinetly.",They both involve repetition; they both have termination tests; they can both occur infinitely.
22,1.5375892300165916,-1.2101951981573036,5.0,  base control statement involve repetition involve termination case graduatlly approach that termination case occur infinitely,What are the similarities between iteration and recursion?,"they are both based on a control statement, both involve repetition, both involve a termination case, both graduatlly approach that termination case, and both can occur infinitely",They both involve repetition; they both have termination tests; they can both occur infinitely.
23,-0.7382442494690467,0.1305985813222992,5.0,  repetition control test terminate infinitely repeat if not define correctly,What are the similarities between iteration and recursion?,"They both use repetition, a control or test to terminate, and both can infinitely repeat if not defined correctly.",They both involve repetition; they both have termination tests; they can both occur infinitely.
24,2.056418387428739,-0.6362965789346567,5.0,  base control statement gradually approach termination ending termination test involve repetition repeat infinitely if termination requirement not meet,What are the similarities between iteration and recursion?,"Both are based on a control statement; both gradually approach termination ending with a termination test; both involve repetition, and can both repeat infinitely if their  termination requirements are not met.",They both involve repetition; they both have termination tests; they can both occur infinitely.
25,1.8537227354110875,-1.2828793682419115,5.0,  base control statement involve repetition involve termination test gradually approach termination occur infinitely,What are the similarities between iteration and recursion?,"both are based on a control statement, involve repetition and involve a termination test. both gradually approach termination, both can occur infinitely",They both involve repetition; they both have termination tests; they can both occur infinitely.
26,-1.7245559680174838,0.4655040085093414,3.0,  solve same type problem do task over over again cirtain conditional statement reached called base case recursion,What are the similarities between iteration and recursion?,they are used to solve the same type of problems. they do a task over and over again until a cirtain conditional statement is reached (its called the base case in recursion).,They both involve repetition; they both have termination tests; they can both occur infinitely.
27,0.3547004913004013,-0.892734119039922,5.0,  base control statement involve repetition involve terminal test occur infinitly,What are the similarities between iteration and recursion?,Based on control statement;  involve repetition; involve a terminal test; both can occur infinitly,They both involve repetition; they both have termination tests; they can both occur infinitely.
28,-0.5228244971342115,-0.03274407316129342,5.0,  repetition termination test eventually terminate occur infinately,What are the similarities between iteration and recursion?,"repetition, termination test, eventually terminate, occur infinately",They both involve repetition; they both have termination tests; they can both occur infinitely.
29,-1.5513350862450968,0.6474480127641357,3.0,  need have kind base case tell when loop need stop,What are the similarities between iteration and recursion?,both need to have some kind of base case to tell when the loop needs to stop.,They both involve repetition; they both have termination tests; they can both occur infinitely.
30,-2.4567255037944467,1.6990523121436636,2.0,  able do repetiive task recurisve call different parameter define exit clause guaranteeed reached iterative include loop iterate pre determined number time check exit clause time,What are the similarities between iteration and recursion?,"they both are able to do repetiive tasks. however recurisve calls itself with different parameters and defines and exit clause that is guaranteeed to be reached. Iterative includes a loop which iterates a pre-determined number of times, or checks for an exit clause every time through",They both involve repetition; they both have termination tests; they can both occur infinitely.
0,-1.0405638657745921,1.3749817282792458,3.0,  int n[ten ] ten integer int n[arraysize ] where arraysize positive integer define user,What are the two different ways of specifying the length of an array?,int n[10]; //array of 10 integers and int n[arraySize] //where arraySize is some positive integer defined by the user,"In the array declaration, or by using an initializer list."
1,0.12898005620211675,-1.203131038188253,3.0,  inputing element coding giving specifacation as size possible when giving specifacation tell grow as needed,What are the two different ways of specifying the length of an array?,by either inputing the different elements in the array at coding or giving the array specifacations as to the size of the array. it is also possible when giving it specifacations to tell the array to grow as needed.,"In the array declaration, or by using an initializer list."
2,0.11971381995874976,-0.31328284218322927,5.0,  initialize using initializer list declaration initializing size constant variable,What are the two different ways of specifying the length of an array?,You can initialize and array by using an initializer list in its declaration or by initializing its size with a constant variable.,"In the array declaration, or by using an initializer list."
3,-0.39784102040255176,-0.753245681190458,2.0,  pass vector,What are the two different ways of specifying the length of an array?,Pass the length along with the array or use a vector.,"In the array declaration, or by using an initializer list."
4,-0.4560286392941647,0.3009516288118809,5.0,  one declare size using variable equal integer other if size omitted declaration compiler determine size base size initializer list,What are the two different ways of specifying the length of an array?,"One way is to declare a size of the array using a variable that is equal to an integer. The other way, if the size is omitted in the declaration, the compiler determines the size of the array based on the size of the initializer list.","In the array declaration, or by using an initializer list."
5,-0.6517367877506146,1.1474848274030678,5.0,  declaration int [ x ] initilizer int array[]= 0 1 2 etc,What are the two different ways of specifying the length of an array?,"In the declaration (int array [x]) or with an initilizer (int array[]={0,1,2,etc.}","In the array declaration, or by using an initializer list."
6,-0.7972441011808731,1.7282049474471881,5.0,  1 declare int array[10 ] initialize int [ ] = 0 1 2 3 compiler assume size 4,What are the two different ways of specifying the length of an array?,"1. Declare the length of the array (int array[10];) 2. Initialize the array (int array[] = {0, 1, 2, 3}; //compiler will assume size of 4)","In the array declaration, or by using an initializer list."
7,-0.41846422224900937,-0.8053342674616286,2.0,  statically dynamically,What are the two different ways of specifying the length of an array?,statically and dynamically,"In the array declaration, or by using an initializer list."
8,-1.572152788348977,2.948456002141941,3.0,  explicitly int array[10 ] variable int size = 10 int array[size ],What are the two different ways of specifying the length of an array?,Explicitly int array[10]; or by variable const int size = 10; int array[size];,"In the array declaration, or by using an initializer list."
9,3.476494004827434,-0.2916703856876804,5.0,  explicitly specified inputing number element bracket [ ] declaration implicitly including initializer list number [ ] compiler automatically declare proper number element needed list,What are the two different ways of specifying the length of an array?,"Array lengths can be explicitly specified by inputing the number of elements between the brackets [ ] during declaration, or implicitly by including an initializer list WITHOUT specifying a number between [ ], the compiler will automatically declare the array with the proper number of elements needed for the list. ","In the array declaration, or by using an initializer list."
10,-0.2609092724373556,-0.6944173217615021,2.0,  specify size constant variable setting element calculation,What are the two different ways of specifying the length of an array?,Specify an arrays size with a constant variable. And setting array elements with calculations.,"In the array declaration, or by using an initializer list."
11,-0.4349275032937891,-0.9841315958330543,4.0,  statically using dynamically using [ ],What are the two different ways of specifying the length of an array?,"statically, using {} and dynamically, using []","In the array declaration, or by using an initializer list."
12,-0.7685512256615143,-0.3735108678246391,4.0,  define as array[5 ] array[1 2 3 4 5 ],What are the two different ways of specifying the length of an array?,"define it as array[5] or array[1,2,3,4,5]","In the array declaration, or by using an initializer list."
13,-0.4041926781520509,-0.7706089128236709,2.0,  static dynamic,What are the two different ways of specifying the length of an array?,Static and dynamic.,"In the array declaration, or by using an initializer list."
14,0.4796678737253391,-0.47388246330176104,5.0,  manually bracket automatically initializer list,What are the two different ways of specifying the length of an array?,manually inside the brackets or automatically via an initializer list,"In the array declaration, or by using an initializer list."
15,3.6218679344081735,2.862924768503748,5.0,  initializer list simply tell compiler how many element want initializer list : int [ ] = 10 2 3 4 five elemental declaration : int b[five ] have five element already initialize,What are the two different ways of specifying the length of an array?,"You can use an initializer list, or simply tell the compiler how many elements you want in the array.  For an Initializer list:  int a[] = {10, 2, 3, -4, 5};  For an elemental declaration: int b[5];  Both arrays have 5 elements in them, but array a is already initialized.","In the array declaration, or by using an initializer list."
16,-1.9312389932975331,-0.7176446610991774,4.0,  string specify strlen arrayname command get string integer where initiate size start ex array[40 ] possible forty then passed object actual ammout declare initializing program,What are the two different ways of specifying the length of an array?,"In a string you can specify with the strlen(arrayname) command. This gets the length of the string. Another way is with integers where you initiate the size from the start, ex array[40] specifying a possible length of up to 40. Then it is passed by an object the actual ammout in the array. Another way is to declare it in an initializing program. ","In the array declaration, or by using an initializer list."
17,-0.2679031769492703,-0.6561016944117338,5.0,  implicit namely when give value like 1 2 3 4 5 6 7 8 9 compiler automatically give size static declaration,What are the two different ways of specifying the length of an array?,"Implicit, namely when you give it values, like {1,2,3,4,5,6,7,8,9}, at which the compiler will automatically give this a size. Static, during the declaration. ","In the array declaration, or by using an initializer list."
18,1.0751464683644099,1.3775754423686373,5.0,  supply integer bracket compiler count number element initializer list int n[5 ] int n [ ] = 1 2 3 4 5,What are the two different ways of specifying the length of an array?,"Supply an integer inside the brackets or the compiler counts the number of elements in the initializer list. int n[5]; int n[] = { 1,2,3,4,5 }","In the array declaration, or by using an initializer list."
19,-0.7279302935737509,-0.6906351520561483,5.0,  initializing specific initializing declaring content,What are the two different ways of specifying the length of an array?,either initializing the array with a specific length or initializing an array while declaring its contents.,"In the array declaration, or by using an initializer list."
20,0.37709328731972297,-0.5156388191204718,5.0,  bracket using initializer list,What are the two different ways of specifying the length of an array?,within the brackets or by using an initializer list.,"In the array declaration, or by using an initializer list."
21,0.4654152921727479,-1.0606573238071255,3.0,  specify number element declaration constant using constant variable future scalability,What are the two different ways of specifying the length of an array?,specify the number of elements in the array declaration with a constant or using a constant variable for future scalability,"In the array declaration, or by using an initializer list."
22,-0.1099213185360658,-0.7654703926962187,3.0,  number variable,What are the two different ways of specifying the length of an array?,with a number and with a variable,"In the array declaration, or by using an initializer list."
23,-0.8154170225047733,1.3286541812804509,5.0,  explicitly declaring bracket e int array[50 ] implicitly initializing several value e int [ ] = 1 2 3,What are the two different ways of specifying the length of an array?,"explicitly, by declaring it in brackets (i.e. int array[50];) and implicitly, by initializing several values (i.e. int array[] = {1, 2, 3};)","In the array declaration, or by using an initializer list."
24,-0.5490509622537229,-0.12611234515873285,4.0,  one a[10 ] other a[arraysize ] = [ 1 2 3 4 5 6 7 8 9 10,What are the two different ways of specifying the length of an array?,"one way of specifying of array is A[10] ; other way of specifying array is a[arraysize] = [1,2,3,4,5,6,7,8,9,10}","In the array declaration, or by using an initializer list."
25,0.0612990158146906,-0.33140331330648787,5.0,  1 initializing declaration initializer list 2 size constant variable,What are the two different ways of specifying the length of an array?,1-Initializing an array in a declaration with an initializer list 2-Specifying an arrays size with a constant variable,"In the array declaration, or by using an initializer list."
26,-1.0840760385124575,1.1394322590642572,5.0,  initializing size bracket : int a[100 ] initializing assigning variable : int [ ] = 1 2 3,What are the two different ways of specifying the length of an array?,"Initializing the size in the brackets: int a[100]; Initializing the length by assigning variables: int a[] = {1,2,3};","In the array declaration, or by using an initializer list."
27,1.040987823008049,-0.4684520327560688,5.0,  user define value number element initializer list,What are the two different ways of specifying the length of an array?,user defined value or by the number of elements in initializer list,"In the array declaration, or by using an initializer list."
28,-0.018233876333111385,-0.7888674118952306,5.0,  assign size bracket when declare [ 3 ] have set how many item set equal 1 2 3,What are the two different ways of specifying the length of an array?,"you can assign the size of it inside the brackets when you declare the array [3], or you can have it set by how many items you set the array equal to {1,2,3}","In the array declaration, or by using an initializer list."
29,1.8597182107047239,-1.4244672627371162,3.0,  arraylist have program ask how many element have as obj have member number slot have,What are the two different ways of specifying the length of an array?,"use an arraylist, or have your program ask the array how many elements it has. As an obj it it should have member length that is the number of slots it has. ","In the array declaration, or by using an initializer list."
0,-0.20965495108038124,-1.125985486760267,1.0,  char much easier manipulate than as object because store separately rather than as whole,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,"strings that are used in an char array are much easier to manipulate than as a string object, because each character is stored separately rather than as a whole",The strings declared using an array of characters have a null element added at the end of the array.
1,-0.22179010929573625,-0.7872805410795478,1.0,  less storage have change all once permutation word store needing actually access change variable change how accessed,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,"the type string uses less storage and you have to change the string all at once. with an array of characters you can make permutations of words using the characters stored in the array, without needing to actually access and change the variables. with an array of characters you can just change how they're accessed.",The strings declared using an array of characters have a null element added at the end of the array.
2,-0.47522092751513934,1.2899988634262762,5.0,  programmer must provide null terminating must ensure large enough hold null terminating character,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,"Unlike in a string declared using type string, in a string declared using an array of characters the programmer must provide the null terminating character and must ensure the array is large enough to hold the string and null terminating character.",The strings declared using an array of characters have a null element added at the end of the array.
3,-0.20247357159401136,0.3085525287405174,5.0,  represented arrays end null object like other example : s,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,"All strings represented by character arrays end with the null character. You declare an object of type string just like any other type, for example:  string s; ",The strings declared using an array of characters have a null element added at the end of the array.
4,-0.40632551481951895,-0.5658539848152656,1.0,  store manipulate rather than having variable,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,"By using an array of characters, one can store and manipulate the strings rather than just having a type string variable.",The strings declared using an array of characters have a null element added at the end of the array.
5,-0.31780357072981574,-0.5109853217154069,0.0,  char single letter actual word char arrays,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,type string is an array of chars that will make an array of single letter characters while an array of strings will be an actual array of words (or an array of char arrays),The strings declared using an array of characters have a null element added at the end of the array.
6,0.24450684643548332,0.6920835223108543,2.0,  basically same end w null denoting end size char have potential size must limited,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,"They're basically the same, however, a string ends w/ a null character, denoting the end of the string (and the size). A char array has potential to be any size, so it must be declared or limited.",The strings declared using an array of characters have a null element added at the end of the array.
7,-0.27477340257505095,0.4651772864837371,4.0,  classes standard library have method modify whereas char able modifie user,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,string is a class in the standard library and has method that modify it. Whereas the char array is on able to be modifie by the user.,The strings declared using an array of characters have a null element added at the end of the array.
8,-0.2410405519144383,-0.37074739474299356,3.0,  limited size declaring end acknowledge white space,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,"By using an array of characters, you are limited to the size of the array of characters.  By declaring by type the end of the string is acknowledged by white space.",The strings declared using an array of characters have a null element added at the end of the array.
9,0.5801972767371243,5.545747997539722,5.0,  datas classes designed handle datum have many function build classes library deal subject same rule other real additional functionality that classes deal null implicitly must handle null explicitly,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,"The data class type string are designed to handle character data, and has many functions built into the class library to deal with them. An array of characters however is subject to all the same rules of any other array with no real additional functionality. Another difference is that the string class deals with the null character implicitly, unlike an array of characters, which must handle the null character explicitly. ",The strings declared using an array of characters have a null element added at the end of the array.
10,-0.22859956222242644,0.07050903432954478,5.0,  contain special termination called null string,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,string declared used in an array of characters contains each character in the array and a special string-termination character called the null character versus the type string.,The strings declared using an array of characters have a null element added at the end of the array.
11,-0.3796705143269271,-0.7394816135244856,2.0,  char read as individual literal read entire string,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,A char array reads a string as each individual character. A string literal array reads the entire string.,The strings declared using an array of characters have a null element added at the end of the array.
12,0.27793741192594734,-0.46048760992926424,4.0,  only hold as many as size not that limited,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,array of characters can only hold as many characters as the array size and strings are not that limited.,The strings declared using an array of characters have a null element added at the end of the array.
13,-0.15505434715426866,0.3405788127401694,3.0,  sting only modified function classes modified user,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,"Stings can only be modified by functions of the String class, an array of characters can be modified by the user",The strings declared using an array of characters have a null element added at the end of the array.
14,-0.23966593980361003,0.35004676192580086,3.0,  if contain additional terminating null character,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,"if by type string, the array contains an additional terminating null character",The strings declared using an array of characters have a null element added at the end of the array.
15,-0.16358524297475674,0.5296197345649325,5.0,  have null 0 end signify end does not have,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,The array of characters has a null character \0 at the end of the array to signify the array's end.  The string does not have this.,The strings declared using an array of characters have a null element added at the end of the array.
16,-0.08687538070169387,-0.5667704372052655,2.0,  that not part list at all where as one actually able pointed detected,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,strings with type string are just that. Strings. They are not part of an array list at all where as one declared by an array is actually an array of characters able to be pointed and detected.,The strings declared using an array of characters have a null element added at the end of the array.
17,-0.11200176829158334,0.031718845229570636,4.0,  have set length have virtually unlimited length,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,"the array of characters has a set length, while the type string has virtually unlimited length.",The strings declared using an array of characters have a null element added at the end of the array.
18,-0.6428424652680448,-0.6836988630274925,1.0,  char individual letter accessed directly subscript notation subscript return entire string,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,Char array - Individual letters can be accessed directly with array subscript notation.  String array - array subscript will return the entire string.,The strings declared using an array of characters have a null element added at the end of the array.
19,0.16828421380983158,-0.7384960819719084,5.0,  need termination as well as size specification whether explicit implicit,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,array of characters need a termination character as well as size specification whether its explicit or implicit.,The strings declared using an array of characters have a null element added at the end of the array.
20,-0.4385316640314062,-0.46438552410781553,1.0,  when individual accessed manipulate,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,when using an array individual characters can be accessed and manipulated.,The strings declared using an array of characters have a null element added at the end of the array.
21,-0.09963192742681547,-0.2315219734763402,4.0,  could result datum losses if not initialize large enough,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,strings declared using an array of characters could result in data loss if character array not initialized large enough.,The strings declared using an array of characters have a null element added at the end of the array.
22,-0.14938791819438912,-0.691177538270964,3.0,  passed reference therefore if change memory change not variable,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,"an array is passed by reference therefore if an array of characters is changed, the memory is changed not just the variable",The strings declared using an array of characters have a null element added at the end of the array.
23,-0.5205520288874769,-0.21073012219231385,3.0,  have several build function not available when char individual more directly accessible than string,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,"the type string has several built-in functions not available when using a char array, but the individual characters in an array or more directly accessible than the characters in a string type string.",The strings declared using an array of characters have a null element added at the end of the array.
24,-0.6289823174512181,-0.6339248266909716,0.0,  declaring include white space declaring does not include white space,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,"declaring a string, it includes white spaces but declaring a array of character does not include white spaces",The strings declared using an array of characters have a null element added at the end of the array.
25,-0.17390493194337675,0.43367301672587605,5.0,  have one element does not have termination element null,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,"an array of characters has one element a string doesnt have. it is the termination element, or ""null""",The strings declared using an array of characters have a null element added at the end of the array.
26,-0.4279548298527752,-0.40601837689012665,4.0,  vary length strings not extend length,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,Strings declared using the type string can vary in length. Strings declared using an array of characters can not extend past the array length.,The strings declared using an array of characters have a null element added at the end of the array.
27,-0.593518830645206,-0.47513552310303125,1.0,  not modify individual modify individual character,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,"cant modify individual characters of a type string array, character type array can modify individual characters",The strings declared using an array of characters have a null element added at the end of the array.
28,-0.3136601413282875,0.35987702587251147,3.0,  classes safe other character,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,"the type string is a class and is safer, while the other is just an array of characters.",The strings declared using an array of characters have a null element added at the end of the array.
29,6.43257666111996,-0.7549022103860624,1.0,  collection similar datum ex : int a[10 ] ten indicate size [ ] index give only integer value where as mean collection group declaration have datatype cause storage allocate memory capable holding predetermined number symbol arrays contain value non reference datum multiple arrary same type,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,"array  it is the collection of similar data types ex:int a[10]  ten indicates the size of array. [ ] is index of array, we can give only integer values to array of a.  where as string mean collection of group of characters.  string declarations have a datatype usually causes storage to be allocated in memory that is capable of holding some predetermined number of symbols.    However  Arrays can be declared to contain values of any non reference data type. Multiple arrarys of the same type ",The strings declared using an array of characters have a null element added at the end of the array.
0,-0.45019974003348434,-0.3581269532105609,5.0,  reference only,How are arrays passed to functions?,by reference only,by reference.
1,-0.4748183030319737,-0.3630693278167659,4.0,  reference pointer element array,How are arrays passed to functions?,a reference pointer to an element in the array.,by reference.
2,-0.33413424857146234,-0.39796725731393123,5.0,  arrays reference,How are arrays passed to functions?,Arrays are passed to functions by reference.,by reference.
3,-0.3341342485714627,-0.3979672573139336,5.0,  arrays reference,How are arrays passed to functions?,Arrays are passed by reference.,by reference.
4,-0.1076942066267567,0.03665489628110556,4.0,  must pass size ex size,How are arrays passed to functions?,"you must pass the array and its size to the function. Ex. function(array, size);",by reference.
5,1.2268398022351463,6.2101621655210515,3.0,  same way pass anything else do not have specify length char pass sending name example : char str[20 ] ispalindrome str send char ispalindrome otherwise need send length as well,How are arrays passed to functions?,"Usually the same way you pass anything else... you do not have to specify the length of a char array, just pass it to the function by sending the name of the array.  Example: char str[20]; isPalindrome(str); // this sends the char array to the function isPalindrome.  Otherwise, would need to send the length of the array as well.",by reference.
6,0.07900313232369387,0.30947372190572214,4.0,  pass pointer first item pass size,How are arrays passed to functions?,you pass a pointer to the first item and also pass the size.,by reference.
7,-0.43574749910297306,-0.3413192665201393,5.0,  reference,How are arrays passed to functions?,By reference.,by reference.
8,-0.41413046446293,-0.2649135213401036,4.0,  two part size that being avoid out bound error,How are arrays passed to functions?,"In two parts, the array itself, and it's size, so that the function it's being passed to can avoid out of bounds errors.",by reference.
9,-0.023469106349351426,0.23604061473268034,5.0,  specify name bracket size normally as argument process specific number element arrays reference individual element value take as argument,How are arrays passed to functions?,Specify array name without brackets. Array size is normally passed as another argument so the function can process the specific number of elements in the array. Arrays are passed by reference. Individual array elements passed by value. Functions that take arrays as arguments.,by reference.
10,-0.334134248571463,-0.3979672573139323,5.0,  arrays reference,How are arrays passed to functions?,Arrays are passed by reference.,by reference.
11,-0.4637874026367521,0.0962185114020344,3.0,  same way [ ] declaration actual function,How are arrays passed to functions?,the same way but with [] at the declaration and the actual function.,by reference.
12,-0.33844571639455195,0.1013505802998817,3.0,  specify name bracket,How are arrays passed to functions?,specify the array name without brackets.,by reference.
13,-0.43574749910297306,-0.3413192665201393,5.0,  reference,How are arrays passed to functions?,by reference,by reference.
14,7.534674611624162,-1.330361408672774,5.0,  pass name : int bin [ 10 ] pass like : jingle bin jingle must declare correctly order receive prototype void jingle int [ ] definition initialization : void jingle int [ ] worth noting that arrays reference as not copy large over over burn memory give complete control,How are arrays passed to functions?,"You pass the name of the array to the function. So for: int bin [10]; you pass it to an array like so: jingle(bin); but jingle must be declared correctly in order to receive an array, either with prototype void jingle (int []); or with the definition in its initialization: void jingle (int array[]);  It's also worth noting that arrays are passed to function by reference, so as to not copy large arrays over and over and burn memory.  This gives the function complete control over the array however.",by reference.
15,-0.4129356777858497,-0.28149137044407097,1.0,  called then must loop get set character,How are arrays passed to functions?,They are called by the function then the function must loop through the array to get the set of characters.,by reference.
16,-0.45930075743232796,-0.20283424931054958,5.0,  reference default unless specify later unmodifiable,How are arrays passed to functions?,"by reference by default, unless you specify const, at which the later will make the array unmodifiable.",by reference.
17,-0.37861735714984496,-0.07130228957148825,4.0,  recieve both size as parameter arrayname,How are arrays passed to functions?,"The function recieves both the array and the array size as parameters. function(arrayName, arraySize)",by reference.
18,-0.20920843067435418,-0.06855021735847763,5.0,  specifying name passing as reference argument function,How are arrays passed to functions?,specifying array name and passing as reference in an argument into the function,by reference.
19,-0.035829717803436086,0.36811024387903024,4.0,  1st must specify name bracket then name size as two argument call,How are arrays passed to functions?,1st you must specify the array name without brackets and then the array name and size are passed as two arguments in the function call.,by reference.
20,-0.17812239058525361,-0.12581247917187885,5.0,  arrays reference passing starting addresses programmer specifies name bracket passes size as argument process specific number element array,How are arrays passed to functions?,"arrays are passed by reference, passing the starting address of array. programmer specifies the array name without brackets and passes the array size as another argument so the function can process the specific number of elements in the array",by reference.
21,-0.45019974003348406,-0.35812695321056437,5.0,  reference only,How are arrays passed to functions?,by reference only,by reference.
22,-0.43574749910297306,-0.3413192665201393,5.0,  reference,How are arrays passed to functions?,by reference,by reference.
23,-0.43574749910297306,-0.3413192665201393,5.0,  reference,How are arrays passed to functions?,by reference,by reference.
24,-0.4701383102111134,-0.20984303515966798,5.0,  refrence,How are arrays passed to functions?,by refrence,by reference.
25,0.3288110643735164,-0.11416801275473766,4.0,  int [ ] int length,How are arrays passed to functions?,"function( int [], int length)",by reference.
26,-0.43574749910297306,-0.3413192665201393,5.0,  reference,How are arrays passed to functions?,by reference,by reference.
27,-0.43574749910297306,-0.3413192665201393,5.0,  reference,How are arrays passed to functions?,by reference,by reference.
28,-0.6855435490128259,-0.3675935449372576,1.0,  read variable store then return ever variable read then print content array,How are arrays passed to functions?,"The function reads the variables, stores them. then returns the what ever the variable reads. The function then prints the content of the array. ",by reference.
0,0.8322389145953213,5.232207155334661,5.0,  store new value were assigned element meaning if call function twice last value were returned first time if do then new value store reset original value,"What is the difference between an array declared as static, and one that is not?",a static array will store the new values that were assigned to each of its elements. meaning if you call a function twice it will use the last values that were returned the first time.  if you don't declare it static then the new values will not be stored and will be reset to their original value,"The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called."
1,-0.968585815521701,-0.0764815536630131,3.0,  only reference accessed creating object,"What is the difference between an array declared as static, and one that is not?",a static array can only be referenced not accessed. Also static arrays can be used without creating an object.,"The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called."
2,0.33255746206762044,0.6884567599675713,5.0,  create initialize time function destroyed when function terminate,"What is the difference between an array declared as static, and one that is not?",An array declared as static is not created and and initialized each time the function and it is also not destroyed when the function terminates.,"The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called."
3,2.2568655785956016,-1.4357361292714597,3.0,  program intialize local when declaration first encountered if initialize explicityly programmer earch element intialize zero compiler when create non member initialize at all c,"What is the difference between an array declared as static, and one that is not?","A program intializes static local arrays when their declarations are first encountered.  If a static array is not initialized explicityly by the programmer, earch element of that array is intialized to zero by the compiler when the array is created.  Non-static array members cannot be initialized at all in C++.","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called."
4,-1.0470398026218,-0.37128752870200576,3.0,  remain same size program execution,"What is the difference between an array declared as static, and one that is not?",Arrays that are static remain the same size throughout the program execution.,"The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called."
5,-0.7172250330558688,0.06093937131093105,5.0,  only initilize once non re initilize once program reaches initilization line again,"What is the difference between an array declared as static, and one that is not?","a static array will only be initilized once, a non static array will be re-initilized once the program reaches the initilization line again.","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called."
6,-0.7341625795360104,-0.1689730150822123,4.0,  available beginning program end w o declaration disappear if accessed right scope,"What is the difference between an array declared as static, and one that is not?",An array declared as static is available from beginning of program to end. One w/o static declaration disappears if it is not accessed within the right scope.,"The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called."
7,-1.9226391871056046,-0.7270510613024805,1.0,  have pre runtime size size change dynamic get size runtime,"What is the difference between an array declared as static, and one that is not?",a static array has pre-runtime size and that size cannot be changed. A dynamic array gets its size at runtime.,"The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called."
8,-0.46511312636671526,0.3749100559772969,5.0,  if create time called,"What is the difference between an array declared as static, and one that is not?","If an array is declared as static, it is not created each time the array is called.","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called."
9,3.5111577532140212,1.9033685834814031,5.0,  re initialize time function declaring called initialize only once declaration store value element duration program even if same function called multiple time only initialize once,"What is the difference between an array declared as static, and one that is not?","An array that is not declared as static will re-initialize every time the function declaring it is called. A static array will initialize only once, at the declaration, and will store the values in it's elements throughout the duration of the program, even if the same function is called multiple times, a static array will only initialize once.","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called."
10,1.6409694956765382,-1.0597368273571661,4.0,  element initialize zero if explicitly initialize does happen automatic local array,"What is the difference between an array declared as static, and one that is not?","All elements are initialized to zero if not explicitly initialized, this does not happen for automatic local arrays  ","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called."
11,2.0657898133944896,-1.1087851774555695,4.0,  element initialize zero if explicitly initialize non initialize zero,"What is the difference between an array declared as static, and one that is not?","All elements are initialized to zero if not explicitly initialized for a static array, while a non-static array is not initialized to zero.","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called."
12,-1.1203877998892324,-0.1780275688965961,1.0,  change,"What is the difference between an array declared as static, and one that is not?",static cannot be changed,"The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called."
13,-1.7227803764141782,-0.46001525394957143,3.0,  have set size change datum need space assigned could go size,"What is the difference between an array declared as static, and one that is not?","A static array has a set size that cannot change. The data may not need all of the space assigned, or could go beyond the size.","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called."
14,-1.1912359159485824,-0.22349777552178846,1.0,  member prevent naming conflict put global namespace allowing information hiding private public,"What is the difference between an array declared as static, and one that is not?","A static member prevents naming conflicts (not put into global namespace) while allowing for information hiding (private, public).","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called."
15,3.7815488580351455,-1.9561841601506442,5.0,  local exist duration program element initialize zero if explicitly initialize local element still same when called later unless specifically initialize something else does happen automatic arrays,"What is the difference between an array declared as static, and one that is not?",A static local array exists for the duration of the program and its elements are initialized to 0 if not explicitly initialized. So a static local array's elements will still be the same when called later unless specifically initialized to something else.  This doesn't happen for automatic arrays.,"The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called."
16,-1.4229894211993606,-0.5784678384041102,1.0,  declared size know program whereas non leave size undeclared open assigned later input purpose,"What is the difference between an array declared as static, and one that is not?","Static arrays are those with a declared size, that is known to the program, whereas non-static arrays leave the size undeclared and open so it can be assigned later. Usually used for input purposes. ","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called."
17,-0.6410486787720987,1.0508068949080847,5.0,  keep value end function non reinitialize time,"What is the difference between an array declared as static, and one that is not?","static arrays keep the values after the end of a function, while non static reinitialize every time.","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called."
18,0.8930866775457004,1.1615299855420993,5.0,  create initialize only once value destroyed when function terminate program automatic reset everytime function called,"What is the difference between an array declared as static, and one that is not?","Static arrays are created and initialized only once, and the values aren't destroyed  when the function terminates in the program. Automatic arrays reset everytime the function is called.","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called."
19,0.470147785102197,1.0986178077292217,5.0,  create initialize time program call function destroyed time function end program,"What is the difference between an array declared as static, and one that is not?","its not created and initialized each time program calls the function, and is not destroyed every time the function ends in the program.","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called."
20,0.5057396167879398,0.6583583131256332,5.0,  when destroyed function when create initialize time function call,"What is the difference between an array declared as static, and one that is not?","When we declare it static the array is not destroyed after the function is over.  When an array is not declared as static, the array is created and initialized every time a function calls it.","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called."
21,-0.7285321499329604,-0.3318754990016442,4.0,  exist duration program,"What is the difference between an array declared as static, and one that is not?",the static array exists for the duration of the program,"The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called."
22,-0.8399155220933441,0.03222769452945671,2.0,  only once,"What is the difference between an array declared as static, and one that is not?",an array declared as static can only be declared once,"The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called."
23,-0.4032923954399754,-0.038639392572330365,5.0,  exist memory program terminate whereas automatic normal remove when function create terminate,"What is the difference between an array declared as static, and one that is not?","A static array exists in memory until the program terminates, whereas an automatic (or normal) array is removed when the function that created it terminates","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called."
24,-1.0328331666783739,-0.14245566198517845,0.0,  answered,"What is the difference between an array declared as static, and one that is not?",not answered,"The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called."
25,2.6496226459094947,-1.4163666566739244,5.0,  only constant size automatic exist duration program initialize when declaration first encountered element initialize zero if explicitly initialize,"What is the difference between an array declared as static, and one that is not?",Only constants can be used to declare the size of automatic and static arrays Exists for the duration of the program Is initialized when its declaration is first encountered All elements are initialized to zero if not explicitly initialized,"The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called."
26,-1.0398483408104104,-0.25732548707453606,1.0,  change program,"What is the difference between an array declared as static, and one that is not?",A static array cannot be changed in the program.,"The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called."
27,-0.920050485335854,-0.27331831558619285,5.0,  arrays available program,"What is the difference between an array declared as static, and one that is not?",static arrays are available throughout the program,"The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called."
28,-0.7119532402875871,-1.1922987760900599,5.0,  allocate when program start free when program exit have limited scope allocate free when come out scope,"What is the difference between an array declared as static, and one that is not?","a static array is allocated when the program starts and is freed when the program exits but has limited scope, while an array that is not declared static is allocated and freed when it comes into and out of scope.","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called."
29,-1.310091563914423,-0.2648989431658492,1.0,  if fixed mean ca change size once storage have been allocate dynamic arrary resize,"What is the difference between an array declared as static, and one that is not?","if they are declared fixed or static that means they can't change size once their storage has been allocated, however one that is not or dynamic arrarys can be resized.   ","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called."
0,0.6980737387324746,-0.304885824465609,1.0,  at least 2 depending being,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"at least 2, depending on how many arrays are being used.","All the dimensions, except the first one."
1,0.4166037598350135,-0.5143944729909269,2.0,,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,all of them.,"All the dimensions, except the first one."
2,-0.3893736034489641,-0.08096054646075312,5.0,  must except first dimension,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"When passing a multi-dimensional array, all dimensions must be specified except for the first dimension.","All the dimensions, except the first one."
3,0.9679973907250871,-0.5504459840337118,2.0,  depend parameter multidimensional multideminsional have more than two dimension,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,It depends what parameters you are passing in a multidimensional.  A multideminsional can have more than two dimensions.,"All the dimensions, except the first one."
4,-0.34607040670108397,0.6184937471698343,5.0,  first not require subsequent s needed compiler,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,The first dimension is not required however the subsequent dimension(s) are needed for the compiler.,"All the dimensions, except the first one."
5,-0.1981194773030094,-0.19963128053750387,5.0,  first,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,all but the first,"All the dimensions, except the first one."
6,0.21577609794651473,-0.4169594666278999,2.0,  must specified,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,All of the dimensions must be specified.,"All the dimensions, except the first one."
7,-0.07632772232686807,-0.22656706471608085,1.0,  first one least,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,just the first one at least.,"All the dimensions, except the first one."
8,0.7230597509930572,-0.30588626922003564,4.0,  two paramater column [ ] [ 3 ],How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"Two paramaters, the array and how many columns.  array(a[],[3])","All the dimensions, except the first one."
9,-2.3385757302467534,1.0761037357644838,4.0,  size first omitted same regular first size must passed example [ 2][4][6 ] name multiarray passed : multiarray[][4][6 ] 2,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"The size of the first dimension can be omitted, same as a regular array. However, for every dimension outside the first, the size of those dimensions must be specified when passed, for example, a multi-dimensional array of [2][4][6] with the name MultiArray would be passed as: ""MultiArray[][4][6], 2""","All the dimensions, except the first one."
10,-1.1457925612710997,1.385216656386767,4.0,  size subsequent require compiler must know element skip move second element first dimension,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,Size of subsequent dimensions are required. Compiler must know how many elements to skip to move to the second element in the first dimension,"All the dimensions, except the first one."
11,-0.19811947730300936,-0.19963128053750384,5.0,  first,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,Every dimension after the first.,"All the dimensions, except the first one."
12,0.41660375983501274,-0.5143944729909261,2.0,,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,both,"All the dimensions, except the first one."
13,-0.7824605269151153,0.14023373222994828,5.0,  size first does not other do,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"the size of the first dimension does not need to be specified, but all other dimensions do.","All the dimensions, except the first one."
14,0.33801499173918015,-0.5460437689613856,1.0,  main multidimensional nee specified,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"when passing (in main) a multidimensional array to a function, no dimensions need be specified","All the dimensions, except the first one."
15,-3.0009569261194646,1.3813600286581473,5.0,  except first one compiler know memory addresses skip back 2nd element first size first does not specified,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"All dimensions except for the first one need to be specified when passing an array to a function, the compiler needs to know how many memory addresses to skip to make it back to the 2nd element in the first dimension.  The size of the first dimension does not need to be specified.","All the dimensions, except the first one."
16,0.4906983505625357,-0.6138732516843206,2.0,  most commonly row column,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,as many as there are dimensions. Most commonly just rows and columns,"All the dimensions, except the first one."
17,3.3718323435250945,4.098439754255734,1.0,  at least two always equal number expecting like blah [ ] [ ] [ ] [ ] require input blah [ ] [ ] [ ] require 3 blah [ ] [ ] require two array,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"at least 2, but it should always equal the number of dimensions that the argument is expecting... like...  blah[][][][] will require 4 dimensional array input. blah[][][] will require a 3 dimensional array. blah[][] will require a 2 dimensional array.","All the dimensions, except the first one."
18,0.3838579573434858,-0.5332599187492327,1.0,  none pass name,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"None, just pass the array name.","All the dimensions, except the first one."
19,-1.1746657666727252,0.32289009895023507,5.0,  subsequent first first not needed specified,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,all subsequent dimensions after the first dimension.  first is not needed to be specified.,"All the dimensions, except the first one."
20,-0.21287843778279572,-0.3333902470358171,5.0,  excluding first one,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"all dimensions, excluding the first one.","All the dimensions, except the first one."
21,-0.19811947730300936,-0.19963128053750384,5.0,  first,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,all dimensions but the first,"All the dimensions, except the first one."
22,-1.208973250450275,0.568794181030322,1.0,  first size rest nee only state first like [ 3 ] then [ ] [ ] [ ],How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,the first needs to be specified by size and the rest need only be stated( first like this [3] then [][][]),"All the dimensions, except the first one."
23,0.679421045883079,-0.7246243369125499,4.0,  one less than number contain,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,one less than the number of dimensions the array contains,"All the dimensions, except the first one."
24,0.28606129021474913,-0.4587161529935434,0.0,  not answered,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,not answered,"All the dimensions, except the first one."
25,0.407717473631251,-0.6361430449403355,1.0, one,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,one,"All the dimensions, except the first one."
26,-0.2885268373294936,-0.24644207720951566,5.0,  subsequent first one,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,All subsequent dimensions after the first one.,"All the dimensions, except the first one."
27,0.7371766514173912,-0.32703152621286885,1.0,  two more,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,two or more,"All the dimensions, except the first one."
28,0.682698582324566,-0.7234912811700609,4.0,  one less than total number dimension,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,1 less than the total number of dimensions,"All the dimensions, except the first one."
29,0.7433670164651697,-0.9351283854573788,2.0,  accessed using more than one index one least,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"Multi dimensional arrays are accessed using more than 1  index, one for each dimension at least. ","All the dimensions, except the first one."
0,3.666420380782238,1.7117020603306519,1.0,  take element array compare next element depending value two element switch then program compare new switched element next array,"In one sentence, what is the main idea implemented by insertion sort?","Takes an element of an array and compares it with the next element, depending on the values of the two elements they will switch and then the program will compare the new switched element with the next one in the array.","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left."
1,-2.0450200499192595,0.515651019790389,5.0,  divide list sorted unsorted region then take item unsorted region insert correct order sorted region,"In one sentence, what is the main idea implemented by insertion sort?","Insertion sort divides the list into sorted and unsorted regions, then takes each item from the unsorted region and inserts it into its correct order in the sorted region.","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left."
2,-1.197612224336685,0.6220780010221678,3.0,  sorted array list build entry time,"In one sentence, what is the main idea implemented by insertion sort?",The sorted array or list is built one entry at a time.,"Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left."
3,1.552345153078982,-1.9372118767633146,5.0,  start second element check see if less than element s left if insert corrected position,"In one sentence, what is the main idea implemented by insertion sort?",It starts with the second element and checks it to see if it is less than the element(s) to the left of it and if it is it inserts it into its corrected position.,"Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left."
4,-1.0349233022232738,-0.13918899139666022,1.0,  compare two number time swap entire list sorted,"In one sentence, what is the main idea implemented by insertion sort?",Compare two numbers at a time and swap until the entire list is sorted.,"Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left."
5,-1.6975052803604669,-0.036592236592052595,5.0,  assume first number sorted then move list insert number come corresponding place sorted side list,"In one sentence, what is the main idea implemented by insertion sort?","Assume the first number is sorted, then move down the list and 'insert' the numbers you come across into the corresponding place on the sorted side of the list.","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left."
6,-0.4967671488808703,0.860228070960907,5.0,  were iteration first item array sorted take k 1 item insert correct position already sorted element,"In one sentence, what is the main idea implemented by insertion sort?",insertion sort is were after k iterations the first k items in the array are sorted it take the k+1 item and inserts it into the correct position in the already sorted k elements.,"Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left."
7,0.9427923375273426,-0.6277348475995728,4.0,  looking 2nd element move forward place element correct spot,"In one sentence, what is the main idea implemented by insertion sort?",Looking at the 2nd element move forward and place the element in the correct spot.,"Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left."
8,0.8909095538639749,0.4253398366317289,5.0,  starting beginning array take element order place correct position relative previously sorted element,"In one sentence, what is the main idea implemented by insertion sort?","Starting at the beginning of an array, take each element in order and place it in it's correct position relative to all previously sorted elements. ","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left."
9,0.9688104802009083,-0.129620861648835,5.0,  element array removing element input datum inserting correct position,"In one sentence, what is the main idea implemented by insertion sort?",To sort the elements in an array by removing an element from the input data and inserting it at the correct position.,"Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left."
10,-0.3789706791382663,-0.4365791770946943,5.0,  remove element datum insert correct position already sorted list,"In one sentence, what is the main idea implemented by insertion sort?","Insertion sort removes an element from the data, and inserts it at the correct position in the already sorted list.","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left."
11,-1.1830297533437735,-1.7282230750299654,2.0,  take number choose pivot point insert number correct position pivot point,"In one sentence, what is the main idea implemented by insertion sort?",Take a number and choose a pivot point and insert the number in the correct position from the pivot point.,"Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left."
12,-0.7017242506394538,-1.1214682305841943,3.0,  have marker everything left value new value when moving right,"In one sentence, what is the main idea implemented by insertion sort?",have a marker and sort everything to the left of the value for every new value when moving to the right.,"Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left."
13,-0.8041651070859669,-1.2009942459615437,4.0,  take random variable right insert order left,"In one sentence, what is the main idea implemented by insertion sort?",The main idea behind insertion sort is to take a random variable from the right and insert it in order to the left.,"Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left."
14,2.1071548330272005,1.5725870248444542,5.0,  progresses list element determine where next element inserted already sorted array starting sorting using first two element,"In one sentence, what is the main idea implemented by insertion sort?",Insertion sort progresses through a list of elements and determines where the next element should be inserted into an already sorted array starting with sorting and using the first two elements.,"Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left."
15,-0.9025582591313324,-1.0244517722653614,4.0,  goes list only once picking integer putting desire position then continuing,"In one sentence, what is the main idea implemented by insertion sort?","it goes through the list only once, picking each integer and putting it in its desired position, then continuing. ","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left."
16,0.26434345823103494,0.35070945050182134,3.0,  inserting array item appropriate position smallest largest pivot start second element array,"In one sentence, what is the main idea implemented by insertion sort?",Inserting array items in to their appropriate positions from smallest to largest at a pivot which starts on the second element of the array.,"Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left."
17,-0.9387648833293695,-0.18105778509019288,1.0,  insert item proper position shifting large sorted array value right,"In one sentence, what is the main idea implemented by insertion sort?",Insert the item into its proper position by shifting larger sorted array values to the right.,"Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left."
18,-1.1344406313279778,0.5806507551145674,4.0,  comparison in sorted array build entry time,"In one sentence, what is the main idea implemented by insertion sort?",a comparison sort in which the sorted array is built one entry at a time,"Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left."
19,-0.23683925926672716,2.77069410081275,5.0,  algorithm where first element array sorted list other pick take unsorted array sorted array,"In one sentence, what is the main idea implemented by insertion sort?","Insertion sort is an algorithm where the first element of the array is in the sorted list, all the other pick one by one and taken from the unsorted array, to the sorted array.","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left."
20,-0.27060774679053656,-0.37846535693819766,5.0,  iteration take away element input datum inserting right position sorted list,"In one sentence, what is the main idea implemented by insertion sort?","Every iteration of an insertion sort takes away an element from the input data, inserting it at the right position in the sorted list.","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left."
21,-0.4971164454493184,0.44673559013578296,4.0,  create new array insert item place respect new array,"In one sentence, what is the main idea implemented by insertion sort?",the insertion sort creates a new array and inserts each item in its place with respect to the new array.,"Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left."
22,-1.0947526959285465,0.24412267087848497,5.0,  take entitity unsorted array order correct position entities have sorted,"In one sentence, what is the main idea implemented by insertion sort?","Insertion sort takes each entitity of an unsorted array in order, and sorts it into the correct position between the entities it has sorted.","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left."
23,2.958598041226901,-1.836373911608068,5.0,  take second element swap 1st if less keep there if large then goes third element insert right place respect first two element on,"In one sentence, what is the main idea implemented by insertion sort?","it takes the second element and swaps it with the 1st if it is less and keeps it there if its larger, then it goes to the third element and inserts it in the right places with respect to the first 2 elements and so on... ","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left."
24,2.7265871313849357,0.11286745599624588,3.0,  starting first element array following element put place determining if smaller large than starting element,"In one sentence, what is the main idea implemented by insertion sort?","Starting with the first element in the array, each following element is put in place by determining if it is smaller or larger than the starting element.","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left."
25,-1.0047148112530975,0.5307519306770554,5.0,  item take place correct place sorted portion array more item,"In one sentence, what is the main idea implemented by insertion sort?","one by one, each item is taken and placed into the correct place in the sorted portion of the array until there are no more items","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left."
26,0.8559279925329327,-0.9069019111293716,5.0,  take element insert correct position respect element,"In one sentence, what is the main idea implemented by insertion sort?",you take each element and insert it in the correct position with respect to all the elements before it,"Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left."
27,-1.3143768334514754,0.94074631200503,4.0,  simple sorting algorithm comparison in sorted array list build entry time,"In one sentence, what is the main idea implemented by insertion sort?","Insertion sort is a simple sorting algorithm, a comparison sort in which the sorted array (or list) is built one entry at a time.","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left."
0,-2.0484572434721944,2.225148759752956,5.0,  searches array largest smallest element move out front array then search next largest smallest element move out front,"In one sentence, what is the main idea implemented by selection sort?",Searches an array for the largest or the smallest element and is moved out to the front of the array then it will search for the next largest or the smallest element to move out to the front,"Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element."
1,-2.8898687144325566,0.23590530879939525,5.0,  searches whole array largest item put end array then searches second largest item put second last spot on,"In one sentence, what is the main idea implemented by selection sort?","Selection sort searches the whole array for the largest item and puts it at the end of the array, then searches for the second largest item and puts it at the second to last spot and so on.","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element."
2,1.1016097604669166,-0.5447958295354505,5.0,  find minimum value swap value first position,"In one sentence, what is the main idea implemented by selection sort?",Finds the minimum value and swap it with the value in the first position.,"Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element."
3,-0.042262423012268645,3.2279051475626375,5.0,  find minimum element array swap first element then repeat step swapping minimum element nth position array,"In one sentence, what is the main idea implemented by selection sort?",It finds the minimum element in the array and swaps it with the first element then repeats this step swapping the minimum element with nth positions in the array.,"Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element."
4,0.3627787713209807,-1.8805445126256612,4.0,  find lowest value place front then find next lowest place front last value etc,"In one sentence, what is the main idea implemented by selection sort?","Find the lowest value and place it at the front, then find the next lowest and place it in front of the last value, etc.","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element."
5,0.7184970996005355,-0.8488882266593898,5.0,  cycle unsorted list place minimum next slot sorted list repeat,"In one sentence, what is the main idea implemented by selection sort?","Cycle through the unsorted list, place the minimum in the next slot in the sorted list, and repeat.","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element."
6,1.645112350900318,2.5459450074420826,5.0,  find minimum value list swap first element list find second largest swap second element array continue like array sorted,"In one sentence, what is the main idea implemented by selection sort?",find the minimum value in the list swap it with the first element in the list the find the second largest and swap it with the second element in the array continue like this until  the array is sorted.,"Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element."
7,-0.4661399747563916,-0.7827150198318814,5.0,  find smallest put current position till get end,"In one sentence, what is the main idea implemented by selection sort?",Find the smallest and put it in the current position till you get to the end.,"Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element."
8,-0.11153453309902948,0.5507064600909582,5.0,  find lowest unsorted value array place current position starting first element array advance current position one,"In one sentence, what is the main idea implemented by selection sort?","Find the lowest unsorted value in the array and place it at the current position (starting at the first element in the array) and advance the ""current"" position by one. ","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element."
9,-0.6622124762928453,2.021472069941202,2.0,  element comparing two element swapping smaller element array,"In one sentence, what is the main idea implemented by selection sort?",To sort the elements by comparing two elements and swapping the smaller one to sort the elements in the array.,"Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element."
10,2.886664463760455,-0.4204804999028822,5.0,  find minimum value list swap first value list repeat list,"In one sentence, what is the main idea implemented by selection sort?","Selection sort finds the minimum value in the list, swaps it with the first value in the list, and repeats throughout the list.","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element."
11,-1.197575651911029,-0.21997809163178225,5.0,  select minimum number array put current position then move,"In one sentence, what is the main idea implemented by selection sort?","Select the minimum number from the array and put it in the current position, then move on","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element."
12,1.3392937815713886,-1.283893657220442,5.0,  find lowest value place front list swap value continue moving right,"In one sentence, what is the main idea implemented by selection sort?",Find the lowest value and place it in the front of the list and swap it with that value. Continue moving right.,"Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element."
13,-0.7477961294466875,-1.0888347139797296,5.0,  take least variable right put directly left,"In one sentence, what is the main idea implemented by selection sort?",The main idea behind selection sort is to take the least variable from the right and put it directly to the left.,"Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element."
14,4.052890854089317,1.2610988274912047,5.0,  find smallest value list first element then find smallest value leftover list first element leftover list continue list sorted,"In one sentence, what is the main idea implemented by selection sort?","Find the smallest value in the list and make it the first element, then find the smallest value of the leftover list and make it the first element of the leftover list and continue until the list is sorted.","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element."
15,0.0623612229750257,-1.1626151267553526,5.0,  run find lowest highest value put desire position,"In one sentence, what is the main idea implemented by selection sort?",It runs through and finds the lowest (or highest) value and puts it in its desired position.,"Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element."
16,0.17951578144811683,-1.22638195950806,5.0,  place smallest item list position 1 then proceed value last position ray reached,"In one sentence, what is the main idea implemented by selection sort?","Places the smallest item in the list at position 1, and then proceeds to each value until the last position of the ray is reached.","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element."
17,-1.3663675786451015,-0.38234443229698456,5.0,  search largest item array swap last unsorted item,"In one sentence, what is the main idea implemented by selection sort?",Search for the largest item in an array and swap it with the last unsorted item.,"Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element."
18,-0.605716204834967,0.34513630893715735,5.0,  find smallest element place 1st position then processes repeated rest array,"In one sentence, what is the main idea implemented by selection sort?",finds the smallest element and places in 1st position. then the process is repeated on the rest of the array.,"Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element."
19,-2.1640572202458563,-0.2798344675839578,5.0,  algorithm select large item array put place then select next largest array sorted,"In one sentence, what is the main idea implemented by selection sort?",Selection sort is an algorithm that selects the larges item the array and puts it in its place; then select the next largest until the array is sorted,"Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element."
20,0.1575306939482908,-0.8063835326659331,5.0,  select smallest number list move front list then advance next number,"In one sentence, what is the main idea implemented by selection sort?",Select the smallest number in the list and move it to the front of the list and then advance to the next number.,"Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element."
21,1.0336741415111161,-0.8699882881113917,5.0,  choose largest smallest value unsorted list create new list using depending how sorted,"In one sentence, what is the main idea implemented by selection sort?",the selection sort chooses the largest or smallest value in an unsorted list and creates a new list using the selection depending on how it is sorted.,"Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element."
22,-0.8329132122044797,-0.5547911651118863,4.0,  find smallest number left unsorted array put end have sorted,"In one sentence, what is the main idea implemented by selection sort?","Selection sort finds the smallest number left unsorted in an array, and puts it at the end of what it has sorted","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element."
23,-0.9241657260003593,0.6170336629209543,5.0,  select minimum remaining element array palce miminum current position move next position,"In one sentence, what is the main idea implemented by selection sort?","selects the minimum from the remaining elements of the array, and palces the miminum in the current position and moves to the next position","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element."
24,-0.328096696590026,0.2835851657715046,3.0,  put biggest element end list place next highest element on,"In one sentence, what is the main idea implemented by selection sort?","To put the biggest element at the end of the list and place the next highest element behind it, and so on.","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element."
25,-2.065138741772169,-0.9562554848277189,5.0,  find largest item place end then then next largest found place next last continue only number left beginning sorted array,"In one sentence, what is the main idea implemented by selection sort?","the sort finds the largest item and places it at the end, then then next largest is found and placed next to last, continue until there is only one number left, this is the beginning of the sorted array","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element."
26,0.375662613494918,0.23155771245986637,5.0,  loop entire list iteration find smallest element move current position,"In one sentence, what is the main idea implemented by selection sort?","you loop through the entire list, and for each iteration you find the smallest element and move it to the current position.","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element."
27,2.5367109916285795,-0.23676942292142136,5.0,  find minimum value list swap value first position repeat step above remainder list starting second position,"In one sentence, what is the main idea implemented by selection sort?",Find the minimum value in the list swap it with the value in the first position; repeat the steps above for remainder of the list(starting in the second position.,"Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element."
0,-1.6566157725080495,-0.9332630290514377,4.0,  run time sorting program n^2 list already sorted worst list sorted reverse,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?","The run time for this sorting program is n^2.  Best case is the list is already sorted, worst case is the list is sorted but in reverse. ",N (the length of the array) operations achieved for a sorted array.
1,-0.620619654867041,0.019988655698154917,5.0,  o n perform n 1 when list array already sorted,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?","Insertion sort is O(n) and performs n-1 operations in the best-case scenario, which is when the list or array is already sorted.",N (the length of the array) operations achieved for a sorted array.
2,-0.38403527771815493,-0.42039659598414797,3.0,  n 1 2 sorted list where run o n,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?","The number of operations for insertions sort, under best-case, is  n(n-1)/2. The best case for insertion sort is on a sorted list where it runs is O(n). ",N (the length of the array) operations achieved for a sorted array.
3,1.5653387173882647,2.028614920423119,4.0,  o n n one because take scan array one swap array then sorted take only one operation,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?","Best case would be O(n) or n-1, because that's what it takes to scan the array and make one swap. The array would then be sorted and would take only 1 operation.",N (the length of the array) operations achieved for a sorted array.
4,0.5759420796813536,-0.15085248411993704,0.0,  1 worst n,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",Best case-1 Worst Case-N,N (the length of the array) operations achieved for a sorted array.
5,-0.6574670117959026,1.0894857465093943,5.0,  do where n element array when element already sorted,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",It will do (n) operations where (n) is the number of elements in the array. Best case is when all the elements are already sorted.,N (the length of the array) operations achieved for a sorted array.
6,0.5790272998952163,-0.11125102337036995,3.0, o n,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",O(n),N (the length of the array) operations achieved for a sorted array.
7,0.016270911938266873,0.16930928398620645,5.0,  element sorted n 1,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",Best case is all elements sorted. n-1.,N (the length of the array) operations achieved for a sorted array.
8,-1.6589473918949902,3.8143369738415878,5.0,  where element array have been already sorted cause loop iterate x time x being element array loop never have iterate resulting require x operation,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?","The best case scenario for an insertion sort, where all the elements of the array have been already sorted, will cause the for loop to iterate ""x"" times (""x"" being the number of elements in the array) and the while loop to never have to iterate, resulting in the insertion sort to require ""x"" operations. ",N (the length of the array) operations achieved for a sorted array.
9,0.4711450251839278,0.401350674709408,3.0,  one where already sorted does one comparision,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",1 operation. the best case scenario s where it is already sorted and does one comparision.,N (the length of the array) operations achieved for a sorted array.
10,0.779806140381601,-0.1701210376492478,3.0,  where item,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?","n operations, where n is the number of items.",N (the length of the array) operations achieved for a sorted array.
11,0.5790272998952163,-0.11125102337036995,3.0, 1,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n-1,N (the length of the array) operations achieved for a sorted array.
12,-0.5460621985114169,-0.46541624422186745,5.0,  o n list already sorted,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?","O(n), the list is already sorted.",N (the length of the array) operations achieved for a sorted array.
13,0.7423757163397061,0.4182739977197071,4.0,  take n 1 if array reverse order,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",Insertion sort will take n-1 operations if the array is in reverse order.,N (the length of the array) operations achieved for a sorted array.
14,-2.3441359545147114,-1.6489736610134047,5.0,  already sorted list progress once list directly proportional element list note as o n big notation,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?","In the best case scenario of an already sorted list, insertion sort will progress once through the list.  So the number of operations is directly proportional to the number of elements in the list.  Also noted as O(n) in big o notation. ",N (the length of the array) operations achieved for a sorted array.
15,0.5709754770379124,-0.5047107422755968,2.0,  one where list two int only must move,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",1 where there is a list of two ints and only one must be moved.,N (the length of the array) operations achieved for a sorted array.
16,0.5902987950234214,-0.15590819987552365,2.0,  n worst factorial,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?","Best case is N, while the worst case is N factorial.",N (the length of the array) operations achieved for a sorted array.
17,-0.062087873299372764,0.4562331166813223,5.0,  n 1 when array already sorted,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n-1 The best case is when the array is already sorted.,N (the length of the array) operations achieved for a sorted array.
18,0.3635212456110618,0.0187935734601288,2.0,  worst = o n time = o n^2 time,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",worst case its = O(n) time best case its = O(n^2) time,N (the length of the array) operations achieved for a sorted array.
19,0.5790272998952163,-0.11125102337036995,3.0, o n,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",O(n),N (the length of the array) operations achieved for a sorted array.
20,-1.7784866610851178,-0.30288790231970764,5.0,  time where equal element list that element list already sorted,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",N number of times.  Where N equals the number of elements in the list.  Best-case scenario is that the elements in the list are already sorted.,N (the length of the array) operations achieved for a sorted array.
21,-0.8181075921113663,-0.3670995673255907,5.0,  list already sorted same as element,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",the best case scenario for insertion sort is a list that is already sorted. the number of operations would be the same as the number of elements,N (the length of the array) operations achieved for a sorted array.
22,0.7371826690390709,0.6232782019578794,3.0,  zero length one comparison when array give already order,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?","insertion sort will make zero operations (and length - 1 comparisons) in the best case scenario, that is, when the array its given is already in order.",N (the length of the array) operations achieved for a sorted array.
23,0.04017379592189373,-0.11302213588161886,5.0,  theta n senario that everything already sorted,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",theta(n) the best case senario is that everything is already sorted,N (the length of the array) operations achieved for a sorted array.
24,0.6715209297045832,-0.12428840541548945,5.0,  when increasing order,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n operations  The best case scenario is when all the numbers are in increasing order.,N (the length of the array) operations achieved for a sorted array.
25,3.3775131540022376,-1.8507900050215227,2.0,  could considered that having only one item easiest could trivial result as nothing move having two item algorithm item correct order,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?","it could be considered that having only one item would be the easiest to sort, but this could also be a trivial result as nothing is moved  having two items allows the algorithm to sort the items into the correct order",N (the length of the array) operations achieved for a sorted array.
26,-2.465622273433298,-1.4089295832208883,5.0,  if only have look list once when goes list does not have change list already sorted,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",the best case is if it only has to look through the list once. The best case scenario is when it goes through the list and doesn't have to make any changes (the list is already sorted),N (the length of the array) operations achieved for a sorted array.
27,0.7530411048005036,-0.08925248149979596,2.0,  very simplistic move one element list one inserting correct position new slot then starting 0 1,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",very simplistic it moves one element from the list by one and inserting them in their correct position into a new slot then starting over. best case is (0)1,N (the length of the array) operations achieved for a sorted array.
0,0.8405009283527367,-0.7594187110327832,5.0,  one number one number sorted list regardless number,What is the base case for a recursive implementation of merge sort?,"The base case for a recursive merge sort is one number.  One number by itself is a sorted list, regardless of what number it is.",When the size of the array to be sorted is 1 (or 2)
1,-0.4140279517923813,0.3041089143125584,5.0,  when sequence being passed have less than two element,What is the base case for a recursive implementation of merge sort?,The base case for a recursive implementation of merge sort is when the sequence being passed to merge sort has less than 2 elements.,When the size of the array to be sorted is 1 (or 2)
2,-0.24481211756740415,-0.6795172251143655,5.0, one,What is the base case for a recursive implementation of merge sort?,The base case for a recursive implementation of merge sort is one.,When the size of the array to be sorted is 1 (or 2)
3,-0.25191756298162643,-0.7986510964482708,1.0,  best same as worst o n log n sort,What is the base case for a recursive implementation of merge sort?,The best case is the same as the worst case O(n log n) for a recursive merge sort.,When the size of the array to be sorted is 1 (or 2)
4,-0.3695463645722618,-0.14523549365920221,5.0,  one object split array sort,What is the base case for a recursive implementation of merge sort?,there is one object in the split array to sort.,When the size of the array to be sorted is 1 (or 2)
5,-0.41802301383720675,0.29341454158848407,5.0,  when length current array one,What is the base case for a recursive implementation of merge sort?,The base case is when the length of the current array is 1.,When the size of the array to be sorted is 1 (or 2)
6,-0.19168314053282381,-0.8968513596205236,1.0,  o nlog n,What is the base case for a recursive implementation of merge sort?,O(nlog(n)),When the size of the array to be sorted is 1 (or 2)
7,-0.5224533248675782,0.5907417480347087,5.0,  best one element one element sorted,What is the base case for a recursive implementation of merge sort?,Best case is one element.  One element is sorted.,When the size of the array to be sorted is 1 (or 2)
8,-0.394659347185302,0.5921064358959374,5.0,  if array being sorted have one element,What is the base case for a recursive implementation of merge sort?,If the array being sorted has 0 or 1 elements,When the size of the array to be sorted is 1 (or 2)
9,-0.09049916104274094,-0.8231673860848404,4.0,  t n = 0 if n lt 2,What is the base case for a recursive implementation of merge sort?,"T(n) = 0, if n&lt;2.",When the size of the array to be sorted is 1 (or 2)
10,-0.20795426044587703,-1.1579246900151057,5.0,  list size 1 where already sorted,What is the base case for a recursive implementation of merge sort?,"A list size of 1, where it is already sorted.",When the size of the array to be sorted is 1 (or 2)
11,-0.40543499095610985,0.3666606823591799,5.0,  single element array,What is the base case for a recursive implementation of merge sort?,Single element in the array,When the size of the array to be sorted is 1 (or 2)
12,-0.19168314053282381,-0.8968513596205236,1.0,  o nlog n,What is the base case for a recursive implementation of merge sort?,O(nlog(n)),When the size of the array to be sorted is 1 (or 2)
13,-0.19532442250964413,-0.9311325287904914,1.0,  * log,What is the base case for a recursive implementation of merge sort?,n * log( n ),When the size of the array to be sorted is 1 (or 2)
14,-0.4828676338895887,0.5145407699262791,5.0,  list array only one element,What is the base case for a recursive implementation of merge sort?,A list or array of only 1 element.,When the size of the array to be sorted is 1 (or 2)
15,-0.22730852683863145,-0.8480763745797039,3.0,  where only must once,What is the base case for a recursive implementation of merge sort?,where you only must merge sort once,When the size of the array to be sorted is 1 (or 2)
16,-0.40543499095610985,0.3666606823591799,5.0,  single element array,What is the base case for a recursive implementation of merge sort?,A single Element on the Array.,When the size of the array to be sorted is 1 (or 2)
17,-0.38079668476196454,0.026280110090434208,5.0,  only one element subarray,What is the base case for a recursive implementation of merge sort?,There is only one element in the subarray.,When the size of the array to be sorted is 1 (or 2)
18,-0.4851951594306603,1.5248132898235593,5.0,  if array length less than equal 1 then array returned other array together,What is the base case for a recursive implementation of merge sort?,"if the array length is less than or equal to 1, then that array is returned to the other array and merged together",When the size of the array to be sorted is 1 (or 2)
19,8.157915946099497,0.5691751127794789,2.0,  if right gt left mid = right left 2 m_sort number temp left mid m_sort number temp mid 1 right number temp left mid 1 right,What is the base case for a recursive implementation of merge sort?,"if (right &gt; left)   {     mid = (right + left) / 2;     m_sort(numbers, temp, left, mid);     m_sort(numbers, temp, mid+1, right);      merge(numbers, temp, left, mid+1, right);   } ",When the size of the array to be sorted is 1 (or 2)
20,0.0027843632811952925,-0.04903590513277045,5.0,  sequence number have zero one element,What is the base case for a recursive implementation of merge sort?,The sequence of numbers has zero or one elements.,When the size of the array to be sorted is 1 (or 2)
21,-0.4525583323479818,0.48410090765721736,5.0,  one element array,What is the base case for a recursive implementation of merge sort?,one element in an array,When the size of the array to be sorted is 1 (or 2)
22,-0.36829547513363814,-0.025577079172694684,5.0,  array length one,What is the base case for a recursive implementation of merge sort?,array of length 1,When the size of the array to be sorted is 1 (or 2)
23,-0.47637090058445314,0.5503951343558603,5.0,  array have one element,What is the base case for a recursive implementation of merge sort?,the array has one element,When the size of the array to be sorted is 1 (or 2)
24,-0.938462392692176,3.449571224767992,4.0,  when only one element array when starting element array same as ending element,What is the base case for a recursive implementation of merge sort?,"When there is only one element in the array, or when the starting element in the array is the same as the ending element.",When the size of the array to be sorted is 1 (or 2)
25,-0.41279420536993777,0.2794756914303578,2.0,  when half original array have nothing else put halfs back together,What is the base case for a recursive implementation of merge sort?,"when each half or the original array has nothing else to sort, and puts the halfs back together",When the size of the array to be sorted is 1 (or 2)
26,-0.2777737143948584,-0.9694735073194665,5.0,  size list being send lt one,What is the base case for a recursive implementation of merge sort?,the size of the list being sent is &lt;= 1,When the size of the array to be sorted is 1 (or 2)
27,-0.19532442250964413,-0.9311325287904914,1.0,  o n log n,What is the base case for a recursive implementation of merge sort?,O(n log n),When the size of the array to be sorted is 1 (or 2)
0,-0.7470782636701976,-0.13431743019263648,5.0,  location memory contain memory addresses location memory contain information,What is a pointer?,Its a location in memory that contains the memory address of another location in memory that contains information.,A variable that contains the address in memory of another variable.
1,0.4984839059949501,-0.6691700852226524,5.0,  variable contain memory addresses as value,What is a pointer?,A pointer is a variable that contains a memory address as its value.,A variable that contains the address in memory of another variable.
2,1.3076960747453523,0.3557666988226867,5.0,  variable store addresses variable,What is a pointer?,A pointer is a variable which stores the address of another variable.,A variable that contains the address in memory of another variable.
3,1.3043470296094346,-0.6602407582660307,5.0,  variable contain as value memory addresses other variable,What is a pointer?,Pointers are variables that contain as their values memory addresses of other variables.,A variable that contains the address in memory of another variable.
4,-1.3052269048016891,-1.890035878593256,4.0,  datum type value refer value store elsewhere computer memory using addresses,What is a pointer?,A data type whose value refers to another value stored elsewhere in the computer memory using its address.,A variable that contains the address in memory of another variable.
5,-0.718667083973324,0.9668250048931768,5.0,  hold memory location,What is a pointer?,a pointer holds a memory location,A variable that contains the address in memory of another variable.
6,-1.499642190782994,-0.7560025279936177,5.0,  name represent actual location value datum type int * bptr point integer value,What is a pointer?,a name that represents actual location or value of a data type. int *bPtr points to an integer value.,A variable that contains the address in memory of another variable.
7,1.3563928720857672,0.3816086289147908,5.0,  variable that store addresses variable,What is a pointer?,A variable that stores the address of another variable,A variable that contains the address in memory of another variable.
8,-1.4138436723067653,-2.16160672210529,5.0,  programming language datas type value refer directly point value store elsewhere computer memory using addresses,What is a pointer?,a pointer is a programming language data type whose value refers directly to (or points to) another value stored elsewhere in the computer memory using its address,A variable that contains the address in memory of another variable.
9,-1.331971820007283,-1.891070674174415,5.0,  datum type value refer value store somewhere else computer memory using addresses,What is a pointer?,A data type whose value refers to another value stored somewhere else in the computer memory using its address.,A variable that contains the address in memory of another variable.
10,-0.08052345254975395,1.0041669274668983,4.0,  like variable instead holding datum hold location memory,What is a pointer?,"It is like a variable however instead of holding data, it holds a location in memory.",A variable that contains the address in memory of another variable.
11,-0.9112110621602235,0.9191473658131619,5.0,  reference location memory,What is a pointer?,A pointer is a reference to a location in memory,A variable that contains the address in memory of another variable.
12,-1.0740781097403067,1.1811068604743464,4.0,  reference memory location object,What is a pointer?,A pointer is a reference to the memory location of an object.,A variable that contains the address in memory of another variable.
13,1.2781104362430415,-0.5643291442284447,5.0,  variable contain memory addresses variable have value,What is a pointer?,A pointer is a variable that contains the memory address of a variable that has a value.,A variable that contains the address in memory of another variable.
14,0.7866583716258122,-1.337654973764163,2.0,  variable contain not only * value have memory addresses associate move string array jumping one memory addresses,What is a pointer?,"It is a variable that contains not only a *value but has a memory address associated with it, and can be moved along a string or an array by jumping up one memory address.",A variable that contains the address in memory of another variable.
15,0.49848390599495085,-0.6691700852226539,5.0,  contain variable memory addresses as value,What is a pointer?,Contains a variable's memory address as a value.,A variable that contains the address in memory of another variable.
16,0.883888447216642,0.0202595738284636,5.0,  variable point memory addresses variable type specific,What is a pointer?,variable that points to the memory address of another variable and it is type specific.,A variable that contains the address in memory of another variable.
17,-0.8010530321767756,0.7778260706437042,5.0,  element reference memory cell,What is a pointer?,An element that references a memory cell,A variable that contains the address in memory of another variable.
18,-1.0933182530909815,0.9686178069567757,4.0,  reference call place memory where object store,What is a pointer?,Is a reference call to the place in memory where the object is stored.,A variable that contains the address in memory of another variable.
19,1.5164477401804208,0.26299295989846216,5.0,  variable contain addresses variable,What is a pointer?,a variable that contains the address of another variable,A variable that contains the address in memory of another variable.
20,0.4261794666214262,-2.01173887476294,5.0,  variable contain number memory addresses as value null 0 addresses value store memory,What is a pointer?,"A pointer variable contains the number of a memory address as its value, which may be null or 0, or the address of some value stored in memory.",A variable that contains the address in memory of another variable.
21,1.3599809092012962,0.09775442845262239,5.0,  variable contain memory addresses anther variable,What is a pointer?,A pointer is a variable that contains a memory address of anther variable,A variable that contains the address in memory of another variable.
22,1.3920580838811472,-0.7884253500894882,5.0,  variable contain memory addresses variable contain specific value,What is a pointer?,A variable that contains the memory address of another variable that contains a specific value.,A variable that contains the address in memory of another variable.
23,0.3464824919433301,-0.4266521582209219,5.0,  variable memory addresses as value,What is a pointer?,a variable with a memory address as the value,A variable that contains the address in memory of another variable.
24,-0.8387143872275358,-0.15780326225125602,5.0,  type point something else memory addresses something else,What is a pointer?,it is a type that points to something else. It is the memory address of something else,A variable that contains the address in memory of another variable.
25,-1.6053040450495362,2.3844976803320868,4.0,  way get object essentially way grab instance object then pass instance message retreive datum object actually addresses where instance hold memory,What is a pointer?,A pointer is a way to get at another object. Essentially it is a way to grab an instance of an object and then either pass that instance a message or retreive some data from that object. A pointer is actually just an address of where an instance is held in memory.,A variable that contains the address in memory of another variable.
26,0.01717524397646943,0.4007146016115573,5.0,  variable memory hold addresses memory location point too,What is a pointer?,This operator returns the memory address of its operand.,The memory address of its operand.
27,0.4857334695970436,-0.5448872067087649,4.5,  variable contain memory addresses give value,What is a pointer?,The address operator returns the memory address of its operand.,The memory address of its operand.
28,1.356392872085767,0.38160862891478947,5.0,  variable that store addresses variable,What is a pointer?,Returns memory address of its operand.,The memory address of its operand.
29,1.1132664967865833,0.7032155154613532,5.0,  variable hold memory addresses location variable,What is a pointer?,The address (&) operator returns the memory address of its operand.,The memory address of its operand.
30,-1.109743012614587,-0.3898838153567422,5.0,  datum type point addresses memory contain certain information passes reference save memory,What is a pointer?,Returns the memory address of its operand.,The memory address of its operand.
31,-1.3427591224574167,0.4271752112969371,4.5,  point location memory certain datum type,What is a pointer?,returns the place in memory of that element,The memory address of its operand.
32,1.0973444395941756,0.5963212885128231,5.0,  variable point addresses location variable represented *,What is a pointer?,The address of the where the data is stored: &b will return the address of b.,The memory address of its operand.
33,1.1663887854119601,0.4346980726372422,5.0,  variable hold addresses give variable give datum type,What is a pointer?,The & operator returns the address of a variable,The memory address of its operand.
34,-1.3047775670912616,-1.7402289692689896,5.0,  programming datum type value point value store computer memory addresses,What is a pointer?,"the ampersand (&) means ""pass by reference"". When the function is called, a pointer to the variable, instead of the variable itself, will be passed into the function.",The memory address of its operand.
35,-0.870620200679238,-0.09999245427443944,5.0,  datum type point specific memory addresses,What is a pointer?,& returns the memory address of its operand.,The memory address of its operand.
36,1.491924389217486,0.502802228727212,5.0,  like variable except only hold addresses memory variable not physical information,What is a pointer?,the address of the variable in memory,The memory address of its operand.
37,-0.9112110621602235,0.9191473658131619,5.0,  reference memory location,What is a pointer?,Returns the address location in memory of the item.,The memory address of its operand.
38,-0.8228060847703533,0.8834762305448733,3.5,  aliases object memory,What is a pointer?,The address operator returns the memory address of its operand.,The memory address of its operand.
39,0.5179543927034753,-0.7759373513697182,5.0,  variable contain memory addresses something as value array even function,What is a pointer?,The & operator returns the memory address of the variable it precedes.,The memory address of its operand.
40,-0.7519083021076028,-0.5528286397131703,1.5,  datas type memory addresses value,What is a pointer?,"The memory address of operand, 0x000000 or something along those lines. ",The memory address of its operand.
41,-1.4748527997224414,0.824735140188344,5.0,  form storing datum keep location memory datas type object,What is a pointer?,The object's memory address.,The memory address of its operand.
42,-0.3940263722382219,0.31002410932697433,5.0,  contain object memory addresses,What is a pointer?,the reference to a variable,The memory address of its operand.
43,0.20454480648855716,0.26101577316037555,5.0,  variable contain memory addresses datum object,What is a pointer?,returns the memory address of its operand,The memory address of its operand.
44,-0.9399122368890815,0.9581090264603119,5.0,  element reference memory location,What is a pointer?,memory address of its operand,The memory address of its operand.
45,-0.40879383507474165,0.08912493986168595,5.0,  object point specific place memory where variable value store,What is a pointer?,returns the address number of the specified variable,The memory address of its operand.
46,0.24108055870005496,0.3881688144955985,5.0,  variable that store addresses memory location,What is a pointer?,"It returns the memory address of it's operand. That is, if applied to a normal variable, it gives the variable's memory address, just as a pointer variable might.",The memory address of its operand.
47,0.27851846579230655,-1.1343325573118097,5.0,  variable point addresses memory contain datum does not contain point datum only memory addresses,What is a pointer?,The & is a unary operator that returns the memory address of its operand,The memory address of its operand.
48,1.2400415300700935,0.3021718423881011,5.0,  variable have memory addresses variable,What is a pointer?,the address of the variable it is attached to,The memory address of its operand.
49,-1.2458733008660658,0.5461295989754396,5.0,  point location memory where datum store,What is a pointer?,the memory address of its operand,The memory address of its operand.
50,2.3045638881076935,0.7293967723079692,5.0,  variable hold addresses variable access content variable,What is a pointer?,returns the address of what it is put in front of,The memory address of its operand.
51,-0.5959558310167131,0.13386452798930687,5.0,  memory addresses point datas member,What is a pointer?,returns a pointer,The memory address of its operand.
52,-0.026311850291045446,-0.08818979088540183,5.0,  datum type store memory addresses variable,What is a pointer?,returns a synonym for the object to which its pointer operand points.,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.
53,1.150044781641127,0.3320290148055821,1.0,  like variable only hold addresses meomrry not physical addresses,What is a pointer?,The star operator returns a synonym for the object to which its pointer operand points.,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.
0,-0.5671307121442656,0.2868451214831548,5.0,  memory operand,What does the address (&) operator return?,Returns synonym for the object its operand points to.,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.
1,-0.5671307121442662,0.2868451214831546,5.0,  memory operand,What does the address (&) operator return?,"It returns a synonym, alias or nickname of the name of the object that its operand points to in memory (dereferencing the pointer).",An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.
2,-0.5671307121442659,0.28684512148315505,5.0,  memory operand,What does the address (&) operator return?,Returns an alias/nickname for the object to which the pointer operand points.,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.
3,-0.5671307121442659,0.28684512148315533,5.0,  memory operand,What does the address (&) operator return?,the * operator returns the value in the memory address the element points to.,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.
4,-0.5671307121442661,0.2868451214831552,5.0,  memory operand,What does the address (&) operator return?,The * returns the value,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.
5,-0.3952512015679787,-0.18610957975564169,5.0,  place memory element,What does the address (&) operator return?,The * operator returns the dereferenced pointer variable (ie: it returns the value of whatever variable the pointer is pointing to),An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.
6,-0.27375723390680373,-0.9938215492495847,4.0,  where datas store : b b,What does the address (&) operator return?,The dereferencing operator returns the dereferenced object.,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.
7,0.502527835468003,-0.4973975836400559,5.0,  variable,What does the address (&) operator return?,* returns the synonym for the object its operand points to.,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.
8,3.294626639933802,-1.2091629848978749,3.0,  ampersand mean pass reference when function called pointer variable instead variable passed function,What does the address (&) operator return?,it returns the information in the address the pointer points to.,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.
9,-0.5671307121442661,0.2868451214831552,5.0,  memory operand,What does the address (&) operator return?,the star operator returns the value at the memory address the pointer is pointing at.,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.
10,0.37965542465386826,0.12724448396579416,5.0,  variable memory,What does the address (&) operator return?,The star operator returns the object at that memory location.,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.
11,-0.3952512015679787,-0.18610957975564177,5.0,  location memory item,What does the address (&) operator return?,The * operator returns the value of the object's memory address it precedes.,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.
12,-0.5671307121442661,0.2868451214831552,5.0,  memory operand,What does the address (&) operator return?,The value of the object that the operand points to,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.
13,0.3974614195088923,0.13684586456103306,5.0,  memory variable precede,What does the address (&) operator return?,The value stored in the object being pointed to.,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.
14,-0.6551863950921138,0.3633186109602255,4.0,  memory operand 0x000000 something line,What does the address (&) operator return?,the value of the variable the pointer points to.,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.
15,-0.3952512015679787,-0.18610957975564188,4.0,  object memory addresses,What does the address (&) operator return?,returns synonym for the object its operand points to,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.
16,0.6806159349976745,-0.6261680970382304,5.0,  reference variable,What does the address (&) operator return?,synonym for the object its operand points to,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.
17,-0.5671307121442661,0.2868451214831552,5.0,  memory operand,What does the address (&) operator return?,Returns synonym for the object its operand points to,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.
18,-0.5671307121442661,0.2868451214831552,5.0,  memory operand,What does the address (&) operator return?,"It dereferences a pointer, meaning it returns the value stored in the memory address a pointer refers to.",An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.
19,0.551984915214262,-0.5785872729776131,5.0,  number specified variable,What does the address (&) operator return?,It is unary operator that returns the value of the variable located at the address,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.
20,2.2930646419259846,2.828416300618735,4.0,  memory operand if applied normal variable give variable memory as pointer variable,What does the address (&) operator return?,a reference to a = variable,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.
21,-0.5937293747388378,0.3084893538884511,5.0,  unary memory operand,What does the address (&) operator return?,a synonym for the object to which its pointer operand points,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.
22,0.5260965966967087,-0.5349292970694921,5.0,  variable attached,What does the address (&) operator return?,it returns the actual data at the address pointed to,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.
23,-0.5671307121442661,0.2868451214831552,5.0,  memory operand,What does the address (&) operator return?,will return zero or many characters placed before the operator,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.
24,-0.2602861061474478,-0.9127113212403821,5.0,  put front,What does the address (&) operator return?,The array itself can be signed to a pointer or each element of the array can be assigned to a pointer.,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element."
25,0.013986427632599604,-0.7216589834456254,4.0,  pointer,What does the address (&) operator return?,An array can be addressed in pointer/offset notation by setting a pointer variable equal to the variable name of the array. Elements of the array can then be accessed by adding an offset value to the pointer variable.,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element."
0,-1.08264470171747,0.6408504734454176,5.0,  synonym object pointer operand point,What does the star (*) operator return?,Element b[ n ] can be accessed by  *( bPtr + n ).,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element."
1,-1.0826447017174694,0.6408504734454172,5.0,  synonym object pointer operand point,What does the star (*) operator return?,Using either the name of the array as a pointer or using a separate pointer that points to the array.,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element."
2,-1.241356436419648,-0.16665028729873096,5.0,  synonym object operand point,What does the star (*) operator return?,An element b[3] can be referenced by using *( bPtr + 3) instead.,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element."
3,-1.1518342500669885,0.9916211555841036,5.0,  synonym alia nickname name object operand point memory dereferencing pointer,What does the star (*) operator return?,you get the memory location of the first element and the you add an offset to it to get other elements.,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element."
4,-0.7871866154104644,0.6570636947345023,5.0,  alias nickname object pointer operand point,What does the star (*) operator return?,yes *(array +offset),"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element."
5,0.7645817754794172,-0.4342647453296735,4.0,  value memory addresses element point,What does the star (*) operator return?,"The name of an array is considered to be a pointer in C++, and can be passed as such in functions parameters. Declaring int a[10]; creates a pointer ""a"" which stores the address of a[0].","By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element."
6,0.7113817970333035,-0.6295644644617704,4.0,  value,What does the star (*) operator return?,Element b[ n ] can be accessed by  *( bPtr + n ) is an example of how an array can be addressed as pointer/offset notation.,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element."
7,1.735314549992437,1.8495108802071136,5.0,  dereferenced pointer variable ie : value variable pointer pointing,What does the star (*) operator return?,*(array + element),"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element."
8,-0.0020599360608539266,-0.5915009087049248,4.0,  dereferencing dereferenced object,What does the star (*) operator return?,*f[3],"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element."
9,-1.241356436419648,-0.16665028729873188,5.0,  synonym object operand point,What does the star (*) operator return?,you can have a pointer to the front of the array and add to the memory location (or offset from the initial value).,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element."
10,0.439871134343154,0.3072941444813645,4.0,  information addresses pointer point,What does the star (*) operator return?,"The pointer to the array will initially point to the first element of that array.  When the pointer is incremented, it will point to the next element, and so on.","By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element."
11,1.3853927040210559,0.34752047028654093,5.0,  value memory addresses pointer pointing,What does the star (*) operator return?,With int x[10]; int *xPtr; xPtr = x; Address &x[1] is the same as xPtr + 1.,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element."
12,0.11362296846413815,-0.7016726201834239,4.0,  object memory location,What does the star (*) operator return?,Takes the number of array elements and points to each at a time,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element."
13,0.74037447678686,-0.6902925625293179,4.0,  value object memory addresses precede,What does the star (*) operator return?,The array can act as a pointer or be referenced by a pointer.  *(arrayPtr + 3) or *(array + 3),"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element."
14,-0.5055813579994205,-0.25729858826349916,4.0,  value object operand point,What does the star (*) operator return?,by using the *(pointer + element-index),"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element."
15,0.4571363286029659,-0.8036175686720846,4.0,  value store object being pointed,What does the star (*) operator return?,using the star operator.   array: b[n] can be accessed by *(bpointer +n),"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element."
16,0.7260612761275926,0.6341757992427087,4.0,  value variable pointer point,What does the star (*) operator return?,Element A[n] can be accessed by *(APtr + n),"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element."
17,-1.241356436419648,-0.16665028729873188,5.0,  synonym object operand point,What does the star (*) operator return?,"by referencing a pointer and referring to other pointers relative to the first pointer(pointer+1, pointer +2, etc)","By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element."
18,-1.241356436419648,-0.16665028729873188,5.0,  synonym object operand point,What does the star (*) operator return?,"First, some pointer variable must reference the first entity in the array. Any variable in the array can then be accessed by referring to that first entity's address plus some offset. i.e. ptrToArray = array;  nthEntity = *(ptrToArray + n);","By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element."
19,-1.241356436419648,-0.16665028729873188,5.0,  synonym object operand point,What does the star (*) operator return?,&[b3] is as bptr + 3. Array can be treated as pointer,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element."
20,1.6990491789015045,1.3191490823580616,4.0,  dereference pointer meaning value store memory addresses pointer refer,What does the star (*) operator return?,a[i] = *(a+i),"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element."
21,1.3040451888259381,-0.511409694540622,4.0,  unary value variable locate addresses,What does the star (*) operator return?,&b[3]  bPtr + 3,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element."
22,0.6264965098848022,-0.48304366027241186,1.0,  reference = variable,What does the star (*) operator return?,*(arrayName + index),"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element."
23,-1.0826447017174694,0.6408504734454169,5.0,  synonym object pointer operand point,What does the star (*) operator return?,multi-dimensional array,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element."
24,0.7386503517679879,-1.0154790375153497,4.0,  actual datum addresses pointed,What does the star (*) operator return?,the number of bytes of an array during program compilation.,The size in bytes of its operand.
25,0.45940020655722674,-1.0774913602639125,1.0,  zero many character place operator,What does the star (*) operator return?,The sizeof operator returns the size of the operand.,The size in bytes of its operand.
0,-0.4077043976664957,-0.46699548816235426,2.0,  signed element assigned pointer,How can an array be addressed in pointer/offset notation?,Returns size of operand in bytes.,The size in bytes of its operand.
1,2.0758008717122047,0.6803944817854028,5.0,  setting variable equal variable name elements then accessed adding value variable,How can an array be addressed in pointer/offset notation?,It returns the size of an array in bytes.,The size in bytes of its operand.
2,-0.21582420101354705,-0.45338670154623456,5.0,  element b [ ] accessed * bptr,How can an array be addressed in pointer/offset notation?,Returns the size of the array in bytes during the program compilation.,The size in bytes of its operand.
3,-0.5510412618911558,0.30890787739068765,3.0,  using name as using separate point array,How can an array be addressed in pointer/offset notation?,it returns the size of the argument passed in,The size in bytes of its operand.
4,-0.3528436451331089,-0.47519331714781793,5.0,  element b[3 ] reference using * bptr 3 instead,How can an array be addressed in pointer/offset notation?,The byte size of the date stored ina variable.,The size in bytes of its operand.
5,0.06736462761342742,-1.7299909671364204,5.0,  get memory location first element add get other element,How can an array be addressed in pointer/offset notation?,sizeof returns the size of the operand in bytes,The size in bytes of its operand.
6,-0.2800972523517357,0.04973986270753819,5.0,  yes * offset,How can an array be addressed in pointer/offset notation?,"The amount of memory required for a specific parameter such as ints, doubles.",The size in bytes of its operand.
7,-0.38968403192022266,1.8800871077215136,3.0,  name considered c passed as function parameter declaring int a[10 ] create store addresses a[0 ],How can an array be addressed in pointer/offset notation?,sizeof returns the size of the operand in bytes.,The size in bytes of its operand.
8,-0.35431785146830913,-0.15060054777641815,5.0,  element b [ ] accessed * bptr example as notation,How can an array be addressed in pointer/offset notation?,the size of the information in bits.,The size in bytes of its operand.
9,-0.3453433646914452,-0.44039057251642555,5.0,  * element,How can an array be addressed in pointer/offset notation?,the size of the string.,The size in bytes of its operand.
10,-0.26184154141686905,0.04527515360548201,2.0, * ],How can an array be addressed in pointer/offset notation?,sizeof returns the size in bytes of the respective object.,The size in bytes of its operand.
11,-0.2430538941694723,-0.2290889319399344,5.0,  have front add memory location initial value,How can an array be addressed in pointer/offset notation?,The sizeof operator returns the total number of bytes of its operand.,The size in bytes of its operand.
12,-0.006486088801558267,-1.854767910184019,2.0,  initially point first element when incremente point next element on,How can an array be addressed in pointer/offset notation?,"The size of an operand in bytes. Used with variable names, type names, and constant values",The size in bytes of its operand.
13,-0.6080978442703276,2.9888940632749685,5.0,  int x[10 ] int * xptr xptr = x addresses x[1 ] same as xptr one,How can an array be addressed in pointer/offset notation?,the size in bytes needed to store the object in memory,The size in bytes of its operand.
14,-0.4182425575567242,-0.7227653175167653,1.0,  take number element point time,How can an array be addressed in pointer/offset notation?,the size of the list object.,The size in bytes of its operand.
15,-0.2570443537857775,0.404009154324455,5.0,  act as reference * arrayptr 3 * 3,How can an array be addressed in pointer/offset notation?,the sizeof operator returns the size in bytes of an array parameter,The size in bytes of its operand.
16,-0.43553856372247857,-0.4740772651175803,5.0,  using * element index,How can an array be addressed in pointer/offset notation?,the size of operand in bytes,The size in bytes of its operand.
17,-0.1464451648142496,0.028582438465275525,5.0,  using star operator : b[n ] accessed * bpointer n,How can an array be addressed in pointer/offset notation?,returns the size in bytes of the specified data,The size in bytes of its operand.
18,-0.15427834283799938,-0.46835880666280755,5.0,  element a[n ] accessed * aptr n,How can an array be addressed in pointer/offset notation?,"It returns the size of an operand in memory, which is checked at compiler-time.",The size in bytes of its operand.
19,0.45948433229496555,-0.21323337854092347,2.0,  referencing referring other relative first 1 2 etc,How can an array be addressed in pointer/offset notation?,Return size of operand in bytes,The size in bytes of its operand.
20,4.812361769079758,0.20855805839653044,5.0,  first variable must reference first entity variable then accessed referring first entity addresses plus e ptrtoarray = nthentity = * ptrtoarray n,How can an array be addressed in pointer/offset notation?,the total number of bytes of an object.,The size in bytes of its operand.
21,-0.6904966414733643,0.8081931508242299,4.0,  [ b3 ] as bptr three treated as pointer,How can an array be addressed in pointer/offset notation?,total number of bytes in the array,The size in bytes of its operand.
22,-0.26184154141686905,0.04527515360548201,5.0,  a[i ] = * i,How can an array be addressed in pointer/offset notation?,it returns the size in bytes of a certain variable type,The size in bytes of its operand.
23,-0.4293913950883607,0.13622725378573647,5.0,  b[three ] bptr three,How can an array be addressed in pointer/offset notation?,"it yields the size in bytes of the operand, which can be an expression or the parenthesized name of a type",The size in bytes of its operand.
24,-0.2952802253767189,0.02636482240296007,5.0,  * arrayname index,How can an array be addressed in pointer/offset notation?,They can be passed by value or by reference,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data."
25,-0.31011743983356727,0.06834062595742009,0.0,  multi dimensional array,How can an array be addressed in pointer/offset notation?,"Nonconstant pointer to nonconstant data, nonconstant pointer to constant data, constant pointer to nonconstant data, constant pointer to constant data.","There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data."
0,1.5031153465457407,-0.09700178769403663,4.0,  number byte array program compilation,What does the sizeof operator return?,"Four different ways: Nonconstant pointer to nonconstant data, a nonconstant pointer to constant data, a constant pointer to nonconstant data and a constant pointer to constant data.","There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data."
1,-0.6966654941394644,-0.15861215535043924,5.0,  size operand,What does the sizeof operator return?,Pass-by-value or pass-by-reference.,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data."
2,-1.0306230882374259,-0.26919200620077977,5.0,  size operand bytes,What does the sizeof operator return?,you can pass a pointer to a pointer or pass a reference to pointer.,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data."
3,0.5684531758758671,0.08049063048994327,4.0,  size array byte,What does the sizeof operator return?,by address &bPtr or directly bPtr.,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data."
4,0.8769415379264166,0.07724418531486776,4.0,  size array byte program compilation,What does the sizeof operator return?,"Nonconstant pointer to nonconstant data, constant pointer to nonconstant data, nonconstant pointer to constant data, constant pointer to constant data. ","There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data."
5,-0.2732902676209288,-0.3829759644330407,5.0,  size argument passed,What does the sizeof operator return?,By argument and reference.,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data."
6,0.3149807487591938,0.4505652264557471,4.0,  byte size date store variable,What does the sizeof operator return?,"Nonconstant pointer to nonconstant data, nonconstant pointer to constant data, constant pointer to nonconstant data, and constant pointer to constant data.","There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data."
7,-1.0306230882374259,-0.2691920062007795,5.0,  size operand bytes,What does the sizeof operator return?,pass by value and pass by reference with reference or pointer arguments.,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data."
8,0.19101116402808282,-1.5126954838038191,4.0,  amount memory require specific parameter as int double,What does the sizeof operator return?,you can pass them with the pointer (*) or the memory address (&),"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data."
9,-1.0306230882374259,-0.2691920062007795,5.0,  size operand bytes,What does the sizeof operator return?,nonconst -&gt; nonconst const -&gt; nonconst nonconst -&gt; const const -&gt; const,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data."
10,-0.2732902676209288,-0.38297596443304155,1.0,  size information bits,What does the sizeof operator return?,Nonconstant pointer to nonconstant data Constant pointer to nonconstant data Nonconstant pointer to constant data Constant point to constant data,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data."
11,-0.25435182170133736,-0.3486954848635809,3.0,  size string,What does the sizeof operator return?,"Non-constant pointer to non-constant data, non-constant pointer to constant data, constant pointer to constant data, constant pointer to non-constant data.","There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data."
12,0.3953141287658474,0.03948035798635299,4.0,  size byte respective object,What does the sizeof operator return?,Pass by reference with reference arguments. function(int &)  Pass by reference with pointer arguments. function(int *),"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data."
13,0.622984205157409,0.05869612734643534,5.0,  total number byte operand,What does the sizeof operator return?,you can pass the reference or the dereference in a function,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data."
14,-0.5218905233284644,2.3302179138329118,5.0,  size operand byte variable name type name constant value,What does the sizeof operator return?,1. nonconstant pointer to nonconstant data. Its delcaration does no include  const qualifier. 2. nonconstant pointer to constant data. Provides the performance of pass-by-reference and the protection of pass-by-value 3. Constant pointer to nonconstant data.  4. Constant pointer to constant date.,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data."
15,0.4283253950247413,-0.11519170471135243,4.0,  size byte needed store object memory,What does the sizeof operator return?,"constant pointer to constant data, constant pointer to nonconstant data, nonconstant pointer to constant data, nonconstant pointer to nonconstant data","There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data."
16,-0.12221611980088286,-0.40565967331304814,4.0,  size list object,What does the sizeof operator return?,Nonconstant pointer to nonconstant data Nonconstant pointer to constant data Constant pointer to nonconstant data Constant pointer to constant data,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data."
17,0.621082471658472,-0.04770715154578309,3.0,  size byte array parameter,What does the sizeof operator return?,"Pointers may be passed to functions by value, by reference with reference arguments, or by reference with pointer arguments.","There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data."
18,-1.0306230882374259,-0.2691920062007795,5.0,  size operand bytes,What does the sizeof operator return?,There are four way to pass pointer to a function 1. non constant pointer to non constant data 2.non constant pointer to  constant data. 3. constant pointer to non constant data. 4. constant pointer to  constant data.,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data."
19,0.2827740813059802,0.10592607242968997,4.0,  size byte specified datum,What does the sizeof operator return?,nonconstant pointer to nonconstant data nonconstant pointer to constant data constant pointer to nonconstant data constant pointer to constant data,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data."
20,-0.8862753267224437,-0.43545756135849295,5.0,  size operand memory checked compiler time,What does the sizeof operator return?,"pass by value, pass by reference with reference arguments, pass by reference with pointer arguments","There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data."
21,-1.0306230882374259,-0.2691920062007795,5.0,  size operand bytes,What does the sizeof operator return?,"you can pass it where either the pointer cant be moved, the data pointed to cant be changed, or both or neither","There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data."
22,1.2053540310741733,-0.1550236653214662,4.0,  total number byte object,What does the sizeof operator return?,"there are only two ways to pass something, by value and by reference. Use of dot or pointer operators within the receiving function and use of '&' operator inside the passing function","There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data."
23,1.404112173440704,-0.11076981054419437,4.0,  total number byte array,What does the sizeof operator return?,A pointer that points to the memory address of the beginning part of a functions.  pretty much the pointer points to the function so it can be called to execute.,The address of the location in memory where the function code resides.
24,0.21113436661498242,0.8400222088464098,4.0,  size byte certain variable type,What does the sizeof operator return?,A function pointer is a pointer that contains the address of the  function in memory.,The address of the location in memory where the function code resides.
25,-0.4444875640560355,1.516083715673839,3.0,  yield size byte operand expression parenthesized name type,What does the sizeof operator return?,"Function Pointers are pointers, i.e. variables, which point to the address of a function.",The address of the location in memory where the function code resides.
0,-3.002854117717496,0.1932689569780254,2.0,  passed value reference,What are the different ways to pass a pointer to a function?,"A pointer to a function is the address where the code for the function resides. They can be passed to functions, returned from functions, stored in arrays and assigned to other pointers.",The address of the location in memory where the function code resides.
1,3.271665233825025,-1.4962377420464814,5.0,  nonconstant nonconstant datum nonconstant constant datum constant nonconstant datas constant constant datum,What are the different ways to pass a pointer to a function?,It contains the address of the function in memory.,The address of the location in memory where the function code resides.
2,3.807757495554922,-1.4201491758412927,5.0,  four : nonconstant nonconstant datum nonconstant constant datum constant nonconstant datum constant constant datum,What are the different ways to pass a pointer to a function?,when it is dereferenced a function pointer calls its function with zero or more arguments.,The address of the location in memory where the function code resides.
3,-2.9821615614851953,0.15175629820428804,2.0,  value passes reference,What are the different ways to pass a pointer to a function?,a pointer to a function,The address of the location in memory where the function code resides.
4,-2.9383518031821056,0.18936482097479695,2.0,  reference pointer,What are the different ways to pass a pointer to a function?,"A pointer to a function itself, contains the address of the function and can be used to call that function",The address of the location in memory where the function code resides.
5,-2.8205728227177795,0.15954246000658787,2.0,  addresses bptr directly bptr,What are the different ways to pass a pointer to a function?,"Function Pointers are pointers, i.e. variables, which point to the address of a function.",The address of the location in memory where the function code resides.
6,3.271665233825023,-1.4962377420464792,5.0,  nonconstant nonconstant datas constant nonconstant datum nonconstant constant datum constant constant datum,What are the different ways to pass a pointer to a function?,A pointer to a function that contains the addresses of the function.,The address of the location in memory where the function code resides.
7,-3.017782154515043,0.21974604300579945,1.0,  argument reference,What are the different ways to pass a pointer to a function?,a pointer that contains the address of a function,The address of the location in memory where the function code resides.
8,3.748579023200358,-1.5218911659654526,5.0,  nonconstant nonconstant datum nonconstant constant datum constant nonconstant datum constant constant datum,What are the different ways to pass a pointer to a function?,a function pointer is a pointer to a function. It can be used in substitution for calling a function.,The address of the location in memory where the function code resides.
9,-3.243002569772035,0.2610543495086509,2.0,  value reference reference argument,What are the different ways to pass a pointer to a function?,Points to the memory address of a function.  Kind of like breaking a branch off of a tree object and hitting other objects with it.,The address of the location in memory where the function code resides.
10,-2.7836921220369195,0.15096833323371964,2.0,  * memory addresses,What are the different ways to pass a pointer to a function?,"They are pointers that contain the addresses to functions, they can be passed and returned from functions, as well as stored in arrays and assigned to other function pointers.",The address of the location in memory where the function code resides.
11,-3.1813536150668362,0.3173426989175642,5.0,  nonconst gt nonconst const gt nonconst nonconst gt const const gt,What are the different ways to pass a pointer to a function?,Pointer variables that point to function addresses.,The address of the location in memory where the function code resides.
12,3.760832759375833,-1.5423385249176658,5.0,  nonconstant nonconstant datum constant nonconstant datum nonconstant constant datum constant point constant datum,What are the different ways to pass a pointer to a function?,Contains the address of the function in memory.,The address of the location in memory where the function code resides.
13,5.481731844245916,5.105841142279179,5.0,  non constant non constant datum non constant constant datum constant constant datum constant non constant datum,What are the different ways to pass a pointer to a function?,"a pointer that points to a function itself, which allows passing a function as a parameter to another function.",The address of the location in memory where the function code resides.
14,-3.4971970963508183,0.35549762320764455,2.0,  reference reference argument int reference argument int *,What are the different ways to pass a pointer to a function?,pointers that contain the addresses of functions.,The address of the location in memory where the function code resides.
15,-2.9581632333813266,0.19495291130391587,2.0,  reference dereference function,What are the different ways to pass a pointer to a function?,is a pointer that contains the address of a function,The address of the location in memory where the function code resides.
16,3.154716243142844,-1.5241314189804955,5.0,  1 nonconstant nonconstant datum delcaration does include qualifier 2 nonconstant constant datum provide performance passes reference protection passes value 3 constant nonconstant datum four constant constant date,What are the different ways to pass a pointer to a function?,a pointer that contains the address of the function definition,The address of the location in memory where the function code resides.
17,3.748579023200358,-1.5218911659654526,5.0,  constant constant datum constant nonconstant datum nonconstant constant datum nonconstant nonconstant datum,What are the different ways to pass a pointer to a function?,"A function pointer contains the memory address of a function. Using a function pointer, a function can be passed to or returned by another function. Function pointers can also be stored in arrays.",The address of the location in memory where the function code resides.
18,3.748579023200358,-1.5218911659654526,5.0,  nonconstant nonconstant datum nonconstant constant datum constant nonconstant datum constant constant datum,What are the different ways to pass a pointer to a function?,Function pointer is a pointer to a function. function pointer contains address of functions,The address of the location in memory where the function code resides.
19,-3.525694317555537,0.3430603794431041,2.0,  passed value reference reference argument reference argument,What are the different ways to pass a pointer to a function?,a pointer that contains the address of a function in memory.,The address of the location in memory where the function code resides.
20,5.600088788955046,5.309325122527507,5.0,  four 1 non constant non constant datum 2 non constant constant datum 3 constant non constant datum four constant constant datum,What are the different ways to pass a pointer to a function?,it contains the address of the function in memory,The address of the location in memory where the function code resides.
21,3.271665233825023,-1.4962377420464792,5.0,  nonconstant nonconstant datum nonconstant constant datum constant nonconstant datas constant constant datum,What are the different ways to pass a pointer to a function?,it is a pointer that points to the address of a function.,The address of the location in memory where the function code resides.
22,-3.505001761323239,0.30154772066936647,2.0,  value passes reference reference argument reference argument,What are the different ways to pass a pointer to a function?,"When dereferenced, a function pointer invokes a function, passing it zero or more arguments just like a normal function. In programming languages like C, function pointers can be used to simplify code, such as replacing large switch statements.",The address of the location in memory where the function code resides.
23,-2.307618957751778,0.06676990601369427,5.0,  where not move datum pointed not change,What are the different ways to pass a pointer to a function?,"Consists of sequence of nodes, each containing a number of data fields and one or two links called pointers that point to the next or previous nodes. ",A collection of elements that can be allocated dynamically.
24,-3.1024137694945613,0.2209670775014111,2.0,  only two something value reference dot operator receiving operator passing function,What are the different ways to pass a pointer to a function?,A linked list is a list in which each item in the list points to the next item in the list.,A collection of elements that can be allocated dynamically.
0,-0.37941627598580396,-0.9098082032470787,5.0,  point memory addresses beginning part pretty much point called execute,What is a function pointer?,"A linked list is a chain of structs or records called nodes and you have the ability to add, delete, or retrieve items. ",A collection of elements that can be allocated dynamically.
1,-0.4267736980418739,0.08082172846729826,5.0,  contain addresses memory,What is a function pointer?,"A list of elements, or nodes, that are linked to one another such that each element points to the next element.",A collection of elements that can be allocated dynamically.
2,-0.2683097947850275,-0.7609708691328234,5.0,  e variable point addresses function,What is a function pointer?,"A sequence of nodes, each containing data fields (specified by programmer) and pointer(s) which can point to the next or previous nodes.",A collection of elements that can be allocated dynamically.
3,0.070955159855421,2.3448281303090766,5.0,  addresses where code reside passed returned store arrays assigned other pointer,What is a function pointer?,a list of nodes where each node contains a data member and also a pointer to the next node.,A collection of elements that can be allocated dynamically.
4,-0.4267736980418743,0.08082172846729863,5.0,  contain addresses memory,What is a function pointer?,A list of items linked together.  Each item is linked to its successor.,A collection of elements that can be allocated dynamically.
5,1.4282956122632113,-0.3533688044662435,4.0,  when dereference call zero more argument,What is a function pointer?,A linked list is a chain of nodes that each store a single piece of data and pointer variables that point to other nodes in the list.,A collection of elements that can be allocated dynamically.
6,0.06758620711837167,-0.4878101258441169,5.0,  function,What is a function pointer?,"one of the fundamental data structures, and can be used to implement other data structures. It consists of a sequence of nodes, each containing arbitrary data fields and one or two references (""links"") pointing to the next and/or previous nodes. ",A collection of elements that can be allocated dynamically.
7,-0.3790912168064711,-0.2437486626457454,5.0,  contain addresses call function,What is a function pointer?,"A data structure in a sequence of nodes, each containing arbitrary data fields and one or two references (""links"") pointing to the next and/or previous nodes.",A collection of elements that can be allocated dynamically.
8,-0.2683097947850274,-0.7609708691328239,5.0,  e variable point addresses function,What is a function pointer?,Information in memory linked to the next piece of information and can only be linked forwards and not backwards.,A collection of elements that can be allocated dynamically.
9,-0.42281289305981923,-0.21353581739645996,5.0,  contain addresses function,What is a function pointer?,"A linked list is a data structure that is not necessarily in the same contiguous memory space (such as arrays). It holds the data type and points to the next data item in the list, or in a doubly linked list also to the previous item.",A collection of elements that can be allocated dynamically.
10,-0.42281289305981923,-0.21353581739645996,5.0,  contain addresses function,What is a function pointer?,A linked list is a data structure containing one or more data elements with a pointer to the next node.,A collection of elements that can be allocated dynamically.
11,0.07373114777381196,-0.542732271050671,5.0,  substitution calling function,What is a function pointer?,"A series of ""Nodes"" structures with a value and a pointer that point to a similar ""Node"". Not quite an array, but still can carry a list of values. ",A collection of elements that can be allocated dynamically.
12,0.25147850174019,-0.2645567826433548,5.0,  point memory addresses kind of like breaking branch tree object hitting other object,What is a function pointer?,A data type that contains a pointer to at least the next  element in a list.,A collection of elements that can be allocated dynamically.
13,0.07170114651972992,2.8209801358087794,5.0,  contain addresses passed returned as well as store arrays assigned other pointer,What is a function pointer?,Each component contains a Node - a data item and a pointer to the next item in the list,A collection of elements that can be allocated dynamically.
14,-0.15680504525764224,-0.5039309804819906,5.0,  variable point addresses,What is a function pointer?,"A linked list is a chain of structs or records called nodes.  Each node has at least two members, one of which points to the next item or node in the list.",A collection of elements that can be allocated dynamically.
15,-0.4267736980418747,0.08082172846729915,5.0,  contain addresses memory,What is a function pointer?,"An array based list that uses an implicit ordering scheme, often using pointers.",A collection of elements that can be allocated dynamically.
16,0.4520532566123286,-0.5576800345011661,5.0,  point passing as parameter function,What is a function pointer?,a series of structures containing data items and a pointer that links the structure to the next structure.,A collection of elements that can be allocated dynamically.
17,-0.42281289305981923,-0.21353581739645996,5.0,  contain addresses function,What is a function pointer?,"A linked list is a collection of Objects each containing at least one data member, and a pointer to the next object in the list (and the previous object in the case of a doubly linked list)",A collection of elements that can be allocated dynamically.
18,-0.42281289305981923,-0.21353581739645996,5.0,  contain addresses function,What is a function pointer?,A link list is a data structure which is built from structures and pointers. It forms a chain of nodes with pointers representing the links of the chain and holding the entire thing together,A collection of elements that can be allocated dynamically.
19,-0.32484483949607923,0.04582259490338426,4.0,  contain addresses definition,What is a function pointer?,its a list of pointers that are linked 2 each other. every pointer points to the next pointer which has the next element,A collection of elements that can be allocated dynamically.
20,-0.5090611335185251,1.5077911493518843,5.0,  contain memory addresses using passed returned store arrays,What is a function pointer?,linear collection of self-referential nodes connected by pointers.,A collection of elements that can be allocated dynamically.
21,-0.42281289305981923,-0.21353581739645996,5.0,  contain addresses function,What is a function pointer?,the items of a data structure are linked to each other using pointers,A collection of elements that can be allocated dynamically.
22,-0.4267736980418747,0.08082172846729915,5.0,  contain addresses memory,What is a function pointer?,A list of objects where each object contains a link to the next item in the list,A collection of elements that can be allocated dynamically.
23,-0.4267736980418747,0.08082172846729915,5.0,  contain addresses memory,What is a function pointer?,"A linked list is one of the fundamental data structures, and can be used to implement other data structures. It consists of a sequence of nodes, each containing arbitrary data fields and one or two references (""links"") pointing to the next and/or previous nodes.  ",A collection of elements that can be allocated dynamically.
24,-0.2394139118461892,-0.6584661153491039,5.0,  point addresses function,What is a function pointer?,Elements can be inserted into a link list at any point and does not need to be resized unlike an array needs to be.,The linked lists can be of variable length.
25,4.357383936106164,-0.011807847232202287,4.0,  when dereference invoke passing zero more argument like normal programming language like c simplify code as replacing large switch statement,What is a function pointer?,"Unlike arrays, linked lists can insert and delete without shifting data and change in size easily.",The linked lists can be of variable length.
0,1.494063392687376,-1.4935981214092522,4.0,  consist sequence node containing number datum field one two link called pointer point next previous node,What is a linked list?,"Array size is fixed,but Linked is not fixed.",The linked lists can be of variable length.
1,-1.5143900195280198,0.49399487205398607,4.0,  item point next item list,What is a linked list?,You can insert into and delete items from a pointer-based linked list without shifting data.,The linked lists can be of variable length.
2,-1.0436701661933685,-0.7489369725023303,4.0,  chain struct record called node have ability add delete retrieve item,What is a linked list?,Arrays must be of a defined size... elements can be added to a linked list w/o defining any size.,The linked lists can be of variable length.
3,-0.5511080665656615,-0.989095027066579,4.0,  element node one that element point next element,What is a linked list?,"The principal benefit of a linked list over a conventional array is that the order of the linked items may be different from the order that the data items are stored in memory or on disk, allowing the list of items to be traversed in a different order. A linked list is a self-referential datatype because it contains a pointer or link to another datum of the same type. Linked lists permit insertion and removal of nodes at any point in the list in constant time",The linked lists can be of variable length.
4,0.812393324197529,-0.8315441005105522,4.0,  sequence node containing datas field specified programmer pointer s point next previous node,What is a linked list?,You can expand when you need it.  You do not have to predetermine the size.,The linked lists can be of variable length.
5,0.27600251683102467,-1.3774740559795533,4.0,  node where node contain datas member pointer next node,What is a linked list?,Linked lists are able to grow and shrink in size as needed,The linked lists can be of variable length.
6,-1.5059253506615162,0.708550061437199,4.0,  item item successor,What is a linked list?,Linked list is able to grow in size as needed. Does not require the shifting of items during insertions and deletions,The linked lists can be of variable length.
7,-0.4061770832159516,-1.658443184288267,4.0,  chain node that store single piece datum pointer variable point other node list,What is a linked list?,"A linked list is not fixed in size, and does not require the shifting of items during insertions and deletions.",The linked lists can be of variable length.
8,4.1368078423217725,0.45079185958643353,4.0,  one fundamental datum structure implement other datas structure consist sequence node containing arbitrary datas field one two reference link pointing next previous node,What is a linked list?,There is no limit as to how many you create where an array can only hold a given amount of information.,The linked lists can be of variable length.
9,2.6170983073035536,-0.277830369798503,4.0,  datum structure sequence node containing arbitrary datas field one two reference link pointing next previous node,What is a linked list?,Linked lists have constant time insertion and deletion,The linked lists can be of variable length.
10,-1.2761199256967375,0.4241481999015896,2.0,  information memory next piece information only forwards not backwards,What is a linked list?,"Linked lists can be grown dynamically, items don't require shifting, and they have a greater awesome factor than that of arrays.",The linked lists can be of variable length.
11,0.09016064952356066,3.267797201791796,5.0,  datas structure not necessarily same contiguous memory space as arrays hold datas type point next datas item doubly previous item,What is a linked list?,Linked lists have an indefinite size. They can be added to and taken away from very easily with little difficulty in the shifting of data.,The linked lists can be of variable length.
12,0.5629144320157572,0.11658092057439509,4.0,  datas structure containing one more datum element pointer next node,What is a linked list?,"Nearly infinite size, limited only by system memory and also the ability to expand the size dynamically.",The linked lists can be of variable length.
13,-0.7058016635123981,-0.016940520813526084,4.0,  series nodes structure value pointer point similar node not array still carry value,What is a linked list?,"They grow as needed, while arrays are of fixed size.",The linked lists can be of variable length.
14,-1.238718621285738,-0.13016141328663974,4.0,  datum type contain pointer least next element list,What is a linked list?,Does not have a fixed size. Linked list is able to grow as needed. The time to access an array bases list takes a contant amount of time where as an linked-base like depends on 'i',The linked lists can be of variable length.
15,-1.1205364785558136,-0.10588516659000428,4.0,  component contain node datum item pointer next item list,What is a linked list?,Linked lists can grow and shrink as you need them to.  Arrays have a fixed size.,The linked lists can be of variable length.
16,0.24635294340455555,-2.37571416237734,4.0,  chain struct record called node node have at least two member one point next item node list,What is a linked list?,more memory can be allocated on the fly for more items,The linked lists can be of variable length.
17,-1.4157264163681653,0.1458992477500227,1.0,  array base implicit ordering scheme often using pointer,What is a linked list?,"A linked list may be increased in size as needed, while an array's size is set when it is created",The linked lists can be of variable length.
18,0.43327949705800267,2.161924522186162,4.0,  series structure containing datas item pointer link structure next structure,What is a linked list?,"Array has a fixed size, but linked list is able to grow in size as needed",The linked lists can be of variable length.
19,-0.36652064779369703,0.6283057992046882,4.0,  collection object containing at least one datas member pointer next object previous object case doubly list,What is a linked list?,its resizeable,The linked lists can be of variable length.
20,0.5175712771344446,0.8654708599960612,4.0,  link datas structure build structure pointer form chain node pointer representing link chain holding entire thing together,What is a linked list?,Linked lists do not have a set size and can grow or shrink as needed.,The linked lists can be of variable length.
21,-1.0748076251632268,-0.4740120665469518,4.0,  pointer two other pointer point next pointer have next element,What is a linked list?,linked lists are abe to grow as needed to a new size,The linked lists can be of variable length.
22,-0.9305954824694151,-0.5334416576760778,4.0,  linear collection self referential node connected pointer,What is a linked list?,"The size is not fixed, easier sorting because of no shifting, easier to insert items into the list",The linked lists can be of variable length.
23,-0.8659173750355608,0.7209302356235783,4.0,  item datum structure other using pointer,What is a linked list?,The size of array is restricted to declaration. Insertion/Deletion of values in middle of array is not possible.,The linked lists can be of variable length.
24,-1.3074371027541296,0.5778911791532889,4.0,  object where object contain link next item list,What is a linked list?,Array can retrieve memory from any place in the list while in a link list you have to traverse through each individual node.,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal)."
25,4.1368078423217725,0.45079185958643353,4.0,  one fundamental datum structure implement other datas structure consist sequence node containing arbitrary datas field one two reference link pointing next previous node,What is a linked list?,"Arrays require less memory than linked lists and allow direct access to a specified item. Also, insertion and deletion in arrays does not require a list traversal.","The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal)."
0,0.16837676006172933,-0.600286262182687,5.0,  element inserted link point does not need resize array need,What is the main advantage of linked lists over arrays?,"Access to a particular element is very fast, because its location in memory can be determined mathematically and accessed directly.","The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal)."
1,-0.0450592830918258,-0.9724781025726305,5.0,  array insert delete shifting datum change size easily,What is the main advantage of linked lists over arrays?,Arrays are good for random access and good for sequential access which are both in constant time. Where linked lists are linear for random access. Arrays are faster in this case.,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal)."
2,-0.39379179947229975,-0.09140202633873164,5.0,  array size fixed not fixed,What is the main advantage of linked lists over arrays?,"An array is capable of accessing any part of that array based on the index. The link list must be traversed from the beginning or the end, that is, data can only be accessed if it is adjacent to the previous or next nodes.","The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal)."
3,0.6660089021484181,-1.1380868308158945,5.0,  insert delete item pointer base shifting datum,What is the main advantage of linked lists over arrays?,"On the other hand, arrays allow random access, while linked lists allow only sequential access to elements. Singly-linked lists, in fact, can only be traversed in one direction.","The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal)."
4,-0.5259180120364757,-0.664738944303374,5.0,  must define size element added w o defining size,What is the main advantage of linked lists over arrays?,You have to keep up with the head of the list.,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal)."
5,6.7713247614565555,1.1738871732345755,3.0,  principal benefit conventional array that order item different order that datas item store memory disk allowing item traverse different order self referential datatype because contain pointer link datum same type permit insertion removal node point constant time,What is the main advantage of linked lists over arrays?,Arrays are easier to implement and require less memory,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal)."
6,-0.4659632361977612,-0.6643938470592944,5.0,  expand when need do not have predetermine size,What is the main advantage of linked lists over arrays?,Linked list has an increase complexity of the implementation. The linked list has an array that keeps growing which leads to a increase in memory.,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal)."
7,-0.7185813200480793,0.7717067338082102,5.0,  able grow shrink size as needed,What is the main advantage of linked lists over arrays?,You don't have to iterate through the entire list to access elements.,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal)."
8,-0.16668613167089932,0.58783401386432,5.0,  able grow size as needed does not require shifting item insertion deletion,What is the main advantage of linked lists over arrays?,you can go forwards and backwards and point to any piece of data at any given time where linked lists have to point to the next piece of data.,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal)."
9,0.1320103741748711,-0.5699363296566919,5.0,  not fixed size does not require shifting item insertion deletion,What is the main advantage of linked lists over arrays?,Take up less memory and are contiguously stored,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal)."
10,-0.2585540291917378,0.276224708664194,3.0,  limit as how many create where array only hold give amount information,What is the main advantage of linked lists over arrays?,"Arrays, being fixed, are less error prone.","The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal)."
11,0.2301103784852588,-0.32768101469360733,4.0,  have constant time insertion deletion,What is the main advantage of linked lists over arrays?,"Arrays have a set list of values. Meaning you can pick a spot in the array such as a[7] picks the 8th spot in the array. With linked lists you have to keep track with pointers if you want to take specific nodes out, otherwise you must traverse the entire list. ","The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal)."
12,0.13935374790806568,-0.823593927329117,5.0,  grow dynamically item do not require shifting have greater awesome factor than arrays,What is the main advantage of linked lists over arrays?,"direct access to elements, and speed, linked lists have increased search times to access elements even if the list is sorted. ( like getting the last element without a pointer directly to the end of the list. )","The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal)."
13,-0.2592745641017102,-0.9874080723845812,5.0,  have indefinite size added take away very easily little difficulty shifting datum,What is the main advantage of linked lists over arrays?,Array items are accessed directly with equal access time,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal)."
14,-0.4178684594868097,-0.7843031761148451,5.0,  nearly infinite size limited only system memory ability expand size dynamically,What is the main advantage of linked lists over arrays?,Array-bases implementations require less memory than a pointer-bases one.,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal)."
15,-0.6396491709361996,0.8389758732034379,5.0,  grow as needed array fixed size,What is the main advantage of linked lists over arrays?,You can access specific elements quickly in an array.  In a linked list you must traverse the list to get access the same element.,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal)."
16,-0.9274808647598535,3.439827443240898,5.0,  does not have fixed size able grow as needed time access array basis take contant amount time where as base like depend,What is the main advantage of linked lists over arrays?,link lists only allow sequential access where arrays allow random access,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal)."
17,-0.7164365015286125,0.43916417507368427,5.0,  grow shrink as need have fixed size,What is the main advantage of linked lists over arrays?,"Any entitiy in an array may accessed immediately, whereas a linked list must be traversed one item at a time because each object only points adjacent objects","The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal)."
18,0.5466464598819858,-1.0329013548501742,4.0,  more memory allocate fly more item,What is the main advantage of linked lists over arrays?,Array based implementation requires less memory than lined lists based implementation,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal)."
19,-0.75930920384846,0.6359341089248851,5.0,  increase size as needed array size set when create,What is the main advantage of linked lists over arrays?,Array-based implementations require less memory than a pointer-based ones,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal)."
20,-0.9710270774277598,1.320985929067996,5.0,  array have fixed size able grow size as needed,What is the main advantage of linked lists over arrays?,"You can go up and down an array , but you can only go one direction while traversing a linked list.","The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal)."
21,-0.06263955238700523,-0.7919984142552845,5.0,  resizeable,What is the main advantage of linked lists over arrays?,"arrays allow for the random access of any item cotained a any time, linked lists must be gone through toget to the desired item","The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal)."
22,-0.8290601377361472,0.683915343757533,5.0,  do not have set size grow shrink as needed,What is the main advantage of linked lists over arrays?,"In arrays you have direct access to each element, but in linked lists you have to traverse the list up to the element that you need.","The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal)."
23,-0.6473420173316347,0.5119584653774788,5.0,  abe grow as needed new size,What is the main advantage of linked lists over arrays?,"Array size is fixed. But Linked is not fixed, data is also accessed quicker in array list, also memory requirement is less and no pointers required. Arrays have random access and less overheads compared to Linked list have sequential access only with too much overheads and no cache memory support. On the other hand, arrays allow random access, while linked lists allow only sequential access to elements. Singly-linked lists, in fact, can only be traversed in one direction.","The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal)."
24,0.22567755019909308,-0.980244293553281,5.0,  size not fixed easier sorting because shifting easier insert item list,What is the main advantage of linked lists over arrays?,They are passed by reference because you want the function to change the pointer,By reference.
25,-0.07486757306270046,-0.25096137210702113,5.0,  size array restricted declaration insertion deletion value middle array not possible,What is the main advantage of linked lists over arrays?,Linked lists are passed as arguments to a function by passing the head pointer of the list by reference.,By reference.
0,-0.7955431358635885,0.08856642217958559,5.0,  retrieve memory place link have traverse individual node,What is the main advantage of arrays over linked lists?,- A function with access to a linked list's head pointer has access to the entire list.        - Pass the head ponter to a function as a reference argument.,By reference.
1,0.04852131171860945,-1.748205954207869,4.0,  require less memory than direct accesses specified item insertion deletion arrays does not require traversal,What is the main advantage of arrays over linked lists?,By using a node.,By reference.
2,-0.1911840259354484,0.14480398292556396,5.0,  accesses particular element very fast because location memory determine mathematically accessed directly,What is the main advantage of arrays over linked lists?,Pass-by-reference,By reference.
3,1.841971096710718,0.26244820933664076,5.0,  good random accesses good sequential accesses constant time where linear random accesses arrays faster case,What is the main advantage of arrays over linked lists?,you send a pointer to an object of the LinkedList class,By reference.
4,-0.7409135369456558,0.17562291494689164,5.0,  capable accessing part base index link must traverse beginning end datum only accessed if adjacent previous next node,What is the main advantage of arrays over linked lists?,Passed as a pointer to the head.,By reference.
5,2.3419482572827803,0.38631093072459094,5.0,  other hand random accesses only sequential accesses element singly fact only traverse one direction,What is the main advantage of arrays over linked lists?,Passing the head pointer of a linked list to a function gives that function access to all nodes of that linked list,By reference.
6,-1.0201217164081287,0.36516159896843037,1.0,  have keep head list,What is the main advantage of arrays over linked lists?,You have to pass the head pointer to a function since it has access to the entire list.,By reference.
7,-0.6389800147837784,-1.171049556196052,3.0,  arrays easier implement require less memory,What is the main advantage of arrays over linked lists?,You pass the head pointer to a function as a reference argument.,By reference.
8,-0.8923477883855879,0.23956135694943523,2.0,  have increase complexity implementation have keep growing lead increase memory,What is the main advantage of arrays over linked lists?,not answered,By reference.
9,-0.16563175944665992,0.7237021033644057,5.0,  do not have iterate entire accesses element,What is the main advantage of arrays over linked lists?,passes a pointer to a linked list object,By reference.
10,-1.0094967876979952,0.3838335350763175,2.0,  go forwards backward point piece datum give time where have point next piece datum,What is the main advantage of arrays over linked lists?,"The linked list object contains the head, through which the other elements are accessible.",By reference.
11,-0.8213022630429788,-0.7690617179595488,4.0,  take less memory contiguously store,What is the main advantage of arrays over linked lists?,By the head of the list. It takes the head address and traverses from there on in.,By reference.
12,-0.6344383409468967,-0.6317420310662625,1.0,  arrays being fixed less error prone,What is the main advantage of arrays over linked lists?,as a pointer node.,By reference.
13,-1.0826795747133424,2.5290471907876437,5.0,  arrays have set value meaning pick spot as a[7 ] pick 8th spot have keep track pointer if want take specific node out otherwise must traverse entire list,What is the main advantage of arrays over linked lists?,A method with access to a linked list's head pointer as access to the entire list,By reference.
14,-0.0608073870445149,2.801649124030974,5.0,  direct accesses element speed have increase search time access element even if sorted like getting last element pointer directly end list,What is the main advantage of arrays over linked lists?,A function with access to a linked list's head pointer has access to the entire list. Pass the head pointer to a function as a reference argument,By reference.
15,-0.4382589622348551,0.03965414213626028,5.0,  item accessed directly equal accesses time,What is the main advantage of arrays over linked lists?,the head pointer is passed to a function as a reference argument.,By reference.
16,-0.6855163320555485,-1.7640862071537031,3.0,  basis implementation require less memory than pointer basis one,What is the main advantage of arrays over linked lists?,the pointer to the first element is passed to a function,By reference.
17,-0.20944035617954904,1.2834959672007207,5.0,  access specific element quickly must traverse get accesses same element,What is the main advantage of arrays over linked lists?,"linked lists are passed by reference, specificly the Head pointer",By reference.
18,1.0392028868644325,0.02255616971574074,5.0,  link only sequential accesses where random accesses,What is the main advantage of arrays over linked lists?,Pass the head pointer to a function as a reference argument,By reference.
19,-0.610793720109969,-0.00928985950527896,5.0,  entitiy accessed immediately whereas must traverse one item time because object only point adjacent object,What is the main advantage of arrays over linked lists?,by refrenece,By reference.
20,-1.0038345173677803,-2.2049626502653155,3.0,  base implementation require less memory than line base implementation,What is the main advantage of arrays over linked lists?,By passing the head pointer and going through the list as needed inside the function.,By reference.
21,-0.7674713953347726,-2.0171928169131323,3.0,  base implementation require less memory than pointer base one,What is the main advantage of arrays over linked lists?,linked lists are passed by using pointers,By reference.
22,-0.5665846078142848,-0.20562286038441593,1.0,  go up only go one direction traversing list,What is the main advantage of arrays over linked lists?,the head object is passed to the function,By reference.
23,-0.17328900203946446,-0.018216054696890246,5.0,  arrays random accesses item cotaine time must gone toget desire item,What is the main advantage of arrays over linked lists?,"Linked lists permit insertion and removal of nodes at any point in the list in constant time,[1] but do not allow random access. ",By reference.
24,0.07316829905669407,1.6242851323820149,5.0,  have direct accesses element have traverse element need,What is the main advantage of arrays over linked lists?,They are passed by reference because you want the function to change the pointer,The last element in a circular linked list points to the head of the list.
25,7.163823372717547,-0.5312690723767503,5.0,  size fixed not fixed datum accessed quicker memory requirement less pointer require arrays have random accesses less overhead compare have sequential accesses only too much overhead cache memory support other hand random accesses only sequential accesses element singly fact only traverse one direction,What is the main advantage of arrays over linked lists?,"In a circular linked list, every node has a successor which means that the last node's successor is the head or first node.",The last element in a circular linked list points to the head of the list.
0,-0.5083289759233391,-0.48024965042688644,4.0,  reference because want change pointer,How are linked lists passed as arguments to a function?,A circular linked list is a linked list that links items in a continuous circle. This allows the full list to be traversed by starting at any item in the list; a fixed head or tail is not required.,The last element in a circular linked list points to the head of the list.
1,0.03757198579218171,-0.6155265541402005,5.0,  passing head pointer reference,How are linked lists passed as arguments to a function?,"In a circular linked list, the last node points to the first node.",The last element in a circular linked list points to the head of the list.
2,2.7338951660120796,0.15138793531350328,5.0,  accesses head pointer have accesses entire pass head ponter reference argument,How are linked lists passed as arguments to a function?,"On a circular linked list, the end element points to the head, thus making the circle. A basic link list has nothing pointing to the head, and the last element points to null.",The last element in a circular linked list points to the head of the list.
3,-1.085520390539879,0.4508376118161183,2.0,  using node,How are linked lists passed as arguments to a function?,the circular linked list's last node points to the begining of the list while a standard linked list points to NULL,The last element in a circular linked list points to the head of the list.
4,-0.47899775911366,-0.28359263598095624,5.0,  pass reference,How are linked lists passed as arguments to a function?,The last item in the list points to the head,The last element in a circular linked list points to the head of the list.
5,-0.8459696862614081,-0.13862459683364617,2.0,  send pointer object linkedlist classes,How are linked lists passed as arguments to a function?,"In a circular linked list, the last node points back to the first node, there is no NULL",The last element in a circular linked list points to the head of the list.
6,-0.17437824197649252,-0.2797806778071297,5.0,  pointer head,How are linked lists passed as arguments to a function?,"Circular linked lists are most useful for describing naturally circular structures, and have the advantage of regular structure and being able to traverse the list starting at any point.",The last element in a circular linked list points to the head of the list.
7,0.41441124867470486,0.7893013809171604,5.0,  passing head pointer give that accesses node list,How are linked lists passed as arguments to a function?,A circular linked list has the last node point back to the head of the linked list.,The last element in a circular linked list points to the head of the list.
8,1.6750094940562301,0.7292413106827166,5.0,  have pass head pointer since have accesses entire list,How are linked lists passed as arguments to a function?,Basic linked list points to a NULL at the end and circular points to the head at the end.,The last element in a circular linked list points to the head of the list.
9,0.5331307587516237,-0.8522689352664088,5.0,  pass head pointer reference argument,How are linked lists passed as arguments to a function?,in a circular linked list the the last item points to the first item.,The last element in a circular linked list points to the head of the list.
10,-1.0478199365764571,0.3651706841470392,0.0,  not answered,How are linked lists passed as arguments to a function?,"The circular linked list's tail points to the head, whereas the basic linked list's tail points to a NULL.",The last element in a circular linked list points to the head of the list.
11,-0.7869879815060584,-0.11690540910072032,2.0,  passes pointer object,How are linked lists passed as arguments to a function?,a basic linked list has an end with a null value where a circular linked list has a pointer from the end to the beginning,The last element in a circular linked list points to the head of the list.
12,-0.6806473990914896,-0.2355205721371914,4.0,  object contain head other element accessible,How are linked lists passed as arguments to a function?,"how to determine the end of the list, in basic linked lists the last element links to a null pointer, while circular linked lists link to the head element at the end.",The last element in a circular linked list points to the head of the list.
13,0.028744286914758353,-0.5140183256416864,5.0,  head take head addresses traverse there on,How are linked lists passed as arguments to a function?,"No Node in a circular linked list contains NULL, the last Node points pack to a Node within the list.",The last element in a circular linked list points to the head of the list.
14,-0.7355397973313198,0.2450492676934453,3.0,  pointer node,How are linked lists passed as arguments to a function?,"The difference between a circular linked list and a basic linked list is that a circular linked list, the last node references the first node. Every node in a circular linked list has a successor and no node in a circular linked list contains NULL.",The last element in a circular linked list points to the head of the list.
15,1.3013246188936065,1.089546505434599,5.0,  method accesses head pointer accesses entire list,How are linked lists passed as arguments to a function?,No node in a circular linked list contains NULL.,The last element in a circular linked list points to the head of the list.
16,2.9308716173986133,-0.03456881882775511,5.0,  accesses head pointer have accesses entire pass head pointer reference argument,How are linked lists passed as arguments to a function?,in a circular linked list the last element points to the head of the list,The last element in a circular linked list points to the head of the list.
17,0.26609968519487454,-0.7693008490049678,5.0,  head pointer reference argument,How are linked lists passed as arguments to a function?,"In a regular linked list the last object points to NULL. In a circular linked list, the last object points back to the beginning of the list",The last element in a circular linked list points to the head of the list.
18,-0.7937297164862692,-0.15335121707482677,5.0,  pointer first element function,How are linked lists passed as arguments to a function?,"In circular linked list each node has successor, no node contains NULL, while in basic linked list last node contain NULL.",The last element in a circular linked list points to the head of the list.
19,0.03145326086559424,-0.6449219058957053,5.0,  reference specificly head pointer,How are linked lists passed as arguments to a function?,"in a circular linked lists, the last element points to the first",The last element in a circular linked list points to the head of the list.
20,0.5331307587516237,-0.8522689352664088,5.0,  pass head pointer reference argument,How are linked lists passed as arguments to a function?,"A circular linked list does not have a last element. Instead, it's last item points to the head of the list.",The last element in a circular linked list points to the head of the list.
21,-0.9839461059680938,0.1268826236527416,5.0,  refrenece,How are linked lists passed as arguments to a function?,"in a circular linked list, the last node contains a pointer that goes back to the first node; in a basic linked list, the last node contains a null pointer ",The last element in a circular linked list points to the head of the list.
22,-0.23889052312307807,-0.4140646238157127,5.0,  passing head pointer going needed function,How are linked lists passed as arguments to a function?,"in a circular linked list, the last object is linked back to the first object.",The last element in a circular linked list points to the head of the list.
23,-0.7226399492740873,-0.026464405126711766,3.0,  using pointer,How are linked lists passed as arguments to a function?,"In the case of a non circular link list, if you are at the last node of the list and u want to move to first u need to go to one, step back till u reach to first. But in circular link list from last to first you need to make only one move.  In a single link list u can move only in one direction but in double link list u can move in any direction back or forward or forward.  ",The last element in a circular linked list points to the head of the list.
24,-0.6177922736475663,-0.21260689227614898,4.0,  head object function,How are linked lists passed as arguments to a function?,they can traverse in both directions,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list."
25,-0.7844541444866914,2.676617684965736,0.0,  permit insertion removal node point constant time [ 1 ] do not random accesses,How are linked lists passed as arguments to a function?,In a doubly linked list you can delete a node without having to traverse the list.,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list."
0,-0.5022249881950009,-0.5687624293961541,0.0,  passed reference because want function change pointer,What is the difference between a circular linked list and a basic linked list?,A doubly-linked list allows you to delete a node without traversing the list to establish a trailing pointer.,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list."
1,0.278685064882966,2.2934816555705497,5.0,  node have successor mean that last node successor head first node,What is the difference between a circular linked list and a basic linked list?,A doubly linked list allows you to traverse the list in either direction. Each node points to its successor as well as to its predecessor.,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list."
2,-0.4290698629556456,-1.4911375363508217,5.0,  link item continuous circle full traverse starting item fixed head tail not require,What is the difference between a circular linked list and a basic linked list?,"Doubly-linked lists can traverse backwards, though they still cannot access data at any point in the list, it can be shorter to traverse backwards.","All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list."
3,0.0720804382112473,0.9328494568225802,5.0,  last node point first node,What is the difference between a circular linked list and a basic linked list?,you can traverse the list from front to back and back to front,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list."
4,-0.724492540783518,-1.769775621329672,5.0,  end element point head thus making circle link have nothing pointing head last element point null,What is the difference between a circular linked list and a basic linked list?,You can traverse the list in reverse.,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list."
5,-0.6270861114968137,0.05908553508348099,5.0,  last node point begining standard point null,What is the difference between a circular linked list and a basic linked list?,Doubly linked lists can be traversed in both directions,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list."
6,-0.6675526498656282,-0.962683403774777,5.0,  last item point head,What is the difference between a circular linked list and a basic linked list?,"Double-linked lists require more space per node, and their elementary operations are more expensive; but they are often easier to manipulate because they allow sequential access to the list in both directions.","All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list."
7,0.23558694013452597,1.0791820552839817,5.0,  last node point back first node null,What is the difference between a circular linked list and a basic linked list?,You can traverse forwards and backwards through nodes.,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list."
8,-0.961435335909318,-1.0004408495453199,2.0,  most useful describing naturally structure have advantage regular structure being able traverse starting point,What is the difference between a circular linked list and a basic linked list?,You can point both forwards and backwards,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list."
9,-0.34731634089587743,-0.027401080369852938,5.0,  have last node point back head list,What is the difference between a circular linked list and a basic linked list?,You can go backwards in the linked list and access previous data easier without having to keep track of the previous item,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list."
10,-1.1181636788348153,-1.224537228865544,5.0,  point null end point head end,What is the difference between a circular linked list and a basic linked list?,Doubly linked lists allow backward movement through the nodes.,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list."
11,-0.2902235607643952,-0.8497225733830933,5.0,  last item point first item,What is the difference between a circular linked list and a basic linked list?,"they have double pointers, so each node can point forwards or backwards. Making it a little easer to get to where you need. ","All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list."
12,-1.0838932634968614,-1.0920982243760984,5.0,  tail point head whereas tail point null,What is the difference between a circular linked list and a basic linked list?,ability to backtrack through a list.,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list."
13,-0.8768057117287154,-0.5803107550873456,5.0,  have end null value where have pointer end beginning,What is the difference between a circular linked list and a basic linked list?,You can move forwards and backwards in the double-linked list. Basic only moves forwards.,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list."
14,0.10930889317438261,-1.4811372527462832,5.0,  how determine end last element link null pointer link head element end,What is the difference between a circular linked list and a basic linked list?,The advantage is that each node points to bothe its predecessor and its successor. There are no special cases for insertion and deletion.,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list."
15,-0.19052771254812526,2.226012615362394,5.0,  no node contain null last node point pack node list,What is the difference between a circular linked list and a basic linked list?,each node points to both its predecessor and its successor.,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list."
16,0.4440024309545197,3.615330081703671,5.0,  that last node reference first node node have successor no node contain null,What is the difference between a circular linked list and a basic linked list?,a doubly linked list has pointers in both directions. this allows for access from back to front as well as front to back,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list."
17,-0.473871613274404,0.7374324853962393,3.0,  no node contain null,What is the difference between a circular linked list and a basic linked list?,"A doubly linked list can be traversed either direction, while a normal linked list can only be traversed from start to finish","All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list."
18,-0.6979231724280774,-1.016443390114844,5.0,  last element point head list,What is the difference between a circular linked list and a basic linked list?,"Double Linked list are often easier to manipulate, because they allow sequential access to the list in both direction","All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list."
19,-0.4512304158903607,-0.8069818971119822,5.0,  regular last object point null last object point back beginning list,What is the difference between a circular linked list and a basic linked list?,"given a node in the list, one can navigate easily in either direction","All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list."
20,-0.08261273975900642,2.961349949371626,3.0,  node have successor node contain null last node contain null,What is the difference between a circular linked list and a basic linked list?,You can traverse the list both forward and backwards.,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list."
21,-0.25654795104972644,-0.7846722843543469,5.0,  last element point first,What is the difference between a circular linked list and a basic linked list?,a doubly linked list allows you to back up from a node rather than having to go through the entire list again,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list."
22,-0.6394752459643488,-1.0617454507734367,5.0,  does not have last element instead last item point head list,What is the difference between a circular linked list and a basic linked list?,Gives faster times for some operations such as insertion and deletion,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list."
23,0.7437673048980116,2.8463670314154608,5.0,  last node contain pointer goes back first node last node contain null pointer,What is the difference between a circular linked list and a basic linked list?,"The primary disadvantage of doubly linked lists are that (1) each node requires an extra pointer, requiring more space, and (2) the insertion or deletion of a node takes a bit longer (more pointer operations).","All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list."
24,0.1274397197523843,-0.549271290179641,5.0,  last object back first object,What is the difference between a circular linked list and a basic linked list?,they take up twice as much memory for each node,Extra space required to store the back pointers.
25,8.409582103832602,-1.483969598250776,2.0,  case non link if last node want move first need go one step back till reach first link last first need only one move single link move only one direction double link move direction back forward forward,What is the difference between a circular linked list and a basic linked list?,"In a doubly linked list, there are more pointers to set and the mechanics of inserting and deleting are more difficult. Also, the special cases at the beginning or end of the list are more complicated.",Extra space required to store the back pointers.
0,-0.544890602913381,0.06375973435300678,3.0,  traverse direction,What is the main advantage of a doubly-linked list over a basic linked list?,"There are more pointers to set, the mechanics of inserting into and deleting from a doubly linked list are a bit more involved than for a singly linked list.",Extra space required to store the back pointers.
1,-0.22550805449290093,-0.362104500272231,5.0,  delete node having traverse list,What is the main advantage of a doubly-linked list over a basic linked list?,Insertion and deletion with a doubly linked list are more involved than with a singly linked list leaving more room for error and complex algorithms.,Extra space required to store the back pointers.
2,0.48246505469848,-0.15790200161795193,5.0,  delete node traversing establish trailing pointer,What is the main advantage of a doubly-linked list over a basic linked list?,"Need more memory to store ""previous"" pointers.",Extra space required to store the back pointers.
3,-0.18142477094824075,0.930000579263226,3.0,  traverse direction node point successor as well as predecessor,What is the main advantage of a doubly-linked list over a basic linked list?,a node in a doubly linked list takes up more memory than a node in a singly linked list.,Extra space required to store the back pointers.
4,-1.7642080600749368,-1.2918019923741524,3.0,  traverse backwards though still not access datum point shorter traverse backwards,What is the main advantage of a doubly-linked list over a basic linked list?,You have to keep up with where you are and you have to consider the predecessor and successor connections when inserting/deleting.,Extra space required to store the back pointers.
5,-0.7878986961188139,1.8043155449940493,3.0,  traverse front back back front,What is the main advantage of a doubly-linked list over a basic linked list?,"Each node requires an extra node, requires more memory, and is more difficult to insert and remove individual nodes",Extra space required to store the back pointers.
6,-0.5826926021493806,-0.16804872469417875,3.0,  traverse reverse,What is the main advantage of a doubly-linked list over a basic linked list?,"Double-linked lists require more space per node, and their elementary operations are more expensive",Extra space required to store the back pointers.
7,-0.5448906029133812,0.06375973435300626,3.0,  traverse direction,What is the main advantage of a doubly-linked list over a basic linked list?,More difficult to delete and create nodes.,Extra space required to store the back pointers.
8,2.368453701351758,0.024313150121693734,4.0,  double require more space node elementary operation more expensive often easier manipulate because sequential accesses direction,What is the main advantage of a doubly-linked list over a basic linked list?,They use more memory and you have to make 2 pointers and update 2 pointers each time you change the list.,Extra space required to store the back pointers.
9,-0.46830856491497375,-0.6120142771222915,3.0,  traverse forward backwards node,What is the main advantage of a doubly-linked list over a basic linked list?,nodes take up more memory,Extra space required to store the back pointers.
10,-0.5641813717344116,-0.5211849716816065,3.0,  point forward backwards,What is the main advantage of a doubly-linked list over a basic linked list?,"Each node requires an extra pointer (space requirements increased), Insertion or deletion of a node takes a longer (more pointer operations).",Extra space required to store the back pointers.
11,-0.8188537472117638,-1.0004473809544816,4.0,  go backwards access previous datum easier having keep track previous item,What is the main advantage of a doubly-linked list over a basic linked list?,its a little more confusing. The special cases at the end and beginning become more difficult to do.,Extra space required to store the back pointers.
12,0.14558061622112806,-0.2187162368434561,3.0,  backward movement node,What is the main advantage of a doubly-linked list over a basic linked list?,increased actions to add and remove elements to the linked list.,Extra space required to store the back pointers.
13,0.6054244948662711,-0.19035946949985502,3.0,  have double pointer node point forwards making little easer get where need,What is the main advantage of a doubly-linked list over a basic linked list?,"Inserting and deleting in a double-linked list is more involved, and has special cases at the beginning and end.",Extra space required to store the back pointers.
14,-0.2783224241472208,-0.1263375380642722,3.0,  ability backtrack list,What is the main advantage of a doubly-linked list over a basic linked list?,The main disadvanate is that if hard to remove all items in the list.,Extra space required to store the back pointers.
15,-0.5193737036598564,-0.6849953294090698,3.0,  move forwards backwards double only move forwards,What is the main advantage of a doubly-linked list over a basic linked list?,"each node requires an extra pointer, taking up more storage.  insertions and deletions require more pointer operations.",Extra space required to store the back pointers.
16,0.6817600597073115,-0.4534127595687247,4.0,  that node point bothe predecessor successor special case insertion deletion,What is the main advantage of a doubly-linked list over a basic linked list?,"in a doubly linked list there are twice as many pointers for each element , therefore more memory is used",Extra space required to store the back pointers.
17,0.1152794868052939,-0.3047871648891255,4.0,  node point both predecessor successor,What is the main advantage of a doubly-linked list over a basic linked list?,The process of adding and removing Nodes in a Doubly linked list is more complex than in a basic linked list,Extra space required to store the back pointers.
18,-0.07376827380077147,3.55048207121316,3.0,  have pointer direction accesses back front as well as front back,What is the main advantage of a doubly-linked list over a basic linked list?,"Double linked lists require more space per node, and their elementary operation are more expensive",Extra space required to store the back pointers.
19,-1.0149640269527427,-0.04268980411810846,3.0,  traverse direction normal only traverse start finish,What is the main advantage of a doubly-linked list over a basic linked list?,"1- each node requires an extra pointer, requiring more space 2- the insertion or deletion of a node takes a bit longer, more pointer operations",Extra space required to store the back pointers.
20,0.3788537623572393,0.31489912818898874,4.0,  double often easier manipulate because sequential accesses direction,What is the main advantage of a doubly-linked list over a basic linked list?,It takes up twice the storage needed.,Extra space required to store the back pointers.
21,0.18359807412739684,0.04360949389480864,4.0,  give node navigate easily direction,What is the main advantage of a doubly-linked list over a basic linked list?,"using more pointers to enable the backward movement takes up more memory, having more pointers make it slightly more work to add or remove a node from the list",Extra space required to store the back pointers.
22,-0.8727423004983299,-0.5443493878046929,3.0,  traverse both forward backwards,What is the main advantage of a doubly-linked list over a basic linked list?,"increased memory requirements, slightly more complicated when modifying elements in the list",Extra space required to store the back pointers.
23,0.024031713930238445,0.2625486332866296,4.0,  back node rather than having go entire again,What is the main advantage of a doubly-linked list over a basic linked list?,not answered,Extra space required to store the back pointers.
24,0.32963508506610883,0.27332635171830505,5.0,  give faster time operation as insertion deletion,What is the main advantage of a doubly-linked list over a basic linked list?,A data structure for storing items which are to be accessed in last-in first-out order that can be implemented in three ways.,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)"
25,3.9269457533998855,-0.6518628824726816,0.0,  primary disadvantage that 1 node require extra pointer requiring more space 2 insertion deletion node take bit longer more pointer operation,What is the main advantage of a doubly-linked list over a basic linked list?,A stack is an abstract data type that is based on the principle that the last element inserted into the stack will be the first element removed from the stack.,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)"
0,-0.8976730027846983,-1.3014420853677253,5.0,  take twice as much memory node,What is the main disadvantage of a doubly-linked list over a basic linked list?,Stores a set of elements in a particular order.,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)"
1,0.4109487191558577,2.9570422754916086,4.0,  more pointer set mechanic inserting deleting more difficult special case beginning end more complicated,What is the main disadvantage of a doubly-linked list over a basic linked list?,"An ADT whose most recently inserted item is the first item removed or retrieved. This property is called last in, first out (LIFO). Items enter and leave a stack at its top.","A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)"
2,-0.07412234963034435,1.6656409519702862,4.0,  more pointer set mechanic inserting deleting bit more involved than singly list,What is the main disadvantage of a doubly-linked list over a basic linked list?,A list in which only the top (or last item added) can be modified.,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)"
3,-0.06910976158891627,0.7584936645453051,3.0,  insertion deletion more involved than singly leaving more room error complex algorithm,What is the main disadvantage of a doubly-linked list over a basic linked list?,a stack is a data structure that uses push to insert an item and pop to remove ad item. The stack use a last in first out structure for inserting and removing items.,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)"
4,-0.4705702329802758,0.03852810658477764,5.0,  need more memory store previous pointer,What is the main disadvantage of a doubly-linked list over a basic linked list?,A data structure that stores data using LIFO.,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)"
5,0.09233185121303189,-0.8187340582334304,5.0,  node take more memory than node singly list,What is the main disadvantage of a doubly-linked list over a basic linked list?,"A stack is similar to an array, but does not allow for random access. Stacks only allow a user to retrieve the last item put into the stack. Last in, fist out.","A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)"
6,-2.07486465309113,-0.15927441976596324,3.0,  have keep where have consider predecessor successor connection when inserting deleting,What is the main disadvantage of a doubly-linked list over a basic linked list?,Stores a set of elements in a particular order. Stack principle: LAST  IN  FIRST  OUT. It means: the last element inserted is the first one to be removed.,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)"
7,2.0206703422111056,-1.1224574273868364,5.0,  node require extra node require more memory more difficult insert remove individual node,What is the main disadvantage of a doubly-linked list over a basic linked list?,A stack is an ADT that stores a set of elements in a particular order.,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)"
8,0.8678647470823871,-0.2052833895242423,5.0,  double require more space node elementary operation more expensive,What is the main disadvantage of a doubly-linked list over a basic linked list?,"a data type that stores a set of elements in a certain order, last in, first out.","A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)"
9,-0.395003757675903,-0.31167063744582474,3.0,  more difficult delete create node,What is the main disadvantage of a doubly-linked list over a basic linked list?,a data structure that moves elements in last in first out,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)"
10,-0.2609187872642256,0.3190042068789254,5.0,  more memory have two pointer update two pointer time change list,What is the main disadvantage of a doubly-linked list over a basic linked list?,Stores a set of elements in a last in first out order.,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)"
11,-0.28234960402867854,-0.5881096169294657,5.0,  node take more memory,What is the main disadvantage of a doubly-linked list over a basic linked list?,A list that can be added to or removed from only from the top.,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)"
12,2.2052449351430137,-1.514506544842725,5.0,  node require extra pointer space requirement increase insertion deletion node take longer more pointer operation,What is the main disadvantage of a doubly-linked list over a basic linked list?,"a stack is an Abstract data type which operates on a last in first out basis for storing a list of objects, and does not support ( at least in the pure stack) peeking at a element without removing the rest of the stack first.","A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)"
13,-0.42287464026495575,1.6895438413363861,3.0,  little more confusing special case end beginning become more difficult do,What is the main disadvantage of a doubly-linked list over a basic linked list?,Stores a set of elements in a particular order based on the principle of Last In First Out (LIFO).,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)"
14,-1.4870039799864219,-0.661074903433959,3.0,  increase action add remove element list,What is the main disadvantage of a doubly-linked list over a basic linked list?,"an object list that stores elements in a particular order, the first object inserted is at the bottom with the last object at the top so the first object in is the last object out.","A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)"
15,-1.2161691869534357,1.3757073419083994,3.0,  inserting deleting double more involved have special case beginning end,What is the main disadvantage of a doubly-linked list over a basic linked list?,An ADT that stores a set of elements in a particular order. The stack principles are LIFO. The last item inserted in the list is the first out.,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)"
16,-1.570852620713491,-0.6955239100299879,1.0,  disadvanate that if hard remove item list,What is the main disadvantage of a doubly-linked list over a basic linked list?,An abstract data type that stores a set of elements in a particular order.,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)"
17,2.320511146420907,-0.3836831263768228,5.0,  node require extra pointer taking more storage insertion deletion require more pointer operation,What is the main disadvantage of a doubly-linked list over a basic linked list?,a collection of data to be executed in the order of last in first out,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)"
18,-0.5938825318714755,-0.09127291684055938,5.0,  twice as many pointer element therefore more memory,What is the main disadvantage of a doubly-linked list over a basic linked list?,"A stack is a data structure that allows data members to be added or removed one at a time, and in order. They are a ""Last in First Out"" structure.","A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)"
19,-0.5203328279458539,-0.3301881028878193,3.0,  processes adding removing node more complex than list,What is the main disadvantage of a doubly-linked list over a basic linked list?,Stores a set of element in a particular order,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)"
20,0.8678647470823871,-0.2052833895242423,5.0,  double require more space node elementary operation more expensive,What is the main disadvantage of a doubly-linked list over a basic linked list?,is a list of element where the first one to be removed is the last one inserted,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)"
21,2.8370371830461645,-0.8101155275739956,5.0,  1 node require extra pointer requiring more space 2 insertion deletion node take bit longer more pointer operation,What is the main disadvantage of a doubly-linked list over a basic linked list?,A data structure that puts elements in a list and only allows the user  access to the last element.,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)"
22,-1.2810548404158717,-0.8022859299235884,5.0,  take storage needed,What is the main disadvantage of a doubly-linked list over a basic linked list?,a finite ordered list with zero or more elements,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)"
23,2.430877835504499,1.885914986109378,5.0,  using more pointer enable backward movement take more memory having more pointer slightly more work add remove node list,What is the main disadvantage of a doubly-linked list over a basic linked list?,"A storage container that holds objects in a certain order, which has a LIFO priority","A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)"
24,-0.991577665232639,-0.04211662896693407,5.0,  increase memory requirement slightly more complicated when modifying element list,What is the main disadvantage of a doubly-linked list over a basic linked list?,"Stacks are a type of container adaptors, specifically designed to operate in a LIFO context (last-in first-out), where elements are inserted and extracted only from the end of the container.","A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)"
25,-1.444991064431042,-0.6468527597709495,0.0,  not answered,What is the main disadvantage of a doubly-linked list over a basic linked list?,Push and pop are two main functions defined in a stack,push and pop
0,-0.8799646297544733,0.7732140436421777,5.0,  datum structure storing item accessed last first out order implemented three way,What is a stack?,Push which inserts an element on the top of the stack and pop which removes the last inserted element from the stack.,push and pop
1,0.5371172126733658,0.06163380154492894,5.0,  abstract datas type base principle that last element inserted first element remove stack,What is a stack?,Push and pop.,push and pop
2,0.02649674426106139,-1.6910370906297738,0.0,  store set element particular order,What is a stack?,Pop function and Push function,push and pop
3,-0.3918257742385979,2.264562763781567,5.0,  adt most recently inserted item first item remove retrieve property called last first lifo items enter leave top,What is a stack?,push and pop.,push and pop
4,-0.9600387066570024,0.3743083482798184,4.0,  list only top last item added modified,What is a stack?,push (insert an item) pop (remove an item),push and pop
5,-1.8836626044691525,2.7234305304209085,5.0,  datas structure push insert item pop remove ad item last first out structure inserting removing item,What is a stack?,Adding a new item and removing the item,push and pop
6,-1.2126652667708708,-0.7799981956923282,5.0,  datum structure store datum using lifo,What is a stack?,Push (insert) and pop (retrieve).,push and pop
7,-1.1587709482668602,1.0962765301588315,5.0,  similar array does not random accesses stacks only user retrieve last item put last fist out,What is a stack?,push and pop.,push and pop
8,1.6644879550996443,0.0019091339729494514,5.0,  store set element particular order principle : last first out mean : last element inserted first one remove,What is a stack?,Push and Pop.,push and pop
9,0.03543510164927175,-1.6820410925223057,1.0,  adt store set element particular order,What is a stack?,pop and push,push and pop
10,0.2831180868227527,-0.7623915821240465,5.0,  datum type store set element certain order last first out,What is a stack?,push (add an element) pop (remove an element),push and pop
11,-0.47141498286172373,0.20169778796715693,5.0,  datum structure move element last first out,What is a stack?,Push and pop.,push and pop
12,0.337671506213417,-0.6558087692811474,5.0,  store set element last first out order,What is a stack?,pop and push,push and pop
13,-0.9568400735362891,-0.21121842683643535,5.0,  list added remove only top,What is a stack?,push ( to add to a item the Stack) Pop  ( to pull the last item added from an array. ),push and pop
14,1.224446776820795,1.4451550024804904,5.0,  abstract datas type operate last first out bases storing list object does not support least pure peeking element removing rest first,What is a stack?,pop and push,push and pop
15,0.6594692880869094,-0.8924273654967966,5.0,  store set element particular order base principle last first out lifo,What is a stack?,"push and pop, push puts an object into the list, and pop takes the last object off.",push and pop
16,4.634285993137361,1.5078849972597919,5.0,  object list store element particular order first object inserted bottom last object top first object last object,What is a stack?,Push and Pop are the two main functions of a stack,push and pop
17,0.6988294933687339,-0.26620192083525457,5.0,  adt store set element particular order principle lifo last item inserted list first out,What is a stack?,Push and Pop,push and pop
18,0.08424119987824596,-1.5728247207001549,1.0,  abstract datas type store set element particular order,What is a stack?,"push, which adds an element to the stack... and pop which takes an element off the stack",push and pop
19,-0.35810767979340496,-0.005828530909716904,5.0,  collection datum execute order last first out,What is a stack?,"Push and Pop, which add and remove data from the stack, respectively.",push and pop
20,-0.9145387690805781,1.0602397767812133,5.0,  datas structure datas member added remove one time order last first out structure,What is a stack?,push and pop,push and pop
21,0.026496744261062164,-1.6910370906297734,0.0,  store set element particular order,What is a stack?,pop - to remove item push - to insert an element,push and pop
22,0.2212966382000817,0.36763127219748215,5.0,  list element where first one remove last one inserted,What is a stack?,Pop and push,push and pop
23,-0.6387511906930139,-0.3692421831506234,4.0,  datum structure put element list only user accesses last element,What is a stack?,pop and push,push and pop
24,-0.5952170198659803,-0.8635588869097642,0.0,  finite ordered list zero more element,What is a stack?,push - adds an item to the top of the stack pop - removes the top item from the stack,push and pop
25,-0.1160585360285497,-0.7075331234527458,5.0,  storage container hold object certain order have lifo priority,What is a stack?,push and pop. Push adds a given node to the top of the stack leaving previous nodes below. Pop removes and returns the current top node of the stack,push and pop
26,0.10446344154379732,0.273204990683552,5.0,  type container adaptor specifically designed operate lifo context last first out where element inserted extracted only end container,What is a stack?,An array has a fixed size.  You can add and delete elements to the end of the array and you use a pointer to keep track of the last element added.  Each time you add or delete an element you update the pointer and check if it is equal to the max size of the array.,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array."
0,-0.17415005338475661,-0.36553401127765467,5.0,  push pop stack,What are the two main functions defined by a stack?,By implementing an array of a pre-defined size with the bottom stack element stored at element 0 and the last element stored in the array is the top. You increment top when an element is pushed and you decrement it when an item is popped.,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array."
1,1.0273448574222872,0.29690453827939717,5.0,  push insert element top pop remove last inserted element stack,What are the two main functions defined by a stack?,"If you use a dynamically allocated array, you must provide a destructor and copy constructor.","Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array."
2,-0.4470176524445596,-0.3902779558505909,5.0,  push pop,What are the two main functions defined by a stack?,"Create a int value that stores the ""head"" of the stack. Increment the top when one element is pushed and decrement after it is popped.","Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array."
3,-0.46597780028325814,-0.41248009953803466,5.0,  pop push function,What are the two main functions defined by a stack?,Use a pointer that always points to the end of the array list for push/pop modifications.,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array."
4,-0.44701765244455954,-0.39027795585059094,5.0,  push pop,What are the two main functions defined by a stack?,if you used an array to implement a stack when you add an element just add it to the end of an array and remove items from end of array also.,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array."
5,-0.06426658843987057,1.586727473637651,5.0,  push insert item pop remove item,What are the two main functions defined by a stack?,You predetermine the size of the stack as you would an array.  This type can not grow.,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array."
6,-0.9053918412055926,2.0213526602740655,5.0,  adding new item removing item,What are the two main functions defined by a stack?,"Declare a variable that points the last item in the array, which increases (++) when items are pushed onto the stack, and decreases (--) when an item is popped off the top.","Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array."
7,-0.44152094014676974,-0.2732109858139712,5.0,  push insert pop retrieve,What are the two main functions defined by a stack?,"Allocate an array of some size. The bottom stack element is stored at some element. Last index in the array is the top. Increment top when one element is pushed, decrement after pop. ","Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array."
8,-0.4470176524445593,-0.390277955850591,5.0,  push pop,What are the two main functions defined by a stack?,"You allocate an pre-defined array, the bottom element is stored at element 0, and the last index is the head.","Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array."
9,-0.4470176524445593,-0.390277955850591,5.0,  push pop,What are the two main functions defined by a stack?,"Make an array, make the bottom at spot 0, make the last spot in the array the top, and increment top when you ad","Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array."
10,-0.4470176524445593,-0.390277955850591,5.0,  pop push,What are the two main functions defined by a stack?,treat the beginning of the array as the beginning of the stack,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array."
11,0.41425277606216876,0.09966341023900727,5.0,  push add element pop remove element,What are the two main functions defined by a stack?,Use an index value called top to keep track of the last element in the array.,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array."
12,-0.4470176524445593,-0.390277955850591,5.0,  push pop,What are the two main functions defined by a stack?,create an array and implement pointers that point to the next list item down and stack them up.,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array."
13,-0.4470176524445593,-0.390277955850591,5.0,  pop push,What are the two main functions defined by a stack?,"for efficiency it is easiest to implement the left to right method, with the right most item being the one that is retrieved when a pop is performed, and a push places an object on the furthest element.","Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array."
14,-0.08671721587005789,1.705034809312524,5.0,  push add item pop pull last item added array,What are the two main functions defined by a stack?,"Create an array based on a pre-defined size N There can't be more elements than N.  Bottom stack element stored at element 0 last index in the array is the top  Increment top when one element is pushed, decrement after pop","Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array."
15,-0.4470176524445593,-0.390277955850591,5.0,  pop push,What are the two main functions defined by a stack?,"with the element added to the array, so that the last element added is at the end, and when the element is popped it takes the last element off the array","Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array."
16,0.035275741874881646,-1.2946978350126586,5.0,  push pop push put object list pop take last object,What are the two main functions defined by a stack?,Allocate an array of some pre-defined size. Bottom stack element stored at element 0. The last index in the array is the top. Increment top when one element is pushed.,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array."
17,-0.17415005338475587,-0.365534011277655,5.0,  push pop stack,What are the two main functions defined by a stack?,"Create an array, size N.  N++ when one element is pushed.  N-- when one element is popped.","Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array."
18,-0.4470176524445593,-0.390277955850591,5.0,  push pop,What are the two main functions defined by a stack?,define an array and keep track of a pointer to the last element as items are added,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array."
19,0.4139481029290998,-0.15995607693666875,5.0,  push add element pop take element stack,What are the two main functions defined by a stack?,"By allocating an array of predetermined size, and an integer to track the top element of the stack. The bottom member of the stack will go in element 0 of the array, and for each element pushed the ""top"" tracking integer is incremented.","Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array."
20,0.11731887091865557,-0.04646249805147338,5.0,  push pop add remove datum respectively,What are the two main functions defined by a stack?,"Allocate an array of some size, bottom stack element stored at element 0","Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array."
21,-0.4470176524445593,-0.390277955850591,5.0,  push pop,What are the two main functions defined by a stack?,you store the stack in the array but you have to keep in mind the first element,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array."
22,0.05505464156596922,0.8377058657199788,5.0,  pop remove item push insert element,What are the two main functions defined by a stack?,You keep track of the last item entered into the array and do not  allow the user access to the other parts of the array.,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array."
23,-0.4470176524445593,-0.390277955850591,5.0,  pop push,What are the two main functions defined by a stack?,"using arrays, you are pushing one int at a time into the stack until you get to the end of your array","Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array."
24,-0.4470176524445593,-0.390277955850591,5.0,  pop push,What are the two main functions defined by a stack?,"by having a max number of elements, allocating an array with that number of elements, storing the elements starting at 0, and keeping track of how many elements are currently in the list","Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array."
25,1.445660550045426,1.8813049612085166,5.0,  push add item top pop remove top item stack,What are the two main functions defined by a stack?,"Stack usually holds a bunch of items with the same type, therefore u can use an array, to hold the content of the stack and an integer top that holds the index of the element at the top of the stack. u Choose an array size. Then the sequence of operations used. u have to decide what data types are needed for this stack data structure. ","Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array."
26,4.167530781231284,-0.8274827305559315,5.0,  push pop push add give node top leaving previous node pop remove return current top node stack,What are the two main functions defined by a stack?,You can add an element to the end of the linked list and update a pointer called top each time you modify the list.,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list."
0,0.816889122911322,3.9220279632426664,5.0,  have fixed size add delete element end pointer keep track last element added time add delete element update pointer check if equal max size array,How can you implement a stack with an array?,You implement a list in which the head pointer points to the element most recently pushed onto the list and the pop function changes the head pointer to point to the next to last element in the list and removes the element head pointer previously pointed to.,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list."
1,3.825145493058991,-0.95234929359105,5.0,  implementing pre define size bottom element store element zero last element store top increment top when element pushed decrement when item popped,How can you implement a stack with an array?,This is the implementation of the stack using single linked list.   The operations performed on a stack are    1)push(): This is the function which is for insertion(pushing)of an element into stack                      It is similar to the insertion of an element at the end of a single linked list                   see  the function insert_end() in the program for operations of single linked list    2)pop(): This is the function which is for deletion(popping up) of an element from the stack             It is similar to the deletion of an element at the end of a single linked list       see  the function delete_end() in the program for operations of single linked list    3)stack_display():This is the function which is for displaying the elements of a stack,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list."
2,-1.9304730512683157,-0.029634973487246842,2.0,  if dynamically allocate must provide destructor copy constructor,How can you implement a stack with an array?,Using nodes to keep track of the head of the stack. Then using Push( ) and Pop ( ) to create the stack as needed.,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list."
3,0.17712659217395388,-1.1455029749621888,5.0,  create int value store head increment top when one element pushed decrement popped,How can you implement a stack with an array?,"Use the head as the top of the stack, only modify the head when you push/pop... push would add a new item to the head, pop would remove the item from the head.","Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list."
4,-2.041054499575317,0.27194013996210364,5.0,  pointer always point end list push pop modification,How can you implement a stack with an array?,you implement a stack with a list by changing the pointer to the first element of the list to the new item and move the pointer from the top of the stack to the next item when removing an item.,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list."
5,-1.1260351075676094,0.8124962544495107,5.0,  if when add element add end remove item end,How can you implement a stack with an array?,You dynamicly create space as the stack grows.  The stack can be as long as you need.,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list."
6,-1.7483588261485523,-0.20339454123922865,1.0,  predetermine size as type not grow,How can you implement a stack with an array?,"Declare a pointer that points to the head of the linked list, only add and remove nodes from the beginning of the list.","Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list."
7,-1.1857061770067556,-1.8181640343837189,5.0,  declare variable point last item increase when item pushed decrease when item popped top,How can you implement a stack with an array?,Creating a linked list. Add an element to the top of the stack when pushing and deleting an element when popping.,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list."
8,2.58386505511637,-0.8728276299614874,5.0,  allocate size bottom element store element last index top increment top when one element pushed decrement pop,How can you implement a stack with an array?,"A singly-linked list is already a lot like a stack, it just depends on the way you address moving the head.","Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list."
9,0.5880379023577014,0.19102353338507078,5.0,  allocate pre define bottom element store element 0 last index head,How can you implement a stack with an array?,"make a list, make the bottom the head, add on the end and make the end top","Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list."
10,-0.6308761337050575,-1.5099656430990673,5.0,  bottom spot 0 last spot top increment top when ad,How can you implement a stack with an array?,use the add function with a list as the beginning of the stack and remove for pop,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list."
11,-2.0416310232665973,-0.11256589107805143,4.0,  treat beginning as beginning stack,How can you implement a stack with an array?,Use head as the top and push and pop nodes from the head.,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list."
12,-0.6022659545351647,0.22556794331070235,5.0,  index value called top keep track last element array,How can you implement a stack with an array?,create a node based list that points to the next list item down.,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list."
13,-2.080968094456131,-0.12067094287428927,1.0,  create pointer point next list item stack,How can you implement a stack with an array?,"have the head of the list be the last item added, and a push just adds a new head.","Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list."
14,-1.0863029958878314,-0.4353576315234321,3.0,  efficiency easiest left right method right most item being one retrieve when pop performed push place object furthest element,How can you implement a stack with an array?,"Create a new list.  Pop elements in the stack as needed.  Push the stack to remove items, unless the stack is empty.  The top item is at the head of the list. The last item is at the end.","Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list."
15,3.8767674466259097,-0.783268624403577,5.0,  create base pre define size ca not more element than n bottom element store element zero last index top increment top when one element pushed decrement pop,How can you implement a stack with an array?,adding the element to the end of the list so that it links to the element before it. when popping the element it takes the last element in the list and sets the previous one as the end of the list.,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list."
16,1.7359195891592747,2.0222263310752164,4.0,  element added that last element added end when element popped take last element array,How can you implement a stack with an array?,"You can implement a stack using arrays or and linked list. By the use of pointers, that point element(node) to the next element in the stack. By the use of pointers, the stack becomes a linked list.","Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list."
17,2.8142734234997455,-0.8924788447957779,5.0,  allocate pre define size bottom element store element zero last index top increment top when one element pushed,How can you implement a stack with an array?,Elements are only inserted and removed from the head of the list.  There is no header node or current pointer.,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list."
18,0.617032898260624,-0.2367127514178539,4.0,  create size n n when one element pushed n when one element popped,How can you implement a stack with an array?,use a linked list and keep track of a pointer that points to the first item,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list."
19,-0.9940036565172466,0.8194318590100246,5.0,  define keep track pointer last element as item added,How can you implement a stack with an array?,"A singly linked list can already be easily used for LIFO data storage. Members of a stack can simply be pushed and popped from a list, the first item in will be the last out.","Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list."
20,1.8882181518186443,-0.07138933046132705,5.0,  allocating predetermine size integer track top element bottom member go element zero element pushed top tracking integer incremente,How can you implement a stack with an array?,using pointer,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list."
21,0.4158627019376882,0.3385209609477858,4.0,  allocate size bottom element store element zero,How can you implement a stack with an array?,the top is the first pointer.,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list."
22,-0.9503915280145536,0.3222675716403776,3.0,  store have keep mind first element,How can you implement a stack with an array?,"Keep a pointer pointing to the last element entered at the front of  the array and move the pointer ""back"" when you delete an element.","Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list."
23,-1.9539339907244295,0.25543099470918224,5.0,  keep track last item entered do not user accesses other part array,How can you implement a stack with an array?,"using linked list, you are pushing the node that contains each int to the stack until you get to the end of your linked list","Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list."
24,-1.895937838026098,0.22687048706699595,4.0,  using pushing one int time get end array,How can you implement a stack with an array?,"have a linked list, and for each push, add an item onto beginning of the list, and for each pop remove the first element in the list.","Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list."
25,1.3603374522238596,2.2585382885686744,5.0,  having max number element allocating number element storing element starting 0 keeping track many element currently list,How can you implement a stack with an array?,"Using a linked list is one way to implement a stack so that it can handle essentially any number of elements. It is usually convenient to put a data structure in its own module, thus, you'll want to create files stack.h and a stack.c","Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list."
26,-0.43153695244445023,-2.482059220090028,2.0,  hold bunch item same type therefore hold content integer top hold index element top choose size then sequence operation have decide datas type needed datas structure,How can you implement a stack with an array?,They are converted to post fix expressions.  It still follow the order of precedence for the operators.,"First, they are converted into postfix form, followed by an evaluation of the postfix expression."
0,0.07106826891406816,-0.8879978955167668,2.0,  add element end linked update pointer called top time modify list,How can you implement a stack with a list?,They are first converted to postfix expressions and then evaluated.,"First, they are converted into postfix form, followed by an evaluation of the postfix expression."
1,0.5942533232609676,2.0253458181350883,5.0,  head pointer point element most recently pushed pop function change head pointer point next last element remove element head pointer previously pointed,How can you implement a stack with a list?,"Computers cannot evaulate infix expressions, it must first convert infix to postfix expression then it can evaluate.","First, they are converted into postfix form, followed by an evaluation of the postfix expression."
2,10.94294495477112,0.935450464107353,3.0,  implementation using single linked operation performed 1 push : function insertion pushing element similar insertion element end single linked see function insert_end program operation single linked 2 pop : function deletion popping element similar deletion element end single linked see function delete_end program operation single linked 3 stack_display : function displaying element stack,How can you implement a stack with a list?,By using parentheses to have order in the expression.,"First, they are converted into postfix form, followed by an evaluation of the postfix expression."
3,-0.9135298600396387,0.3531290353570604,4.0,  using node keep track head then using push pop create as needed,How can you implement a stack with a list?,In postfix notation.,"First, they are converted into postfix form, followed by an evaluation of the postfix expression."
4,-1.5010832153512117,4.562791115173162,5.0,  head as top only modify head when push pop push add new item head pop remove item head,How can you implement a stack with a list?,computers usually convert infix expressions to post fix expression and evaluate them using a stack.,"First, they are converted into postfix form, followed by an evaluation of the postfix expression."
5,-0.8008431753202093,0.39581576115522976,5.0,  changing pointer first element new item move pointer top next item when removing item,How can you implement a stack with a list?,they are converted to postfix,"First, they are converted into postfix form, followed by an evaluation of the postfix expression."
6,-1.0935074212387257,-0.5883204236153134,1.0,  dynamicly create space as grow as long as need,How can you implement a stack with a list?,Infix expressions are interpreted as postfix expressions by implementing stacks.,"First, they are converted into postfix form, followed by an evaluation of the postfix expression."
7,-0.6923481169227663,-0.15656977491250917,5.0,  declare pointer point head linked only add remove node beginning list,How can you implement a stack with a list?,They are first converted into an equivalent postfix expression so it can be read by the computer.,"First, they are converted into postfix form, followed by an evaluation of the postfix expression."
8,0.5634339483512715,-0.765637457754609,4.0,  creating linked add element top when pushing deleting element when popping,How can you implement a stack with a list?,"The computer translates the infix expression to a postfix expression, then solves.","First, they are converted into postfix form, followed by an evaluation of the postfix expression."
9,-0.6205482818856604,-0.5172257197768447,4.0,  singly linked already lot like depend way address moving head,How can you implement a stack with a list?,in postfix format,"First, they are converted into postfix form, followed by an evaluation of the postfix expression."
10,-0.7156160991575818,-0.022110186657553058,3.0,  bottom head add end end top,How can you implement a stack with a list?,they use parenthisis and a stack to determine which evaluations need to be made first,"First, they are converted into postfix form, followed by an evaluation of the postfix expression."
11,-0.5588572871490007,-0.026172578986267934,5.0,  add function as beginning remove pop,How can you implement a stack with a list?,By throwing variables into a postfix expression and operands onto a parentheses regulated stack until end parentheses and enough variables to operate on are encountered.,"First, they are converted into postfix form, followed by an evaluation of the postfix expression."
12,-1.117235842839804,1.2625335736099197,5.0,  head as top push pop node head,How can you implement a stack with a list?,by being passed to the function by a leading term,"First, they are converted into postfix form, followed by an evaluation of the postfix expression."
13,-1.0247873348023122,-0.5647774291280936,0.0,  create node base point next item,How can you implement a stack with a list?,"i have an hard time explaining this so i'll show how infix is evaluated instead. Start with an infix expression, like,  (((5+2)*5)+(400/(2+3))), and  push items until you get a "")"" and once that happens, perform the operations until you reach an ""(""... with that complete, you will now have  ((7*5)+(400/(2+3))) as now the expression that will be evaluated... perform last step again... (35+(400/(2+3))) is now the stack.... repeat agian... (35+(400/5)) is now the stack after that.... repeat... (35+80) is now the stack, repeat again... 115 is now the stack, and is returned.","First, they are converted into postfix form, followed by an evaluation of the postfix expression."
14,-1.2101158750673024,1.4632107572818212,5.0,  have head last item added push add new head,How can you implement a stack with a list?,The infix expression is converted to postfix form,"First, they are converted into postfix form, followed by an evaluation of the postfix expression."
15,-0.7279372469718095,2.249988007673888,5.0,  create new pop element as needed push remove item unless empty top item head last item end,How can you implement a stack with a list?,by converting them to postfix expressions and putting the operations in a stack,"First, they are converted into postfix form, followed by an evaluation of the postfix expression."
16,1.4211584007830305,-0.8829029169788181,3.0,  adding element end that link element when popping element take last element set previous one as end list,How can you implement a stack with a list?,The computer converts the infix expression to postfix form. Then evaluates the postfix expression.,"First, they are converted into postfix form, followed by an evaluation of the postfix expression."
17,0.8831095697618125,-1.4313593849575443,1.0,  using array linked pointer point element node next element pointer become linked list,How can you implement a stack with a list?,infix expressions are converted to postfix expressions before they can be evaluated by a computer.  Operands stay in the same order.  Operators always follow the operands.,"First, they are converted into postfix form, followed by an evaluation of the postfix expression."
18,-0.6131135570253188,-0.013157801139263625,5.0,  element only inserted remove head header node current pointer,How can you implement a stack with a list?,infix expressions are pointers evaluated by reference to the memory location,"First, they are converted into postfix form, followed by an evaluation of the postfix expression."
19,-0.6204920362035463,-0.7596740122256413,4.0,  linked keep track pointer point first item,How can you implement a stack with a list?,computers convert infix expressions to postfix form before evaluation,"First, they are converted into postfix form, followed by an evaluation of the postfix expression."
20,-0.6441933440384927,-0.8573771818594583,5.0,  singly linked already easily lifo datum storage member simply pushed popped first item last out,How can you implement a stack with a list?,convert infix expressions to postfix expression and evaluate the postfix expression,"First, they are converted into postfix form, followed by an evaluation of the postfix expression."
21,-0.8234126249792778,-0.9902021752385675,0.0,  using pointer,How can you implement a stack with a list?,"When an operand is entered, the computer Pushes it onto a stack When an operator is entered, the computer Applies it to the top two operands of the stack Pops the operands from the stack Pushes the result of the operation onto the stack","First, they are converted into postfix form, followed by an evaluation of the postfix expression."
22,-0.9531870625604563,-0.8270102667979689,3.0,  top first pointer,How can you implement a stack with a list?,Computers convert an infix expression into a postfix expression. They then push the numbers onto a stack and pop them out as they are needed.,"First, they are converted into postfix form, followed by an evaluation of the postfix expression."
23,0.0012513559377972461,-0.9987496110693906,2.0,  keep pointer pointing last element entered front array move pointer back when delete element,How can you implement a stack with a list?,"infix expressions are converted to postfix, (i.e. 3+2 is changed to 32+)","First, they are converted into postfix form, followed by an evaluation of the postfix expression."
24,0.23845774203304537,-1.4815976237164221,1.0,  using linked pushing node contain int get end linked list,How can you implement a stack with a list?,"they are transformed into post-fix expressions, then evaluated with a stack.","First, they are converted into postfix form, followed by an evaluation of the postfix expression."
25,-0.12266754138484491,0.16221245920902652,5.0,  have linked push add item beginning pop remove first element list,How can you implement a stack with a list?,"Writing arithmetic expressions is called infix notation.  This is because a binary operator (like '+') is written in between its two operands (as in ""a + b"").  There are two alternative forms of notation used in certain situations.  One is prefix notation, in which an operator is written before its operands.  In prefix notation, the sum of a and b is written ""+ a b"".  This is the notation used to write function calls in mathematics and computer science.  It is also used in the Lisp and Scheme programming languages.  In postfix notation, an operator is written after its operands.  The sum of a and b is written ""a b +"".  (You may have seen this as ""reverse Polish notation"".)  Postfix notation forms the conceptual basis for the way that arithmetic expressions are evaluated by a computer.  One important characteristic of both postfix and prefix notations is that they are unambiguous; no parentheses are needed to indicate the order of operations. ","First, they are converted into postfix form, followed by an evaluation of the postfix expression."
26,0.03779835912482435,-1.6396345513714985,0.0,  using linked one way that handle essentially number element convenient put datum structure own module thus want create file h c,How can you implement a stack with a list?,isEmptry()//determines if the stack is full or not pop()//to remove the top element if it is not the on you are looking for search()//you compare each element of the stack to the data you are looking for.,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack."
0,-0.5219968874929352,-0.6027591168574695,5.0,  converted post fix still follow order precedence operator,How are infix expressions evaluated by computers?,You would have to keep using peek or getTop to see what the top element is then popping the top element until peek or getTop provides the element you are looking for.,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack."
1,-0.6382379072994628,-0.7105686198963653,5.0,  first converted postfix then evaluate,How are infix expressions evaluated by computers?,Push adds a given node to the top of the stack leaving previous nodes below. Pop removes and returns the current top node of the stack.,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack."
2,-0.6463705542014587,-0.7164798934826676,5.0,  not evaulate must first convert postfix then evaluate,How are infix expressions evaluated by computers?,"Using linked lists and stacks, you would need a temp stack to retain the values. Then you would use the Pop( ) function to pop off each element and then compare it. If its not the element your looking for, Push ( ) it to the temp stack. Repeat until the element is found. When you find it,  Pop ( ) off the temp stack back onto the regular stack to have a complete stack again.","Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack."
3,-0.5721063833388912,-0.38959784635132155,2.0,  using parenthesis have order expression,How are infix expressions evaluated by computers?,"Pop each item off the top until you find what you are looking for. If the stack ends up empty and you never found the item, then it does not exist in the stack. It may also be necessary to save the popped values in case you want to recreate the stack.","Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack."
4,0.06132694170465646,-0.609872236125995,3.0,  postfix notation,How are infix expressions evaluated by computers?,"if the stack is implemented using an array you could simply search the array for the item. If the stack is implemented using a linked list you would have to pop the values off of the stack until either the value is found or the stack is empty, you would then have to have the items put back into the list.","Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack."
5,-0.8296109059781167,-0.17841084154682316,5.0,  convert post fix using stack,How are infix expressions evaluated by computers?,"You need to pop each item on the stack and compare the item.  Once the item is found, no more items need to be removed.","Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack."
6,-0.5984348871123248,-0.6526625560787976,5.0,  converted postfix,How are infix expressions evaluated by computers?,"Pop an element from one stack, check to see if it is the desired element, if not push it onto another stack. When finished, pop the items from the second stack and push them back onto the first stack (this will ensure the order of the elements is maintained).","Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack."
7,-0.48611058498265836,-0.13404342229270033,5.0,  interpreted as postfix implementing stack,How are infix expressions evaluated by computers?,Basically pop the stack until you find the given element.,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack."
8,-0.6228007014378055,-0.6894936211647797,5.0,  first converted equivalent postfix read computer,How are infix expressions evaluated by computers?,"Iterate through the stack, checking the number against the current element.","Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack."
9,-0.6044915340460152,-0.6509501493806203,5.0,  translate postfix then solve,How are infix expressions evaluated by computers?,pop and push,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack."
10,-0.5826336629711241,-0.6186484346978861,3.0,  postfix format,How are infix expressions evaluated by computers?,pop all elements off stack until you find that element and then push the popped elements back on the stack,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack."
11,-0.8165665992099308,-0.16081871765996963,3.0,  parenthises stack determine evaluation need first,How are infix expressions evaluated by computers?,"Keep popping nodes and storing them in an alternate stack until the given element is found, then pop the given element and push the previously popped nodes back onto the stack.","Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack."
12,-0.2853577912269038,-0.22446543510772973,4.0,  throwing variable postfix operand parenthesis regulate stack end parenthesis enough variable operate encountered,How are infix expressions evaluated by computers?,either traverse the entire list and pop the given part or create a pointer system that automatically points to it.,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack."
13,-0.6948531217160867,-0.545872220452055,0.0,  being passed function leading term,How are infix expressions evaluated by computers?,"Depends on the type of stack, on a true stack you will haft to pop all of the elements of the stack until you find the element you want, and then after that you will need to push all the elements that where removed back in to the stack in the order that they where removed.  With a Java style stack, where there is a peek function, it will return the element you wanted instead of requiring you to perform all the excessive actions that are required from a true stack.","Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack."
14,-0.7598839406456396,10.41963949426258,1.0,  have hard time explaining show instead start like 5 2 * 5 400 2 3 push item get once happen perform operation reach complete now have 7 * 5 400 2 3 as now perform last step again 35 400 2 3 now stack repeat agian 35 400 5 now stack repeat 35 80 now stack repeat again one hundred fifteen now stack returned,How are infix expressions evaluated by computers?,if top item != given element pop the stack. Repeat until item is found or stack is empty,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack."
15,-0.4627141697794034,-0.6687044064228832,5.0,  converted postfix form,How are infix expressions evaluated by computers?,could traverse through the list/array to find the element.,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack."
16,-0.5549465040657124,-0.1216626700632872,5.0,  converting postfix putting operation stack,How are infix expressions evaluated by computers?,you need the pop opertation to go throught the stack and find the element.,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack."
17,-0.3180766756117265,-0.788921407660385,5.0,  convert postfix form then postfix expression,How are infix expressions evaluated by computers?,"createStack, push, isEmpty, pop, and a boolean return value.","Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack."
18,-0.11175170480911248,-0.6440036535239241,5.0,  converted postfix operand stay same order operators always follow operand,How are infix expressions evaluated by computers?,you would have to traverse the stack popping each element to search it,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack."
19,-0.7638012574666279,-0.5420844081554883,0.0,  pointer reference memory location,How are infix expressions evaluated by computers?,Pop each element off the stack (and into another stack for storage) until the desired element is found.,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack."
20,-0.467370652806522,-0.6633842818954443,5.0,  convert postfix form evaluation,How are infix expressions evaluated by computers?,pop operation,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack."
21,-0.4352627486929495,-0.7463684110715656,5.0,  convert postfix postfix expression,How are infix expressions evaluated by computers?,to pop elements then push them back,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack."
22,0.18892124553466122,1.4511981284870543,4.0,  when operand entered pushes stack when operator entered applies top two operand stack pop operand stack pushes result operation stack,How are infix expressions evaluated by computers?,A function to keep track of the elements popped and a function to put  the popped elements backinto the function.,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack."
23,-0.4577972696563461,-0.0865977440978921,5.0,  convert postfix then push number stack pop as needed,How are infix expressions evaluated by computers?,you would pop each element and compare it to what you are looking for and then push it back on the stack so that it is not lost,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack."
24,-0.6048532359810925,-0.6639159486859643,5.0,  converted postfix i e 3 2 change 32,How are infix expressions evaluated by computers?,you would need to perform a search through the list of elements (i dont really understand what this question is asking....its not very clear?),"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack."
25,-0.8283667243989925,-0.174636231866621,5.0,  transformed post fix then stack,How are infix expressions evaluated by computers?,StackPush() StackPop() StackIsEmpty(),"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack."
26,13.414148217688517,0.11408465178900513,5.0,  writing arithmetic called notation because binary operator like written two operand as b two alternative form notation certain situation one prefix notation operator written operand prefix notation sum written b notation write function call mathematic science lisp scheme programming language postfix notation operator written operand sum written have see as reverse polish notation postfix notation form conceptual bases way that arithmetic one important characteristic postfix prefix notation that unambiguous parenthesis needed indicate order operation,How are infix expressions evaluated by computers?,A data structure in c++ which is a collection of data that is kept in order.  First in first out.,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out)."
0,0.6423591370726442,-0.013976292096023886,2.0,  isemptry determine if full not pop remove top if not looking search compare datum looking,What operations would you need to perform to find a given element on a stack?,a queue is a list of objects in a particular order that is read one at a time starting at the first followed by the second and so on.,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out)."
1,-0.1790592179169783,-0.283226733513911,2.0,  have keep using peek gettop see top then popping top peek gettop provide looking,What operations would you need to perform to find a given element on a stack?,A queue is an abstract data structure in which operations are performed at both ends giving the queue first in first out behavior.,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out)."
2,-1.1870523326599902,0.5262059504030565,2.0,  push add node top leaving previous node pop remove return current top node stack,What operations would you need to perform to find a given element on a stack?,"A queue stores a set of elements in a particular order.  Its principle of operation is FIFO(first in first out), which means the first element inserted is the first one to be removed.","A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out)."
3,3.2627972313881726,1.96997220525277,5.0,  using linked list temp retain value then pop function pop then compare if not looking push temp repeat found when pop temp back regular have complete again,What operations would you need to perform to find a given element on a stack?,An ADT whose first inserted item is the first item removed. This uses the FIFO idea where items enter a queue at its back and leave at its front.,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out)."
4,1.6187146582558047,-0.14256353435596725,5.0,  pop item top looking if end empty never found item then does not exist necessary save popped value case want recreate stack,What operations would you need to perform to find a given element on a stack?,"Last in, last out architecture. It works the same way a line at the bank would work, the person that's been waiting the longest gets served first.","A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out)."
5,5.094304557460615,-0.6494981019704964,4.0,  if implemented using array could simply search array item if implemented using linked list have pop value value found empty then have have item put back list,What operations would you need to perform to find a given element on a stack?,a queue is a data structure that stores elements in a First in First out order.,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out)."
6,1.1041165704584885,-0.7155257706363327,3.0,  pop item compare item once item found more item remove,What operations would you need to perform to find a given element on a stack?,A waiting list of items that operation in a FIFO (first in first out) order.,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out)."
7,1.1272545436371797,0.9084578201425795,5.0,  pop one check see if desired if not push when finished pop item second push back first ensure order maintained,What operations would you need to perform to find a given element on a stack?,"A queue is similar to an array, except that the data can only be accessed sequentially rather than at random. Unlike a stack, a queue follows FIFO. First in, First out.","A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out)."
8,-0.7874456970510418,-0.5823429699751077,3.0,  basically pop element,What operations would you need to perform to find a given element on a stack?,is a particular kind of collection in which the entities in the collection are kept in order and the principal (or only) operations on the collection are the addition of entities to the rear terminal position and removal of entities from the front terminal position. First in First Out (FIFO Method).,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out)."
9,-1.1095203622652325,-0.8783508777858487,0.0,  iterate checking number current element,What operations would you need to perform to find a given element on a stack?,Like a linked list but first in first out,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out)."
10,-0.7078137186390048,-0.22595547400330812,2.0,  pop push,What operations would you need to perform to find a given element on a stack?,A queue is a FIFO data structure.,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out)."
11,-0.4577553844722342,0.40605583693841585,5.0,  pop then push popped back stack,What operations would you need to perform to find a given element on a stack?,A queue is a first in first out data structure.,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out)."
12,-0.509985726651764,0.5541451804464913,5.0,  keep popping node storing alternate found then pop push previously popped node back stack,What operations would you need to perform to find a given element on a stack?,"Its like a stack, but uses the linked list to stack a little differently. It's FIFO so the first thing enqueued is the first thing dequeued","A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out)."
13,-0.6046638565049446,-0.7277887112161443,2.0,  traverse entire list pop part create pointer system automatically point,What operations would you need to perform to find a given element on a stack?,"A first in, first out Abstract Data type that can be used to store values.","A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out)."
14,-1.3441470232906156,5.305799631049841,5.0,  depend type true haft pop want then that push where remove back in order that where remove java style where peek function return wanted instead requiring excessive action require true stack,What operations would you need to perform to find a given element on a stack?,"Stores a set of elements in a particular order with a First In, First Out principle","A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out)."
15,0.8312041156113563,-0.7150304638087355,3.0,  if top item = pop repeat item found empty,What operations would you need to perform to find a given element on a stack?,object that stores elements in order that follows first in first out.  the first element added is the first one to come off.,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out)."
16,-0.5579893217602685,-1.0132821906255047,1.0,  could traverse list array element,What operations would you need to perform to find a given element on a stack?,"A quese is an list that stores a set of elements in a particular order. It has Stack principle, but in this case, its ""First In, First Out"". The first element inserted is the first element to be removed.","A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out)."
17,-0.8182413969305345,-0.6124821332027441,3.0,  pop opertation go throught element,What operations would you need to perform to find a given element on a stack?,"a finite ordered list with zero or more elements, based upon First In First Out","A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out)."
18,-0.5246664413706014,-0.08321186080755541,2.0,  createstack push isempty pop boolean return value,What operations would you need to perform to find a given element on a stack?,a data structure that performs operations in the order of first in first out FIFO,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out)."
19,-0.5861901349652874,-0.8984517982355312,3.0,  have traverse popping search,What operations would you need to perform to find a given element on a stack?,"A Queue is a ""first in first out"" data structure, such that the first element added is also the first removed.","A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out)."
20,-0.5312966435905128,-0.5248102499767658,4.0,  pop storage desire found,What operations would you need to perform to find a given element on a stack?,"Queue is a buffer, which store element in a particular order","A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out)."
21,-0.725849946701477,-0.506403394283027,1.0,  pop operation,What operations would you need to perform to find a given element on a stack?,"stores a set of elements where the first element in, is the first element to be removed","A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out)."
22,-0.396590367025706,0.2406384519990803,4.0,  pop then push back,What operations would you need to perform to find a given element on a stack?,A data structure that removes nodes from the head and adds nodes at the tail.,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out)."
23,-1.0411101985291373,-0.2893520964390736,4.0,  function keep track popped function put popped function,What operations would you need to perform to find a given element on a stack?,a queue is a list of things that follows the first in first out behavior,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out)."
24,-0.13866429259691124,0.6618936561649779,4.0,  pop compare looking then push back that not lose,What operations would you need to perform to find a given element on a stack?,"a queue is a storage container that holds its objects in a first in, first out priority","A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out)."
25,-0.4721006284415293,-0.9215476616885477,0.0,  search list do not really understand question asking not very clear,What operations would you need to perform to find a given element on a stack?,"The queue is another data structure. A physical analogy for a queue is a line at a bank. When you go to the bank, customers go to the rear (end) of the line and customers come off of the line (i.e., are serviced) from the front of the line.","A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out)."
26,-1.0006081225204895,-0.7893684177765886,2.0,  stackpush stackpop stackisempty,What operations would you need to perform to find a given element on a stack?,enqueue which adds data to the queue and dequeue which deletes data from the queue,enqueue and dequeue
0,0.5373359718485782,-0.15661857389593034,5.0,  datum structure c collection datum keep order first first out,What is a queue?,"enqueue , which inserts a specified element at the head of the specified queue, and dequeue , which removes the specified element from the queue.",enqueue and dequeue
1,0.8917542280832199,0.4585143623679412,4.0,  list object particular order read one time starting first followed second on,What is a queue?,The two main functions are enqueue which inserts an item at the back of the queue and dequeue which removes an item from the front of the queue.,enqueue and dequeue
2,0.46924637290752713,-0.1690152973945788,5.0,  abstract datas structure operation performed end giving first first out behavior,What is a queue?,The two main functions are enqueue and dequeue.,enqueue and dequeue
3,-2.6112116663197398,-1.4340639253224114,5.0,  store set element particular order principle operation fifo first first out mean first element inserted first one remove,What is a queue?,Enqueue and Dequeue,enqueue and dequeue
4,-0.3709785770390928,1.4146571724705699,5.0,  adt first inserted item first item remove fifo idea where item enter back leave front,What is a queue?,Enqueue and Dequeue,enqueue and dequeue
5,1.676213160159531,-0.14716995486632958,5.0,  last last architecture work same way line bank work person been waiting longest get serve first,What is a queue?,enqueue - insert into queue dequeue - remove element,enqueue and dequeue
6,-0.09916137788335219,-0.8193662024579605,5.0,  datas structure that store element first first out order,What is a queue?,"Remove the item added first, add items to the back.",enqueue and dequeue
7,-0.17926122112670612,1.0301633276203144,5.0,  waiting list item operation fifo first first out order,What is a queue?,The two main functions of a queue are enqueue and dequeue.,enqueue and dequeue
8,0.2367365522677321,0.06521247194877577,5.0,  similar array except that datum only accessed sequentially rather than random stack follow fifo first first out,What is a queue?,enqueue and dequeue.,enqueue and dequeue
9,0.2831727339231189,0.22166227018255413,5.0,  particular kind collection entities collection keep order principal only operation collection addition entities rear terminal position removal entities front terminal position first first out fifo method,What is a queue?,enqueue and dequeue,enqueue and dequeue
10,0.10652218752692862,0.5110469776489583,4.0,  like linked list first first out,What is a queue?,Enqueue and Dequeue,enqueue and dequeue
11,2.1586591274630877,-0.24638563726707924,5.0,  fifo datas structure,What is a queue?,enqueue and dequeue,enqueue and dequeue
12,0.4370217352046979,-0.17889650641282404,5.0,  first first out datas structure,What is a queue?,enqueue and dequeue,enqueue and dequeue
13,0.2766445528908108,0.8093073502363922,5.0,  like stack linked list stack little differently fifo first thing enqueue first thing dequeue,What is a queue?,"enque ( Data ),  Deque ( )",enqueue and dequeue
14,0.05940418890452508,-0.14671733741468157,5.0,  first first out abstract data type store value,What is a queue?,enqueue and dequeue,enqueue and dequeue
15,-0.37019927028412986,-0.8925464314306584,5.0,  store set element particular order first first out principle,What is a queue?,enqueue and dequeue,enqueue and dequeue
16,-2.465441288995146,-1.0477868965639885,5.0,  object that store element order follow first first out first element added first one come,What is a queue?,"The two functions are, Enqueue and Dequeue",enqueue and dequeue
17,-3.063480523615713,-1.8344103333630815,5.0,  quese list store set element particular order have stack principle case first first out first element inserted first element remove,What is a queue?,"enqueue, dequeue",enqueue and dequeue
18,-0.297437780853753,-0.21840310245604175,5.0,  finite ordered list zero more element base upon first first out,What is a queue?,"enqueue, that adds an item to the queue dequeue, that takes the first item out of the queue",enqueue and dequeue
19,0.38095457187425996,-0.0006653157381966582,5.0,  datum structure perform operation order first first out fifo,What is a queue?,"Enqueue and dequeue, which add and remove elements from the queue",enqueue and dequeue
20,-1.6748861838841111,-0.8381359848529243,5.0,  first first out datas structure that first element added first remove,What is a queue?,Enqueue and Dequeue,enqueue and dequeue
21,1.511147323183385,-0.8474277700803039,2.0,  buffer store element particular order,What is a queue?,dequeue and enqueue,enqueue and dequeue
22,-0.8414506440832106,-2.280621200902272,5.0,  store set element where first element first element remove,What is a queue?,enqueue and dequeue,enqueue and dequeue
23,2.3716087360199465,-0.5098049285753565,5.0,  datum structure remove node head add node tail,What is a queue?,enqueue and dequeue,enqueue and dequeue
24,0.06683429917768619,0.3711036081957938,5.0,  list thing follow first first out behavior,What is a queue?,enqueue dequeue,enqueue and dequeue
25,0.16929581272114952,-0.0038664200124952077,5.0,  storage container hold object first first out priority,What is a queue?,rear and front,enqueue and dequeue
26,3.4571679866839338,-0.5768710175620207,5.0,  datas structure physical analogy line bank when go bank customer go rear end line customer come line e service front line,What is a queue?,Make use of a front pointer and a tail pointer.  When the tail pointer reaches the end of an array it gets reset to the front of the array.  If the two pointers are equal then the queue is either full or just has one element.,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around."
27,-0.23186859703726884,-1.3736990832242777,5.0,  datum structure c where first element first element take out queue,What is a queue?,you create an array with the max size of your queue and adjust the items to make them follow FIFO procedure.,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around."
28,0.09879365847132196,0.3191452422204073,5.0,  abstract datas type perform operation end list exhibit first first out behavior,What is a queue?,By implementing an array and only adding items to the end of the array and only removing items from the beginning of the array.,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around."
29,0.23249906793654446,-0.029351708390001816,4.0,  first first out,What is a queue?,"For applications in which a fixed-sized queue does not present a problem, you can use an array to represent a queue. ","Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around."
30,-2.5780516458968603,-0.5158619488875537,5.0,  abstract datas type involve putting element back list queues fifo first first out idea where first element list first come,What is a queue?,Keep track of the front and the back of the array as you increase and decrease the elements inside the array.,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around."
31,-0.6327654467551238,-0.7912289915181272,5.0,  datum structure implement first first out element have been there longest first get serve,What is a queue?,"Declare the size of an array, and have special conditional statements (pointers) to make sure you re-use ALL of the array. Say, you have an array of 20 elements, you load up 18, then dequeue 3, when you enqueue 4 more elements, you want to loop back to index 0 and continue from there... this process saves resources.","Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around."
32,1.682860037895008,-1.6475351528193618,5.0,  datum structure insert element end remove element front,What is a queue?,you could use the first element of the list as the remove point and insert at the end f you do this you would have to shift the elements down each time you remove an item unless you make the array circular.,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around."
33,-2.4073556044219875,1.549187038679136,5.0,  collection element characteristic first first out fifo first item first item additional item added end list,What is a queue?,Utilizing indexes for the front and the back.  Front is 0 and as you add items the back index is incremented.,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around."
34,2.8734727945304317,-0.5720576185036957,5.0,  datas structure insert datum fifo configuration datas input structure always end datum take always beginning,What is a queue?,"Declare two variables, “front” and “rear”, to be used to denote which elements in the array can be accessed. Increment “rear” whenever data is enqueued to the end and increment “front” whenever data is dequeued.","Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around."
35,1.9824153655169805,0.12776888191865537,1.5,  particular set entities put certain order enqueue dequeue function,What is a queue?,It is an array of fixed size. A queue of maximum N elements.,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around."
36,-1.5180536329585643,-1.5196016477387047,5.0,  datas type operate filo first last out method mean that first element inserted first element remove,What is a queue?,"make an array of a size, and add on to the front and delete from the back, keep track of the two so that you know when it is full and where to add or subtract from","Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around."
37,0.9458699722812525,0.5098322325101418,0.0,  like linked list except first last out,What is a queue?,By using the beginning of the array as the removal point of the queue (or beginning of the queue) and the ith element as the end of the queue.,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around."
38,0.15515336708061697,0.25967808526748093,5.0,  like stack except follow fifo first first out,What is a queue?,"add in data from the first element to the last, take out data from the first element to the last.","Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around."
39,0.5094579446741996,-0.3160925861899998,5.0,  datas structure where first node first node out,What is a queue?,you can take the array and put it in a queue stack or you can just traverse the list and keep track of top and bottom,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around."
40,-1.0850159084908513,0.018736601995695157,5.0,  first first out datas structure much like line movie theatre first object line first object handle enacted upon,What is a queue?,"create a fixed array size, with with 2 integers to point to the beginning and the end of the que, and special cases to know when the que is empty or full.","Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around."
41,-0.3155710455441034,2.166769058383842,5.0,  lot like stack except that first item put list first item take list,What is a queue?,Keep track of the front and rear indexes. Either: 1)Dequeue items by shifting the array left 2)Use wrapped configuration,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around."
42,-0.6922738706014747,3.412821734747676,5.0,  first first out list item like if put 5 4 3 2 one when dequeue item remove item same order as put thus put 5 4 3 2 one exact order,What is a queue?,"add items into a fixed size array, pull the items out by calling on them with the starting index, increase starting index so when it calls again its now the next index element in the array.","Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around."
43,0.9345550823234958,1.0807932975780248,5.0,  linked list first out structure dequeue head list enqueue end list,What is a queue?,"To use and array to implement a Queue, element or item 0, should be the top element in the array. Every time an element is inserted, all the items in the array are pushed back one space. The top element is always removed first.","Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around."
44,-2.1071133507466944,1.480812075958679,5.0,  list object follow rule first first out essentially linked list goes order first object list first take,What is a queue?,fixed size array with max N elements.  Need to keep track of front and rear of array.,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around."
45,-2.0867582585596307,1.5553833605416791,5.0,  abstract datas type base priniple first first out fifo first item inserted list first item take,What is a queue?,"by keeping track of a front item and a rear item, or with a circular array that uses the modulo function","Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around."
46,0.31632686779474734,0.24688084166376845,5.0,  first first out datas structure implemented linked list array,What is a queue?,"Using an array for a queue, the size of the array allocated limits the size of the queue. An array based queue class must keep track of both the front and back of the queue, which may need to wrap around the array.","Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around."
47,-0.6471021695374324,2.5608471815963743,5.0,  ordered list perform task order first first out adding item place item rest taking item take one have waited longest,What is a queue?,"A pointer based implementation of a queue could use a linear linked list with two external pointers, one to the front and one to the back","Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around."
48,0.3583461858113519,1.0782098520352383,5.0,  linear first first out datas structure data must accessed same order was put only oldest item accessible time main function define enqueue dequeue,What is a queue?,remove the element then shift the elements one space back,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around."
49,0.20837493168279886,0.0028496986755102123,5.0,  buffer follow rule first in first out very useful computer science scheduleing,What is a queue?,By having the head pointer point to the first or least current data entered and having the tail point to the most current data entered. A method must be created so that the tail pointer doesn't leave the array.,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around."
50,-0.8675921909348887,-2.2009391701617416,5.0,  set element where first element inserted first element remove,What is a queue?,an array is a type of queue with a fixed length,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around."
51,0.16502917357376695,-0.5217557872146568,5.0,  list item where user only have accesses first element new element added end,What is a queue?,"your storage class has an array, and you keep track of the index of the first and last item in the array, and wrap around when end of the array is full","Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around."
52,0.40029716504806334,0.34732543332267757,5.0,  list datum follow fifo principle example when get line movie theater first one get buy ticket first,What is a queue?,Boolean isFullQ(queue) ::= rear == MAX_QUEUE_SIZE-1,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around."
53,0.244753080661209,-0.2334944198137231,5.0,  datas structure hold set object have fifo first first out priority,What is a queue?,A list can have unlimited elements in it.  You can push a node onto the end of the list and pop the one in the front.,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list."
54,0.9451060194480577,0.4716827932646988,0.0,  like linked list expect first last out,What is a queue?,theoretically you could do it two ways one of which uses more processing power and memory no larger than the queue is ever at when full and the other which uses almost infinite memory. The more practical method would be two place the items in an array and remove the item in position one of the array after which you can shift the array and add another element if required. The other option which can use infinite memory when used for long term queues such as job scheduling that goes nonstop for extended periods. that is to implement an array and add the items read item one raise your counter value to two ecetera and continue adding more elements to the array. the downside to this method is after you use element one it is still in memory. or im crazy who knows,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list."
0,0.14690196869677472,-0.11832939519801478,5.0,  enqueue add datum dequeue delete datum queue,What are the two main functions defined by a queue?,"By implementing a list in which a tail pointer points to the item most recently inserted onto the back of the list and a head pointer which points to the item least recently inserted onto the list. Also, items can only be removed from the front of the list and can only be added to the back of the list.","Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list."
1,2.3735147470735063,2.9644310433959067,5.0,  enqueue insert specified element head specified dequeue remove specified element queue,What are the two main functions defined by a queue?,You can use list to represent the items in a queue.,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list."
2,1.8401444433105298,-0.9655550799581765,5.0,  enqueue insert item back dequeue remove item front queue,What are the two main functions defined by a queue?,Have a pointer to the last element in the list and then use enqueue to insert items there. Link the first and last elements together to dequeue the list.,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list."
3,-0.4559352048781795,0.059706125661112774,5.0,  enqueue dequeue,What are the two main functions defined by a queue?,Enqueue to the end of the linked list... dequeue items from the beginning (head) of the list.,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list."
4,-0.45593520487817896,0.05970612566111303,5.0,  enqueue dequeue,What are the two main functions defined by a queue?,you use the first element in the list as the remove point for the queue and insert items at the end of the list.,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list."
5,-0.4559352048781789,0.05970612566111303,5.0,  enqueue dequeue,What are the two main functions defined by a queue?,"Utilizing a front pointer and a back pointer.  The front poiner and back pointer points to the first item into the queue.  As you add items, the front remains the same but the back poiner 'next' points to the new item and the new item is assigned to become the 'new' back pointer.","Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list."
6,0.4789923847517656,0.7188208238675372,5.0,  enqueue insert dequeue remove element,What are the two main functions defined by a queue?,Implement a linked list that only allows nodes to be added to the tail and can only be retrieved from the head.,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list."
7,1.759607247677382,-1.9116011435691178,5.0,  remove item added first add item back,What are the two main functions defined by a queue?,Check if list is empty and add elements to the list.,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list."
8,-0.4559352048781789,0.05970612566111303,5.0,  enqueue dequeue,What are the two main functions defined by a queue?,"make a linked list and add on to the front and delete from the back, keep track of both to do so.","Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list."
9,-0.4559352048781789,0.05970612566111303,5.0,  enqueue dequeue,What are the two main functions defined by a queue?,by making the head of the list the beginning of the queue and the last listed item the insertion point of the queue,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list."
10,-0.4559352048781789,0.05970612566111303,5.0,  enqueue dequeue,What are the two main functions defined by a queue?,throw in data at the head and take it out at the tail,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list."
11,-0.4559352048781789,0.05970612566111303,5.0,  enqueue dequeue,What are the two main functions defined by a queue?,"You create a list of nodes that had a head and a top pointer, and the functions are basically the same substituting pop and push with enqueue and dequeue","Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list."
12,-0.4559352048781789,0.05970612566111303,5.0,  enqueue dequeue,What are the two main functions defined by a queue?,"fairly easy... singly linked list with a pointer to the head and tail of hte list.  deque first item in que, create temp pointer to next element, delete head, and then make head the temporary pointer.  enque new item, use pointer to end of list, add a new item to the next item of the tail, and make the tail the next item of the current tail.","Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list."
13,-0.4559352048781789,0.05970612566111303,5.0,  enqueue dequeue,What are the two main functions defined by a queue?,"Use a linked list with 2 pointers, one to the front and one to the back. As long as back != front, the queue is not empty.","Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list."
14,-0.4077592057302193,-0.3011865065347878,5.0,  enque data deque,What are the two main functions defined by a queue?,"create a node with the input data, continue to add to the list.  when dequeueing - get the first elements data and set the next element in the list as the new first element","Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list."
15,-0.4559352048781789,0.05970612566111303,5.0,  enqueue dequeue,What are the two main functions defined by a queue?,"A linked list with Stack principles. The Queue's top element is the element that is always being removed first. Must use nodes to contain each element, with a pointer to the top element, which also could  be called the head pointer.","Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list."
16,-0.4559352048781789,0.05970612566111303,5.0,  enqueue dequeue,What are the two main functions defined by a queue?,linked list checking for front and rear.  Keep enqueueing elements until front equal to rear -1.,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list."
17,-0.4559352048781789,0.05970612566111303,5.0,  enqueue dequeue,What are the two main functions defined by a queue?,"a queue can be implemented in a list by keeping track of two pointers, a head and a tail","Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list."
18,-0.4559352048781789,0.05970612566111303,5.0,  enqueue dequeue,What are the two main functions defined by a queue?,"each element of a queue can be allocated in the nodes of an linked list. New elements should be added to the head of the list, with each dequeued element coming off the tail.","Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list."
19,1.4931877325668388,-1.528239178423545,5.0,  enqueue add item dequeue take first item out queue,What are the two main functions defined by a queue?,"Implement the operation dequeue() as the list operation remove(1) and the operation getFront(queueFront) as the list operation retrieve(1, queueFront)","Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list."
20,0.7994678314253544,0.4133728166674259,5.0,  enqueue dequeue add remove element queue,What are the two main functions defined by a queue?,remove the first element and reference the second element as the new head of the list.,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list."
21,-0.4559352048781789,0.05970612566111303,5.0,  enqueue dequeue,What are the two main functions defined by a queue?,By creating and adding nodes at the end of the list and removing the nodes from the beginning of the list.,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list."
22,-0.4559352048781789,0.05970612566111303,5.0,  dequeue enqueue,What are the two main functions defined by a queue?,you would have your list and add a back pointer so that your program knows where the end is,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list."
23,-0.4559352048781789,0.05970612566111303,5.0,  enqueue dequeue,What are the two main functions defined by a queue?,"your queue storage class has a list, and for enqueue, you add the item to the end of the list, and for dequeue you return the first item in the list","Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list."
24,-0.4559352048781789,0.05970612566111303,5.0,  enqueue dequeue,What are the two main functions defined by a queue?,temp-&gt;next= NULL;       if (front)  { (rear) -&gt; next= temp;}       else front = temp;       rear = temp;   },"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list."
25,-0.4559352048781789,0.05970612566111303,5.0,  enqueue dequeue,What are the two main functions defined by a queue?,Push.,push
26,-0.27722346196471165,-0.34642364214726334,2.0,  rear front,What are the two main functions defined by a queue?,"push, which inserts something at the top of the stack.",push
0,3.8382347690960765,1.4801298517291808,5.0,  front pointer tail pointer when tail pointer reaches end get reset front if two pointer equal then full have one element,How can you implement a queue with an array?,The stack operation corresponding to enqueue in queues is the push operation.,push
1,-0.4415506616398743,-0.8086906748544784,2.0,  create max size adjust item follow fifo procedure,How can you implement a queue with an array?,"Push in a stack operation corresponds to the enqueue operation in queues.  These operations insert a new item into one end(the top and back, respectively) of the ADT.",push
2,-0.7324898849561928,-0.6456894049746362,2.0,  implementing only adding item end only removing item beginning array,How can you implement a queue with an array?,The stack operation is almost the opposite of the enqueue operation.,push
3,-0.03272893950473929,-0.857120889247711,1.0,  application fixed sized does not present problem represent queue,How can you implement a queue with an array?,push = enqueue pop = dequeue,push
4,-0.4248618230373752,-0.35454864586164636,4.0,  keep track front back as increase decrease element array,How can you implement a queue with an array?,push,push
5,0.04800547344704796,2.5601821850504543,5.0,  declare size have special conditional statement pointer re say have 2zero element load 18 then dequeue 3 when enqueue more element want loop back index zero continue there processes save resource,How can you implement a queue with an array?,Not sure what this question means.  You can use the stack 'push' operation and the enqueue operation to detect palindromes.,push
6,-0.9194992332157049,2.2139618013759477,3.0,  could first element list as remove point insert end do have shift element time remove item unless circular,How can you implement a queue with an array?,"Enqueue is the queue equivalent of push, and dequeue is the queue equivalent to pop.",push
7,-0.44960838325520625,-0.6062027768946543,4.0,  utilizing indexes front back front zero as add item back index incremente,How can you implement a queue with an array?,Push operation.,push
8,0.8108340403838192,-0.02149952072106892,5.0,  declare two variable front rear denote element accessed increment rear whenever datum enqueue end increment front whenever datum dequeue,How can you implement a queue with an array?,push,push
9,-0.477685240969635,-0.1438255436588576,1.0,  fixed size maximum element,How can you implement a queue with an array?,push,push
10,0.0667809410224153,-1.3848784217408918,4.0,  size add front delete back keep track two that know when full where add subtract,How can you implement a queue with an array?,push,push
11,-0.304318424206093,0.06565493382196222,3.0,  using beginning as removal point beginning ith element as end queue,How can you implement a queue with an array?,push,push
12,-0.20192732743609448,1.3002478485124536,2.0,  add datum first element last take datum first element last,How can you implement a queue with an array?,"that would be the push operation, if it put the item at the end of the list.",push
13,-0.37901493929602353,-0.840263751367673,3.0,  take put stack traverse list keep track top bottom,How can you implement a queue with an array?,push,push
14,0.3429567196981316,-1.0309316386323524,4.0,  create fixed size two integer point beginning end que special case know when que empty full,How can you implement a queue with an array?,push,push
15,-0.3947130695400932,-1.1729321343036578,4.0,  keep track front rear indexes : 1 dequeue item shifting left 2 wrapped configuration,How can you implement a queue with an array?,the Push method in the stack operations.,push
16,-1.7724370365396864,0.03441019849129939,3.0,  add item fixed size pull item calling starting index increase starting index when call again now next index element array,How can you implement a queue with an array?,push,push
17,-1.914373551307974,3.6944346465070947,2.0,  element item 0 top element time element inserted item pushed back one space top element always remove first,How can you implement a queue with an array?,enqueue corresponds with push dequeue corresponds with pop,push
18,-0.41907156208385704,-0.8099026091207919,4.0,  fixed size max element need keep track front rear array,How can you implement a queue with an array?,"Push corresponds with enqueue, both very similarly place new elements into their stack or queue",push
19,-0.6442102392671928,-0.8515242210972411,5.0,  keeping track front item rear item circular modulo function,How can you implement a queue with an array?,FIFO: First in First out,push
20,-0.1899298101608071,-1.6403016199931646,5.0,  using size allocate limit size base classes must keep track both front back need wrap array,How can you implement a queue with an array?,push,push
21,1.6000831073157178,0.11063576591267754,0.0,  pointer base implementation could linear linked list two external pointer one front one back,How can you implement a queue with an array?,Push,push
22,-0.6151557568989623,1.509064133887863,2.0,  remove element then shift element one space back,How can you implement a queue with an array?,push,push
23,4.451217586009571,0.22646949819264298,5.0,  having head pointer point first least current datum entered having tail point most current datum entered method must create that tail pointer does not leave array,How can you implement a queue with an array?,push,push
24,-0.21297249606236002,-0.7475360254021508,0.0,  type fixed length,How can you implement a queue with an array?,push,push
25,-0.47036259854950657,-0.5114689383624759,5.0,  storage classes have keep track index first last item wrap around when end full,How can you implement a queue with an array?,A hierarchy of nodes that are sorted in a particular order.  Each node has a ancestor (except for the root) and children (except for the leaves).,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree."
26,-0.16120165904539482,-0.7678740472481009,5.0,  boolean isfullq : : = rear = = max_queue_size 1,How can you implement a queue with an array?,A tree is a finite set of one or more nodes with a specially designated node called the root and the remaining nodes are partitioned into disjoint sets where each of these sets is a tree.,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree."
0,-0.711649426090161,-1.1721070301306304,5.0,  have unlimited element push node end pop one front,How can you implement a queue with a list?,A tree is a finite set of one or more nodes such that: there is a specially designated node called the root.,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree."
1,11.293646110019687,-3.1496742630551564,0.0,  theoretically could do two way one more processing power memory no large than ever when full other almost infinite memory more practical method two place item array remove item position one array shift array add element if require other option infinite memory when long term as job scheduling goes nonstop extended period array add item read item one raise counter value two ecetera continue adding more element array downside method element one still memory crazy know,How can you implement a queue with a list?,"A connected, undirected graph without cycles.","A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree."
2,0.49363351078258466,3.1839053400308317,5.0,  implementing tail pointer point item most recently inserted back head pointer point item least recently inserted item only remove front only added back list,How can you implement a queue with a list?,"A data structure that contains a root, internal nodes and external nodes. Each node references another node by means of pointers (pass-by-reference). The root is the ""base"" of the tree, it has no parents. A ""leaf"" is a node at the end of the tree which points to NULL.","A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree."
3,-0.7164818865464451,-0.5299069771961621,0.0,  represent item queue,How can you implement a queue with a list?,a tree is a series of nodes where each node has links to other nodes.,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree."
4,-0.2976619029717463,-0.24433378514149773,3.0,  have pointer last element then enqueue insert item there link first last element together dequeue list,How can you implement a queue with a list?,"an infinite set of nodes that have a root and descendants, and each addition is a leaf.","A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree."
5,-0.8146280195488891,-0.3546518565393428,5.0,  enqueue end linked dequeue item beginning head list,How can you implement a queue with a list?,"A set of one or more nodes that are hierarchically organized, with one special “root” node.","A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree."
6,-0.3710109805656876,-0.43876537276647953,5.0,  first element as remove point insert item end list,How can you implement a queue with a list?,A tree is a finite set of one or more nodes such that there is a specially designated node called the root.,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree."
7,1.5982131434262035,6.26434966015742,5.0,  utilizing front pointer back pointer front poiner back pointer point first item as add item front remain same back poiner next point new item new item assigned become new back pointer,How can you implement a queue with a list?,one or more nodes in a hierarchy starting with the root and branching off like a tree to subtrees,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree."
8,-1.163251558087926,-0.5140627739463779,5.0,  linked only node added tail only retrieve head,How can you implement a queue with a list?,A tree is a data structure where nodes are linked to each other in a hierarchical manner.,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree."
9,-0.7137763771986291,-1.1512933996917498,1.0,  check if empty add element list,How can you implement a queue with a list?,a grouping of data in a parent to child structure,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree."
10,-0.8624431988520619,-0.49897425561864456,5.0,  linked add front delete back keep track do,How can you implement a queue with a list?,It is a list of numbers in a list made by comparing values of nodes already in the tree and adding to the appropriate spot. Its a list made up of nodes with left and right pointers.,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree."
11,-0.7323991432940401,-0.22927949079636958,5.0,  making head beginning last listed item insertion point queue,How can you implement a queue with a list?,"A tree is a branched data structure with nodes, and leaves... a special node called root has no parent node, but however like all other nodes can and does have 2 nodes that it links to, namely one on the right, and one on the left.","A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree."
12,-1.0913438588027304,-0.6096456890506737,4.0,  throw datum head take tail,How can you implement a queue with a list?,"It organizes data in a nonlinear, hierarchical form, where items can have more than one successor.  Partitioned into a root node and subsets are general subtrees of the root. ","A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree."
13,-1.1740416938719014,-0.3902663035996162,2.0,  create node have head top pointer function basically same substituting pop push enqueue dequeue,How can you implement a queue with a list?,"A tree is a finite set of one or more nodes such that there is a specially designated node called the root. The remaining nodes are partitioned into n&gt;=0 disjoint sets T the n plus 1, where each element set is a tree.","A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree."
14,2.1390508120495153,6.721045519060313,5.0,  fairly easy singly linked pointer head tail hte deque first item que create temp pointer next element delete head then head temporary pointer enque new item pointer end add new item next item tail tail next item current tail,How can you implement a queue with a list?,A finite set of nodes that starts with the root and terminates with leaves.,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree."
15,0.0675691677334836,-0.03549596280618998,5.0,  linked two pointer one front one back as long as back = front not empty,How can you implement a queue with a list?,"a set of data arranged with pointers. each element can have many pointers, but no two pointers point to the same element","A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree."
16,0.03962266647456936,-0.9083888894650392,4.0,  create node input datum continue add when dequeueing get first element datum set next element as new first element,How can you implement a queue with a list?,"A Tree is a data structure with one or more data nodes, each of which contains some data. Each node itself can have a number of attached child nodes, creating the branched structure Trees are named for.","A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree."
17,-0.029808749831922915,-0.42848898983391864,2.0,  linked stack principle top element element always being remove first must node contain element pointer top element could called head pointer,How can you implement a queue with a list?,"a finite collection of nodes, where it starts with an element called the root, which has children, and its children have children until you get to the leaves which are the last elements and have to children","A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree."
18,-0.6958040302021389,-0.9923489379990841,3.0,  linked checking front rear keep enqueueing element front equal rear minus one,How can you implement a queue with a list?,"A nonlinear, two-dimensional data structure.","A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree."
19,-0.7818560793134549,-0.18209204473053484,5.0,  implemented keeping track two pointer head tail,How can you implement a queue with a list?,a finite set of one or more nodes such that there is a root node and all other nodes are split into trees of lesser value than the root,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree."
20,-0.497254217463186,-0.7719340990389514,5.0,  element allocate node linked new element added head dequeue element coming tail,How can you implement a queue with a list?,"A finite number of nodes such that there is one root node, each node has a certain number of children nodes, and each child is also a tree","A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree."
21,-1.1075612810557676,-1.3262295833010456,3.0,  operation dequeue as operation remove 1 operation getfront queuefront as operation retrieve 1 queuefront,How can you implement a queue with a list?,A type of data structure in which each element is attached to one or more elements directly beneath it.,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree."
22,-0.5273978749886515,-0.811805626824706,3.0,  remove first element reference second element as new head list,How can you implement a queue with a list?,"Each level of a generation in the tree, some people do not count the root as a generation",The length of the longest path from the root to any of its leaves.
23,-1.1915851149590968,-1.148986822492441,5.0,  creating adding node end removing node beginning list,How can you implement a queue with a list?,"The height of a tree is in terms of the levels of its nodes such that, if  the tree is empty its height is 0 otherwise its height is equal to the maximum level of its nodes.",The length of the longest path from the root to any of its leaves.
24,-0.8025667455360908,-0.21988640794757047,4.0,  have add back pointer that program know where end,How can you implement a queue with a list?,The height of a tree is the number of nodes on the longest path from the root to a leaf.,The length of the longest path from the root to any of its leaves.
25,-0.2293995614802633,0.033465343516031025,4.0,  storage classes have enqueue add item end dequeue return first item list,How can you implement a queue with a list?,The number of nodes on the longest path from the root of the tree to a leaf.,The length of the longest path from the root to any of its leaves.
26,-1.119813709825265,-0.09414730079241394,3.0,  temp gt next= null if front rear gt next= temp else front = temp rear = temp,How can you implement a queue with a list?,Height = the number of times you must progress down the levels of a tree to reach a leaf of the greatest distance from the root.,The length of the longest path from the root to any of its leaves.
0,-0.20051059917632091,-0.06720217923885584,5.0,  push,What is the stack operation corresponding to the enqueue operation in queues?,the height of a tree is the length from the root to the furthest leaf,The length of the longest path from the root to any of its leaves.
1,0.41305532624021674,-0.506159571584557,5.0,  push insert something top stack,What is the stack operation corresponding to the enqueue operation in queues?,The height is the number of generations (levels) from the root.,The length of the longest path from the root to any of its leaves.
2,-0.3413320045162075,-0.17705064623575717,5.0,  push operation,What is the stack operation corresponding to the enqueue operation in queues?,The height of a tree is the number of levels between the root and the leaf farthest away from it.,The length of the longest path from the root to any of its leaves.
3,2.656184699237669,-0.8638442818848894,5.0,  push correspond insert new item one end top back respectively adt,What is the stack operation corresponding to the enqueue operation in queues?,is the depth of its furthest leaf,The length of the longest path from the root to any of its leaves.
4,-0.5414929184960119,-0.3844067643407873,0.0,  almost opposite operation,What is the stack operation corresponding to the enqueue operation in queues?,the number of nodes from root to leaf,The length of the longest path from the root to any of its leaves.
5,-0.0695378978687726,0.9066436290894296,5.0,  push = pop = dequeue,What is the stack operation corresponding to the enqueue operation in queues?,the distance from the deepest leaf to the root,The length of the longest path from the root to any of its leaves.
6,-0.20051059917632064,-0.06720217923885576,5.0,  push,What is the stack operation corresponding to the enqueue operation in queues?,the number of generations or levels of a tree,The length of the longest path from the root to any of its leaves.
7,-0.3583679439414376,-0.1618992511364098,5.0,  not question mean push detect palindrome,What is the stack operation corresponding to the enqueue operation in queues?,"The intensity of the children. Say you begin with one node, Thats one height. Then you add two children to that node and then two children to each of those nodes and two children to each of THOSE nodes. Youre current height would be 4.",The length of the longest path from the root to any of its leaves.
8,-0.10737647111690464,1.703995926143159,5.0,  equivalent push dequeue equivalent pop,What is the stack operation corresponding to the enqueue operation in queues?,"the number of levels of a tree, like a tree can have at minimum a depth of 3 and at most a height of 8 for 8 nodes.",The length of the longest path from the root to any of its leaves.
9,-0.3413320045162076,-0.177050646235757,5.0,  push operation,What is the stack operation corresponding to the enqueue operation in queues?,The number of nodes on the longest path from the root to the leaf.,The length of the longest path from the root to any of its leaves.
10,-0.20051059917632064,-0.06720217923885578,5.0,  push,What is the stack operation corresponding to the enqueue operation in queues?,The height of a tree is the number of nodes on the longes path from the root to a leaf.,The length of the longest path from the root to any of its leaves.
11,-0.20051059917632064,-0.06720217923885578,5.0,  push,What is the stack operation corresponding to the enqueue operation in queues?,is equal to the number of levels.  levels between the root node and the terminal nodes.,The length of the longest path from the root to any of its leaves.
12,-0.20051059917632064,-0.06720217923885578,5.0,  push,What is the stack operation corresponding to the enqueue operation in queues?,the number of generations or levels the tree has,The length of the longest path from the root to any of its leaves.
13,-0.20051059917632064,-0.06720217923885578,5.0,  push,What is the stack operation corresponding to the enqueue operation in queues?,"The height of a tree is the depth of its subtrees, that is, how many layers deep it is.",The length of the longest path from the root to any of its leaves.
14,0.47809310210764827,-0.6488091995724086,5.0,  push if put item end list,What is the stack operation corresponding to the enqueue operation in queues?,is the number of generations in the tree,The length of the longest path from the root to any of its leaves.
15,-0.20051059917632064,-0.06720217923885578,5.0,  push,What is the stack operation corresponding to the enqueue operation in queues?,The number of nodes on the longest path from the root to a leaf.,The length of the longest path from the root to any of its leaves.
16,-0.20051059917632064,-0.06720217923885578,5.0,  push,What is the stack operation corresponding to the enqueue operation in queues?,the number of distinct levels of separation,The length of the longest path from the root to any of its leaves.
17,-0.3743077359210168,-0.2005064337582431,5.0,  push method operation,What is the stack operation corresponding to the enqueue operation in queues?,the height of a tree is how many levels of nodes that it has,The length of the longest path from the root to any of its leaves.
18,-0.20051059917632064,-0.06720217923885578,5.0,  push,What is the stack operation corresponding to the enqueue operation in queues?,The connections between elements are called branches. Trees are often called inverted trees because they are normally drawn with the root at the top.,The length of the longest path from the root to any of its leaves.
19,0.9202503498024263,1.551709499795406,5.0,  correspond push dequeue correspond pop,What is the stack operation corresponding to the enqueue operation in queues?,A leaf is a child of a parent node that has no children nodes of its own.,A node that has no children.
20,1.1208609336248512,0.5175242957127487,5.0,  push correspond very similarly place new element queue,What is the stack operation corresponding to the enqueue operation in queues?,A leaf is a node with no children.,A node that has no children.
21,-0.6475490461677614,-0.619316046647953,0.0,  fifo : first first out,What is the stack operation corresponding to the enqueue operation in queues?,A node with no children.,A node that has no children.
22,-0.20051059917632064,-0.06720217923885578,5.0,  push,What is the stack operation corresponding to the enqueue operation in queues?,A tree node with no children.,A node that has no children.
23,-0.20051059917632064,-0.06720217923885578,5.0,  push,What is the stack operation corresponding to the enqueue operation in queues?,And end point of the tree... a node that does not have any children.,A node that has no children.
24,-0.20051059917632064,-0.06720217923885578,5.0,  push,What is the stack operation corresponding to the enqueue operation in queues?,a node with no children.,A node that has no children.
25,-0.20051059917632064,-0.06720217923885578,5.0,  push,What is the stack operation corresponding to the enqueue operation in queues?,A new item to the tree--a child,A node that has no children.
26,-0.20051059917632064,-0.06720217923885578,5.0,  push,What is the stack operation corresponding to the enqueue operation in queues?,"A leaf is a node with children, it is a terminating node.",A node that has no children.
0,-0.21560585691071968,-1.0016174694630433,3.0,  hierarchy node sorted particular order node have ancestor except root children except leave,What is a tree?,The node with degree 0.,A node that has no children.
1,1.8549212746610024,2.94457998930582,5.0,  finite set one more node specially designate node called root remaining node partitioned disjoint set where set tree,What is a tree?,the node with degree 0,A node that has no children.
2,0.6233137412675662,1.5435989665865972,4.0,  finite set one more node that : specially designate node called root,What is a tree?,a leaf is a node with no children,A node that has no children.
3,-2.2912331875483534,0.12506161580117042,4.0,  connected undirected graph cycle,What is a tree?,the last child on any branch,A node that has no children.
4,3.186064341069573,-2.3520009653112384,5.0,  datum structure contain root internal node external node node reference node mean pointer pass reference root base have parent leaf node end point null,What is a tree?,The last value in the tree. A value with no children attatched.,A node that has no children.
5,0.5998916508047586,-0.823521457475838,1.0,  series node where node have link other node,What is a tree?,a node with no children.,A node that has no children.
6,-0.8663181157193465,0.1441467703812644,2.0,  infinite set node have root descendant addition leaf,What is a tree?,A node with no children.,A node that has no children.
7,0.3892589354651525,0.8791840932348375,3.0,  set one more node hierarchically organize one special root node,What is a tree?,A leaf is a node with no children,A node that has no children.
8,0.6233137412675683,1.5435989665865977,2.0,  finite set one more node that specially designate node called root,What is a tree?,a node with degree 0.  last node in the tree and furtherest away from the root.,A node that has no children.
9,-0.8693685821220656,0.3458892515266919,5.0,  one more node hierarchy starting root branching like subtree,What is a tree?,an endpoint on a tree that contains no pointers or pointers that are set to null,A node that has no children.
10,-1.3315103625582805,-0.28036849757588583,2.0,  datas structure where node linked other hierarchical manner,What is a tree?,A leaf is a node with no children.,A node that has no children.
11,-2.079935531639909,-0.45899582511722664,2.0,  grouping datum parent child structure,What is a tree?,an element in a tree that has no children,A node that has no children.
12,-0.4745545577517341,-0.8002494575253253,1.0,  list number list comparing value node already adding appropriate spot list node left right pointer,What is a tree?,A node with no children.,A node that has no children.
13,3.6720462167872916,-2.0460363678001574,4.0,  branched datum structure node leave special node called root have parent node like other node does have two node that link namely one right one left,What is a tree?,a leaf is a node that has no children nodes,A node that has no children.
14,-0.5566286499878532,0.18817180737725112,5.0,  organize datum nonlinear hierarchical form where item have more than one successor partitioned root node subset general subtree root,What is a tree?,a leaf is a node with no children,A node that has no children.
15,1.9218697537715619,3.17163045738921,5.0,  finite set one more node that specially designate node called root remaining node partitioned n gt = 0 disjoint set plus 1 where element set tree,What is a tree?,"The elements at the very bottom of an inverted tree (that is, those that have no elements below them) are called leaves.",A node that has no children.
16,-0.8824674450307705,0.622001516593819,3.0,  finite set node start root terminate leave,What is a tree?,"A tree data structure in which each done has at most two children, typical called left and right nodes.  The right node is usually greater than the left node and the parent node.",A tree for which the maximum number of children per node is two.
17,-2.475108087829817,-0.3649775063162524,1.0,  set datum arrange pointer element have many pointer two pointer point same element,What is a tree?,"A binary tree is a set of nodes that is either empty or partitioned into a root node and one or two subsets that are binary subtrees of the root. Each node can have no more than two children, a right and a left child.",A tree for which the maximum number of children per node is two.
18,0.940900432974924,-1.6594045966556605,4.0,  datas structure one more datum node contain datum node have number attached child node creating branched structure name,What is a tree?,"A set of nodes that is either empty or partitioned into a root node and one or two subsets that are binary subtrees of the root.  Each node has at most two children, the left child and the right child.",A tree for which the maximum number of children per node is two.
19,-1.0196896278411576,-1.696896788787261,4.0,  finite collection node where start element called root have children children have children get leave last element have children,What is a tree?,"A set of zero or more nodes, partitioned into a root node and two possibly empty sets that are binary trees. Thus, each node in a binary tree has at most two children, the left child and the right child.",A tree for which the maximum number of children per node is two.
20,-2.215928042171255,-0.34770560611160484,0.0,  nonlinear two dimensional datum structure,What is a tree?,A tree in which each parent has a maximum of 2 children.,A tree for which the maximum number of children per node is two.
21,1.5705541207691915,0.9226203578892522,3.0,  finite set one more node that root node other node split lesser value than root,What is a tree?,a tree where each node has at most 2 children.,A tree for which the maximum number of children per node is two.
22,2.18086739793923,-0.7929188064969314,5.0,  finite number node that one root node node have certain number children node child tree,What is a tree?,a tree with up to two children or a right subtree and/or a left subtree,A tree for which the maximum number of children per node is two.
23,-2.2846535596665847,0.19420955196393555,3.0,  type datas structure element attached one more element directly,What is a tree?,"A binary tree is a tree in which all nodes have a maximum of two degrees, or can only have two children each.",A tree for which the maximum number of children per node is two.
0,-0.727187642072862,1.0094707356901638,4.0,  level generation people do not count root as generation,What is the height of a tree?,a binary tree is a tree data structure in which each node has at most two children.,A tree for which the maximum number of children per node is two.
1,0.9260327921870882,2.1497104628385992,4.0,  term level node that if empty zero otherwise equal maximum level node,What is the height of a tree?,"a tree with only 2 joints, left and right",A tree for which the maximum number of children per node is two.
2,-0.09908035061584274,-1.2185027462363351,5.0,  number node longest path root leaf,What is the height of a tree?,A binary search tree is a tree that also has the condition that each node may have at maximum 2 children,A tree for which the maximum number of children per node is two.
3,-0.09908035061584274,-1.2185027462363347,5.0,  number node longest path root leaf,What is the height of a tree?,a tree where each parent can have at max two children.,A tree for which the maximum number of children per node is two.
4,-0.7622895973717472,-0.2762345110137914,5.0,  = number time must progress level reach leaf greatest distance root,What is the height of a tree?,a list of numbers that are ordered compared to how they compare to the other numbers already added in the tree,A tree for which the maximum number of children per node is two.
5,-0.5873558544896488,-0.7529620719080301,5.0,  length root furthest leaf,What is the height of a tree?,a tree where each node can have at most 2 children.,A tree for which the maximum number of children per node is two.
6,-0.6707353952018106,0.4785729416705177,4.0,  number generation level root,What is the height of a tree?,"Starting at the root node, it branches off into one or two subsets that are binary subtrees of the root.  Each node has at most two children, the left child and the right child.",A tree for which the maximum number of children per node is two.
7,-0.6927948150723835,-0.1788373203862879,5.0,  number level root leaf farthest away,What is the height of a tree?,"A binary tree is a set of nodes that is either empty or partitioned into a root node and one or two subsets that are binary subtrees of the root. Each node has at most two children, the left child and the right child.",A tree for which the maximum number of children per node is two.
8,-0.5070083617917271,-0.34853708347554335,4.0,  depth furthest leaf,What is the height of a tree?,a tree that has a maximum of 2 children per node,A tree for which the maximum number of children per node is two.
9,-0.08279010172074493,-0.7058661280461217,3.0,  number node root leaf,What is the height of a tree?,a tree with elements that can contain at most two pointers,A tree for which the maximum number of children per node is two.
10,-0.592227821609666,-0.7491639705211843,5.0,  distance deepest leaf root,What is the height of a tree?,A binary tree can have only two children for each node.,A tree for which the maximum number of children per node is two.
11,-0.6055752779117975,0.8452020000458718,4.0,  number generation level tree,What is the height of a tree?,a tree where every parent has only two children,A tree for which the maximum number of children per node is two.
12,6.946833761997008,-0.34347689453563823,2.0,  intensity children say begin one node that one then add two children node then two children node two children node current four,What is the height of a tree?,A tree where every node has no more than two children,A tree for which the maximum number of children per node is two.
13,0.02023521743659422,1.2172165512468414,3.0,  number level like have minimum depth most eight eight node,What is the height of a tree?,"a binary tree is a special search tree where each node has either 2, 1, or 0 children",A tree for which the maximum number of children per node is two.
14,-0.09908035061584274,-1.2185027462363351,5.0,  number node longest path root leaf,What is the height of a tree?,a binary tree is a special type of tree where each node can only have at maximum 2 children,A tree for which the maximum number of children per node is two.
15,-0.09351382821177463,-1.0360603287264805,5.0,  number node longe path root leaf,What is the height of a tree?,A binary tree is a special type of inverted tree in which each element has only two branches below it.,A tree for which the maximum number of children per node is two.
16,0.5197456995174924,1.1153372497935838,4.0,  equal number level level root node terminal node,What is the height of a tree?,"A tree data structure where each node has a value, where the total order is defined on these values.  the left subtree contains only values less than the parent node, and vice versa for the right subtree.",A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.
17,-0.592445634554989,0.939982401837818,4.0,  number generation level have,What is the height of a tree?,A binary search tree is a binary tree where the value in any node 'n' is greater than the value in every node in n's left subtree but less than every node in n's right subtree.,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.
18,-0.45676738551883317,0.2862224868889737,4.0,  depth subtree how many layer deep,What is the height of a tree?,"A binary tree where the value in any node n is greater than the value in every node in n's left subtree, but less than the value of every node in n's right subtree.",A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.
19,-0.5767719407427414,0.26756779051596846,4.0,  number generation tree,What is the height of a tree?,"A binary tree where the search key in any node n is greater than the search key in any node in n's left subtree, but less than the search key in any node in n's right subtree.",A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.
20,-0.09908035061584274,-1.2185027462363351,5.0,  number node longest path root leaf,What is the height of a tree?,"A tree which is split based on values. This makes it very easy to search. One can compare the desired value to the root, and if the root is greater than, we search the left side of the tree, if it is less than, we search the right side... and do the same thing recursively. ",A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.
21,-0.5316964719456192,0.636517023859763,3.0,  number distinct level separation,What is the height of a tree?,a tree where each node has at most two nodes and the node on the left is less than the root and the node on the right is greater than the root.,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.
22,0.10408927483012197,0.9494191443515473,4.0,  how many level node have,What is the height of a tree?,a special binary tree that has a rule that all the subtrees on the right are smaller than the node value and all the subtrees on the left are larger than the node value,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.
23,-0.6414552152885522,-0.6300694951812408,0.0,  connection element called branches often called inverted because normally draw root top,What is the height of a tree?,"Binary search trees are similar to binary trees, but have been implemented to organize data in a specific way for later searching.",A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.
0,-1.0455192948872227,-0.6524975839332631,5.0,  child parent node have children node own,What is a leaf?,"it is a binary tree where each node has a value, a total order is defined on these values, the left subtree of a node contains only values less than the node's value, and the right subtree of a node contains only values greater than or equal to the node's value.",A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.
1,-0.3942116216689135,-0.14680111243424454,5.0,  node children,What is a leaf?,A binary tree with the data organized in a specific arangment,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.
2,-0.394211621668914,-0.14680111243424487,5.0,  node children,What is a leaf?,"A binary search tree is a tree that also has the condition that each node may have at maximum 2 children and where the input data is compared to the data in the tree starting with the root. If the value is smaller than the root it traverses left, if it is larger it traverses right until it becomes a leaf.",A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.
3,-0.004900259194470624,-0.09871656396564847,5.0,  tree node children,What is a leaf?,a binary tree in which the data is in order from left to right.,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.
4,0.10480751179388258,-0.7919987251664999,5.0,  end point tree node does not have children,What is a leaf?,a tree that is set up so that it can be easily searched for numbers based on the location compared to the previous nodes.,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.
5,-0.3942116216689137,-0.14680111243424498,5.0,  node children,What is a leaf?,"a binary tree where the children are ordered such that the right side is greater than the current node, and the left is less than or equal the current node.",A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.
6,1.1036710212022556,0.44818796562301805,2.0,  new item tree child,What is a leaf?,"A binary tree where the value in any node n is greater than the value in every node n's left subtree, but less than every value in n's right subtree.",A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.
7,-1.1189184360044837,-0.18891695852187,0.0,  node children terminating node,What is a leaf?,A binary search tree is a finite set of nodes that is either empty or consits of a root and two disjoint binary trees call the left and right subtrees.,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.
8,-0.22593006059883117,0.8792895183185436,3.0,  node degree zero,What is a leaf?,it is similar to a binary tree.  The keys in a nonempty left subtree (right subtree) are smaller (larger) than the key in the root of subtree.  the values in all nodes in the left subtree of a node are less than             the node value  the values in all nodes in the right subtree of a node are greater    than the node values,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.
9,-0.22593006059883117,0.8792895183185436,3.0,  node degree zero,What is a leaf?,"a set of numbers arranged by links. each node can contain two pointers to other elements. each node to the left of the parent is smaller and each node to the right is larger. recursive implementation implies that if traversed in order, the output would be sorted",A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.
10,-0.3942116216689137,-0.14680111243424487,5.0,  node children,What is a leaf?,"A binary search tree is a special binary tree arranged such that every left child node contains a value less than its parent, and every right child node contains a value greater its parent.",A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.
11,0.6960482731430081,0.60521673248156,4.0,  last child branch,What is a leaf?,"a binary tree with a special organization of data. where the left child of the element is less than it, and the right child is larger than it.",A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.
12,1.0122854710278428,0.297290224473454,5.0,  last value tree value children attatched,What is a leaf?,A tree in which the smaller values are located on the left of a parent node and the larger values are located on the right of the parent node.,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.
13,-0.3942116216689137,-0.14680111243424487,5.0,  node children,What is a leaf?,"a binary search tree is a special tree in which each node has at most two children, labeled left child and right child",A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.
14,-0.3942116216689137,-0.14680111243424487,5.0,  node children,What is a leaf?,"it is a binary tree where each node has a unique key, the left child of a node has only values less than that node, and the right child of each node has higher values than that node.",A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.
15,-0.3942116216689137,-0.14680111243424487,5.0,  node children,What is a leaf?,"Binary search trees are a fundamental data structure used to construct more abstract data structures such as sets, multisets, and associative arrays.",A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.
16,-0.5183713789390592,1.5789154497971911,3.0,  node degree zero last node tree furtherest away root,What is a leaf?,"For every node in the binary tree we first visit its left sub-tree (if its there) and then visit the parent node itself, and then the right sub-tree (if its there).","Traverse the left subtree, then the root, then the right subtree."
17,1.7182204979396631,1.3025409611989618,4.0,  endpoint tree contain pointer pointer set null,What is a leaf?,The inorder traversal of a binary tree visits the node of a binary tree in order according to their data values.,"Traverse the left subtree, then the root, then the right subtree."
18,-0.3942116216689137,-0.14680111243424487,5.0,  node children,What is a leaf?,Traverses the binary tree in inorder.  It lets you visit the nodes in order according to their data values.,"Traverse the left subtree, then the root, then the right subtree."
19,1.070202127218455,-0.8112406139122773,5.0,  element tree have children,What is a leaf?,Its used to visit nodes of a binary search tree in a search key order.,"Traverse the left subtree, then the root, then the right subtree."
20,-0.3942116216689137,-0.14680111243424487,5.0,  node children,What is a leaf?,(Left side of tree) (Root) (Right side of tree),"Traverse the left subtree, then the root, then the right subtree."
21,-0.9693382351310231,-0.5678317331054737,5.0,  node have children node,What is a leaf?,printing a tree in order from least to greatest. This done by going as far left down the tree as possible and printing the parent and then right tree. Then move up the tree.,"Traverse the left subtree, then the root, then the right subtree."
22,-0.3942116216689137,-0.14680111243424487,5.0,  node children,What is a leaf?,"The in order is to go from left,root,right","Traverse the left subtree, then the root, then the right subtree."
23,2.345789039717946,-1.4115170672637913,5.0,  element very bottom inverted tree have element called leave,What is a leaf?,"Inorder traversal of a binary tree will retrieve start at the furthest left hand leaf and checks it, it’s parent, and it’s right side sibling, then it goes up a level and repeats until it gets to the root.","Traverse the left subtree, then the root, then the right subtree."
0,2.357387029535033,3.054666495908738,4.0,  data structure done have at most two children typical called left right node right node greater than left node parent node,What is a binary tree?,traverse the left subtree. visit the root. traverse the right subtree.,"Traverse the left subtree, then the root, then the right subtree."
1,3.2014435320314627,-0.525104172999017,5.0,  set node empty partitioned root node one two subset subtree root node have more than two children right left child,What is a binary tree?,postorder,"Traverse the left subtree, then the root, then the right subtree."
2,3.7479043496404842,-0.8125368322972948,5.0,  set node empty partitioned root node one two subset subtree root node have at most two children left child right child,What is a binary tree?,in order starts with the root then does right child then left child recursively,"Traverse the left subtree, then the root, then the right subtree."
3,3.3161441880142193,-0.08117265744270397,5.0,  set zero more node partitioned root node two possibly empty set thus node have at most two children left child right child,What is a binary tree?,Left Child -&gt; Parent -&gt; Right Child,"Traverse the left subtree, then the root, then the right subtree."
4,-1.440004675401992,0.06496201967292957,5.0,  parent have maximum two children,What is a binary tree?,it goes from lowest to highest inside of the tree,"Traverse the left subtree, then the root, then the right subtree."
5,-0.5512509064975585,0.45982734618423887,5.0,  where node have at most two children,What is a binary tree?,"starting by displaying the node furthest to the right, then  the node, then the node on the right, in recursive order.","Traverse the left subtree, then the root, then the right subtree."
6,-0.662299754531946,-0.7485308234597805,5.0,  two children right subtree left subtree,What is a binary tree?,It travels left to right,"Traverse the left subtree, then the root, then the right subtree."
7,-0.6631547060844949,0.5567852565161013,5.0,  node have maximum two degree only have two children,What is a binary tree?,void inorder(ptNode ptr) { if (ptr) { inorder (ptr-&gt;left); cout&lt;&lt;ptr-&gt;data; inorder(ptr-&gt;right); } },"Traverse the left subtree, then the root, then the right subtree."
8,-0.4514321681756664,0.538617078344833,5.0,  datum structure node have at most two children,What is a binary tree?,"the root is in the middle.  The left subtree is traversed first, then the root, and finally the right subtree.","Traverse the left subtree, then the root, then the right subtree."
9,-1.109199152369015,-0.497887772948976,4.0,  only two joint left right,What is a binary tree?,"a traversal that visits the left branch first, then the parent node, then the right branch, recursively.","Traverse the left subtree, then the root, then the right subtree."
10,-0.8420021063642434,0.6808351646536825,4.0,  search have condition that node have maximum two children,What is a binary tree?,"Inorder traversal visits the left branch of a node (all the way to it's deepest left-most leaf) before visiting the node itself. After visiting the entire left branch and the node, it visits the node's right branch following the same pattern of left child, node, right child.","Traverse the left subtree, then the root, then the right subtree."
11,-1.4833615206157735,0.09133933719675828,5.0,  where parent have max two children,What is a binary tree?,left middle right,"Traverse the left subtree, then the root, then the right subtree."
12,-2.058497114578533,-2.1989400587172274,1.0,  list number ordered compare how compare other number already added tree,What is a binary tree?,"You traverse all the nodes to the left, then visit the root, then traverse all the nodes on the right.","Traverse the left subtree, then the root, then the right subtree."
13,-0.5512509064975585,0.4598273461842388,5.0,  where node have at most two children,What is a binary tree?,"you would go to the furthest down left most node, then to the root then to the right (if left and right exist) then you would return one node previous and do the same until you reached the root, then go to the furthest down left most node on the right side of the root and continue this process","Traverse the left subtree, then the root, then the right subtree."
14,2.6899505160711463,-0.999440460051154,5.0,  starting root node branches one two subset subtree root node have at most two children left child right child,What is a binary tree?,"it means that you traverse one subtree of a node, then look at the node itself before traversing the other subtree of the node","Traverse the left subtree, then the root, then the right subtree."
15,3.747904349640484,-0.8125368322972946,5.0,  set node empty partitioned root node one two subset subtree root node have at most two children left child right child,What is a binary tree?,"Level order traversal is a traversal method by which levels are visited successively starting with level 0 (the root node), and nodes are visited from left to right on each level, with Push and Pop methods. ","Traverse the left subtree, then the root, then the right subtree."
16,-0.8426372968565473,0.29794820284643053,5.0,  have maximum two children node,What is a binary tree?,This is on the runtime order of log(n) where n is the number of nodes in the binary tree.,The height of the tree (or log of the number of elements in the tree).
17,-1.3911444367880268,-0.7246464927284879,5.0,  element contain most two pointer,What is a binary tree?,In a binary search tree of size 'n' it takes log(n) comparisons to find a specified element.,The height of the tree (or log of the number of elements in the tree).
18,-0.866275339945229,0.21383510737129616,5.0,  have only two children node,What is a binary tree?,n-1/2 is the algorithm to compare and find an element.,The height of the tree (or log of the number of elements in the tree).
19,-1.5464983233364369,0.10212231642482493,4.0,  where parent have only two children,What is a binary tree?,At most its equivalent to the height of the tree.,The height of the tree (or log of the number of elements in the tree).
20,-0.7542441722074298,0.48321778474440064,5.0,  where node have no more than two children,What is a binary tree?,Log(n),The height of the tree (or log of the number of elements in the tree).
21,-1.1355122134938982,0.45762751174116956,4.0,  special search where node have 2 1 zero children,What is a binary tree?,O(log n),The height of the tree (or log of the number of elements in the tree).
22,-1.082427687373814,0.45069587509277315,5.0,  special type where node only have maximum two children,What is a binary tree?,Depends on what half of the tree and the levels you have.,The height of the tree (or log of the number of elements in the tree).
23,-1.6295414838146687,-0.5115107399404832,4.0,  special type inverted element have only two branches,What is a binary tree?,O(log n) in balanced trees,The height of the tree (or log of the number of elements in the tree).
0,1.7172298143167462,-2.058096621090986,5.0,  datum structure where node have value where total order define value left subtree contain only value less than parent node vice versa right subtree,What is a binary search tree?,n-1,The height of the tree (or log of the number of elements in the tree).
1,1.8400276494361532,-0.09602661248740152,5.0,  where value node n greater than value node left subtree less than node right subtree,What is a binary search tree?,log(n),The height of the tree (or log of the number of elements in the tree).
2,2.3669663481153385,-0.6886091105881138,5.0,  where value node greater than value node left subtree less than value node right subtree,What is a binary search tree?,O(nlog(n)),The height of the tree (or log of the number of elements in the tree).
3,1.1434685173873174,1.8410225275699952,5.0,  where key node greater than key node left subtree less than key node right subtree,What is a binary search tree?,nLog(n),The height of the tree (or log of the number of elements in the tree).
4,-0.9979847221063676,-1.7131680241120357,5.0,  split base value very easy compare desire value root if root greater than left side if less than right side do same thing recursively,What is a binary search tree?,logn,The height of the tree (or log of the number of elements in the tree).
5,0.6104751918463543,2.537971963072793,4.0,  where node have at most two node node left less than root node right greater than root,What is a binary search tree?,"at the minimum log(n)/log(2), at the maximum N searches, where N is the number of nodes.",The height of the tree (or log of the number of elements in the tree).
6,0.9648791987025783,-0.22194799302428528,5.0,  special have rule that subtree right smaller than node value subtree left large than node value,What is a binary search tree?,O(n),The height of the tree (or log of the number of elements in the tree).
7,-3.090329407736277,-0.6453734728532691,3.0,  similar have been implemented organize datum specific way later searching,What is a binary search tree?,It takes at most 3 comparisons to find and element in a binary search tree,The height of the tree (or log of the number of elements in the tree).
8,5.6735961461809925,-2.1748741282527844,5.0,  where node have value total order define value left subtree node contain only value less than node value right subtree node contain only value greater than equal node value,What is a binary search tree?,log (n)   where n equals the number of nodes.,The height of the tree (or log of the number of elements in the tree).
9,-3.0863387806363565,-0.7517832673583426,2.0,  datum organize specific arangment,What is a binary search tree?,it takes as many comparisons as the number of levels of the binary search tree. it only compares one number at each level,The height of the tree (or log of the number of elements in the tree).
10,-1.478208703369289,0.661568256973234,4.0,  have condition that node have maximum two children where input datum compare datum starting root if value smaller than root traverse left if large traverse right become leaf,What is a binary search tree?,At most it takes one less comparisons than the tree's height. In big-O notation it takes O(log n) comparisons if the tree is balanced.,The height of the tree (or log of the number of elements in the tree).
11,-2.693559019006097,-0.5162285562317627,4.0,  datas order left right,What is a binary search tree?,O(log n),The height of the tree (or log of the number of elements in the tree).
12,-2.541839706043334,-0.025081026542766637,3.0,  set that easily searched number base location compare previous node,What is a binary search tree?,log n comparisons,The height of the tree (or log of the number of elements in the tree).
13,-0.6385375054817859,0.9908919605711205,5.0,  where children ordered that right side greater than current node left less than equal current node,What is a binary search tree?,(n^k)-1   where k is the height of the tree,The height of the tree (or log of the number of elements in the tree).
14,1.776203421595709,-1.1799141326888205,5.0,  where value node greater than value node left subtree less than value right subtree,What is a binary search tree?,"it takes h comparisons, where h is the height of the tree",The height of the tree (or log of the number of elements in the tree).
15,-1.843682373735685,0.3326495706860751,1.0,  finite set node empty consit root two disjoint call left right subtree,What is a binary search tree?,2 way key comparison,The height of the tree (or log of the number of elements in the tree).
16,6.607051893700644,0.9334228695953087,5.0,  similar key nonempty left subtree right subtree smaller large than key root subtree value node left subtree node less than node value value node right subtree node greater than node value,What is a binary search tree?,"The name of the class file, the parameters it must take to perform its function.  Also a brief description of what the class does.",Function members and data members.
17,-1.0417930132569557,1.7360866108995867,5.0,  set number arrange link node contain two pointer other element node left parent smaller node right large recursive implementation implies that if traverse order output sorted,What is a binary search tree?,"access specifiers and functions, oftentimes a constructor.",Function members and data members.
18,0.15397179283524967,-0.5062621515842584,5.0,  special arrange that left child node contain value less than parent right child node contain value greater parent,What is a binary search tree?,"The elements typically included in a class definition are the function prototypes, usually declared public, and the data members used in the class, which are usually declared private.",Function members and data members.
19,-2.0284424663170486,0.19220719380478588,5.0,  special organization datum where left child element less than right child large than,What is a binary search tree?,"Class is user defined.  It contains members, data and functions.  The keyword class is used and includes brackets ({})",Function members and data members.
20,-0.4063488867864902,-0.6748785750229106,5.0,  smaller value locate left parent node large value locate right parent node,What is a binary search tree?,Member functions and data members.,Function members and data members.
21,-2.192768402911513,1.0252267459939246,1.0,  special node have at most two children labeled left child right child,What is a binary search tree?,the functions and variables used when the object is defined for the class.,Function members and data members.
22,2.4935676556161512,2.1505347507586055,5.0,  where node have unique key left child node have only value less than node right child node have higher value than node,What is a binary search tree?,"Data members, functions and function definitions, variables.",Function members and data members.
23,-3.3076046423460603,-1.1493387780876914,2.0,  fundamental datum structure construct more abstract datas structure as set multisets associative arrays,What is a binary search tree?,return type and input parameters,Function members and data members.
0,1.315066583589047,0.2874119242831909,5.0,  node first visit left sub if there then visit parent node then right sub if there,What is the inorder traversal of a binary tree?,Constructor Data members Methods,Function members and data members.
1,-1.1493530862567571,0.9076593785813633,2.0,  visit node order according datum value,What is the inorder traversal of a binary tree?,"Function members and member attributes, or in other words, the class variables and functions.",Function members and data members.
2,-1.176067595332956,0.9473797168843742,2.0,  traverses let visit node order according datum value,What is the inorder traversal of a binary tree?,"The elements that are included in a class definition is the access-modifier, data types, variables, and function signatures.",Function members and data members.
3,-1.13454827625515,0.8836134703560662,3.0,  visit node search search key order,What is the inorder traversal of a binary tree?,The variables and function prototypes.,Function members and data members.
4,-0.8670732004103001,-0.6361315769489796,5.0,  left side root right side tree,What is the inorder traversal of a binary tree?,public and private variables and initiations of functions included in the class.,Function members and data members.
5,-0.5456327558682161,-1.3483650222302943,5.0,  printing order least greatest done going as far left as possible printing parent then right then move tree,What is the inorder traversal of a binary tree?,The return value and the accepted value.,Function members and data members.
6,-0.8267730642859507,-0.48438012700679806,5.0,  order go left root right,What is the inorder traversal of a binary tree?,"A class definition typically includes the class name, the classes constructor(s), and any extra functions and class variables.",Function members and data members.
7,-0.36125529405464785,-1.2448797519284762,4.0,  retrieve start furthest left hand leaf check parent right side sibling then goes level repeat get root,What is the inorder traversal of a binary tree?,"Parameters and their type, Class name, and return type, and the code to be executed in the class.",Function members and data members.
8,-0.8207881528743561,-0.18807621175984715,5.0,  traverse left subtree visit root traverse right subtree,What is the inorder traversal of a binary tree?,"data members, class variables, and functions",Function members and data members.
9,-1.7606235832518944,0.13346706564239885,0.0,  postorder,What is the inorder traversal of a binary tree?,"Constructor, functions, and variables native to the class.",Function members and data members.
10,-0.06022941692310301,-0.9499999650858474,0.0,  order start root then does right child then left child recursively,What is the inorder traversal of a binary tree?,functions and data members,Function members and data members.
11,-1.1023779811018108,0.39438419352340104,5.0,  left child gt parent gt right child,What is the inorder traversal of a binary tree?,data members and function definitions,Function members and data members.
12,-1.8667856892449812,0.07034410808482247,1.0,  goes lowest highest inside tree,What is the inorder traversal of a binary tree?,member functions and data members,Function members and data members.
13,1.4634290558562673,-0.07594086361780784,3.0,  starting displaying node furthest right then node then node right recursive order,What is the inorder traversal of a binary tree?,"constructor, and function definitions.",Function members and data members.
14,-1.1024610994507706,0.03572009991581847,3.0,  travel left right,What is the inorder traversal of a binary tree?,class name data of class definition of functions and methods,Function members and data members.
15,-2.0880982756107627,0.14676466687498543,5.0,  void ptnode ptr if ptr ptr gt left cout lt lt ptr gt data ptr gt right,What is the inorder traversal of a binary tree?,"A class definition includes the definitions of the class' constructor(s) and any public or private functions. Of course, it also #includes the class header and any necessary C libraries",Function members and data members.
16,-0.4206642543442864,-1.2993429809432067,5.0,  root middle left subtree traverse first then root finally right subtree,What is the inorder traversal of a binary tree?,"Class name, {}, semicoln at the end of the defination, private and bublic followed by "": """,Function members and data members.
17,0.7332966520207806,0.32493174572477584,5.0,  visit left branch first then parent node then right branch recursively,What is the inorder traversal of a binary tree?,"a constructor, private and public variables, and function prototypes",Function members and data members.
18,5.113572799037374,4.623937302366748,5.0,  visit left branch node way deepest left most leaf visiting node visiting entire left branch node visit node right branch following same pattern left child node right child,What is the inorder traversal of a binary tree?,"Data variables and Functions, Data members",Function members and data members.
19,-1.1072937042046898,0.007898399068188,5.0,  left middle right,What is the inorder traversal of a binary tree?,class definitions include the name of the class and type of parameters,Function members and data members.
20,1.0995444616797982,-0.26166060199411734,5.0,  traverse node left then visit root then traverse node right,What is the inorder traversal of a binary tree?,"class variables, class function prototypes",Function members and data members.
21,5.887399345116805,-3.9191861415933835,5.0,  go furthest down left most node then root then right if left right exist then return one node previous do same reached root then go furthest down left most node right side root continue processes,What is the inorder traversal of a binary tree?,input  & return type elements,Function members and data members.
22,0.4437530396791656,0.7495524103380723,4.0,  mean that traverse one subtree node then look node traversing other subtree node,What is the inorder traversal of a binary tree?,Public and private specifiers.,Private and public.
23,0.33396349249139534,0.8948987614645434,0.0,  level order method level visited successively starting level zero root node node visited left right level push pop method,What is the inorder traversal of a binary tree?,"Public, Private, Restricted",Private and public.
0,0.5760547179875906,1.3526383434229345,5.0,  runtime order log n where number node tree,How many comparisons does it take to find an element in a binary search tree?,The access specifiers are public and private.,Private and public.
1,-0.24542587496881857,0.25411753837254586,5.0,  size n log n specified element,How many comparisons does it take to find an element in a binary search tree?,public private protected,Private and public.
2,-0.05560228636807071,-0.6347374974302538,0.0,  n 1 2 algorithm compare element,How many comparisons does it take to find an element in a binary search tree?,Public or Private.,Private and public.
3,-0.6330638484459293,-0.5216837242971304,5.0,  most equivalent height tree,How many comparisons does it take to find an element in a binary search tree?,public: the function or variable can be used outside the class private: the function or variable can only be used with the class,Private and public.
4,-0.19304653160049284,0.24473565490222185,5.0,  log n,How many comparisons does it take to find an element in a binary search tree?,Public and Private,Private and public.
5,-0.19304653160049273,0.24473565490222174,5.0,  o log n,How many comparisons does it take to find an element in a binary search tree?,public private and protected,Private and public.
6,0.26690639403920347,-0.8587896768124634,3.0,  depend half level have,How many comparisons does it take to find an element in a binary search tree?,Public Private,Private and public.
7,-0.3576600258651984,0.3172569940110311,5.0,  o log n balanced tree,How many comparisons does it take to find an element in a binary search tree?,"Private, public, protected",Private and public.
8,-0.2529575374704383,-0.42060782230281607,2.0, 1,How many comparisons does it take to find an element in a binary search tree?,The access-specifiers that can be used in a C++ class definition is private and public.,Private and public.
9,-0.19304653160049268,0.24473565490222174,5.0,  log n,How many comparisons does it take to find an element in a binary search tree?,public and private.,Private and public.
10,-0.29152351168170276,-0.493112087035978,0.0,  o nlog n,How many comparisons does it take to find an element in a binary search tree?,"static, long, unsigned",Private and public.
11,-0.29152351168170276,-0.493112087035978,0.0,  nlog n,How many comparisons does it take to find an element in a binary search tree?,"Private, Public, Protected, or Friend.",Private and public.
12,-0.27087469708842904,-0.4539833245605596,5.0,  logn,How many comparisons does it take to find an element in a binary search tree?,"A C++ class definition may include access-specifiers public, private, and static.",Private and public.
13,0.8409974081852596,2.285207730159083,4.0,  minimum log n log 2 maximum searches where number node,How many comparisons does it take to find an element in a binary search tree?,"local, global, local-variable, function specific",Private and public.
14,-0.2529575374704383,-0.42060782230281607,2.0, o n,How many comparisons does it take to find an element in a binary search tree?,"public, private",Private and public.
15,-0.5022280940036974,-0.4803977278842945,0.0,  most three tree,How many comparisons does it take to find an element in a binary search tree?,"Public, protected, and private.",Private and public.
16,0.657705992430368,1.2044034008862563,5.0,  log n where equal number node,How many comparisons does it take to find an element in a binary search tree?,"private, public",Private and public.
17,3.3958833238398927,-1.2625593950922978,5.0,  as as number level only compare one number level,How many comparisons does it take to find an element in a binary search tree?,public - can be accessed by any of the program  private - can only be accessed by the class functions themselves and no outside functions or calls,Private and public.
18,-0.4021736219135662,0.15373775609314555,5.0,  most one less than height big o notation o log n if balanced,How many comparisons does it take to find an element in a binary search tree?,"public , private, protected",Private and public.
19,-0.19304653160049268,0.24473565490222174,5.0,  o log n,How many comparisons does it take to find an element in a binary search tree?,public and private,Private and public.
20,-0.23256499880277764,0.2186840887883095,5.0,  log comparison,How many comparisons does it take to find an element in a binary search tree?,"public, private, protected",Private and public.
21,-0.40596209354610063,-0.07617610532146742,0.0,  n^k 1 where height tree,How many comparisons does it take to find an element in a binary search tree?,"functions and data members can be given access-specifications of public, private, and friend. public access is given to any functions or members not given specific access rights.",Private and public.
22,-0.40596209354610063,-0.07617610532146742,5.0,  where height tree,How many comparisons does it take to find an element in a binary search tree?,data member or data functions are access specifiers,Private and public.
23,-0.36488197722736665,-0.5730450959446617,0.0,  two way key comparison,How many comparisons does it take to find an element in a binary search tree?,public or private,Private and public.
0,0.7862676504361827,-0.13072105423177066,1.5,  name file parameter must take perform function brief description does,What are the elements typically included in a class definition?,public and private,Private and public.
1,0.11538333430982889,0.5286613046497481,3.0,  accesses specifier function oftentimes constructor,What are the elements typically included in a class definition?,public and private,Private and public.
2,-0.7807402156705985,0.6205377730304865,5.0,  function prototype declare public datas member declare private,What are the elements typically included in a class definition?,"public - can be accessed from outside the class private - accessible only from inside the class, not inherited protected - accessible only from inside the class, inherited",Private and public.
3,-0.8489819412252807,-0.9079002480617849,2.5,  user define contain member datum function keyword bracket,What are the elements typically included in a class definition?,public private protected,Private and public.
4,-1.2489328648178888,-1.1391351915460948,5.0,  member function datum member,What are the elements typically included in a class definition?,ie. GradeBook myGradeBook();  call upon the class and then give it a name like shown,By using constructors.
5,-0.033687374839915074,0.5337784969828596,5.0,  function variable when object define classes,What are the elements typically included in a class definition?,They are initialized as a named instance of the template formed by the class. This named instance can then be modified to be different from the class that it was created from.,By using constructors.
6,-1.202407311812316,0.14069370918890306,5.0,  datas member function function variable,What are the elements typically included in a class definition?,not answered,By using constructors.
7,1.4868850328944427,-0.7394060942139177,1.5,  return type input parameter,What are the elements typically included in a class definition?,Objects are initialized by a value given.  When an object is defined for a certain task.,By using constructors.
8,-0.048459827929393684,-0.3152271426967236,5.0,  constructor data member method,What are the elements typically included in a class definition?,"They are initialized with a "" . "" (dot) between the constructor and the object being created.",By using constructors.
9,-1.9148870563522242,-0.448845468463932,5.0,  function member member attribute other word variable function,What are the elements typically included in a class definition?,objectname classname();  to call a function from the class:  objectname.funciton();,By using constructors.
10,0.09941687834588202,-0.13757497196061422,4.0,  accesses modifier datum type variable function signature,What are the elements typically included in a class definition?,"If the object refers to a class, the constructor(s) will initialize the objects based on return type and parameters passed. Compiler will auto-create one if one is not provided.",By using constructors.
11,-0.12490456428408984,0.5779483635071208,5.0,  variable function prototype,What are the elements typically included in a class definition?,classname objectname(input parameters);,By using constructors.
12,-0.027236885208712903,1.1858516326623691,4.5,  public private variable initiation function classes,What are the elements typically included in a class definition?,When the class is called by the Constructor,By using constructors.
13,0.9791289715775787,-0.3827145133698207,1.5,  return value accepted value,What are the elements typically included in a class definition?,"Constructors; default when not provided by user, or programmer specified constructors.",By using constructors.
14,0.17076461125462278,0.725055970030417,5.0,  name constructor s extra function variable,What are the elements typically included in a class definition?,Objects are usually initialized at the beginning of the program and are initialized usually in the main function. They are initialized after the class's name.,By using constructors.
15,2.2362782325109767,-0.9532440020652929,2.0,  parameter type name return type code execute classes,What are the elements typically included in a class definition?,"&lt;variable type&gt; &lt;variable name&gt;; or, if you want to initialize a variable to a certain value, &lt;variable type&gt; &lt;variable name&gt; = &lt;value&gt;;",By using constructors.
16,-0.6898658764875896,-0.14016166728131246,5.0,  data member variable function,What are the elements typically included in a class definition?,"variables are set to a given value, or 0 if none is given.",By using constructors.
17,0.016290970997535584,0.8740489714152034,5.0,  constructor function variable native classes,What are the elements typically included in a class definition?,"When the object is initialized, its constructor is called (whether one is provided or c++ assigns a default constructor).",By using constructors.
18,-0.6751173845742718,-0.6592716920716882,5.0,  function datum member,What are the elements typically included in a class definition?,"Objects are initialized essentially as copies of the corresponding classes, complete with their own separate variables.",By using constructors.
19,-0.7006755832641945,-0.674898256132171,5.0,  datum member function definition,What are the elements typically included in a class definition?,"If you had a class Gradebook, you would initialize it in your main function by use of a constructor in the Gradebook class.  If no constructor is specified or found, c++ will use a default one with no parameters.  Gradebook myGradebook;  In this bit of code, the class Gradebook has been initialized as object myGradebook.",By using constructors.
20,-1.2489328648178888,-1.1391351915460945,5.0,  member function datum member,What are the elements typically included in a class definition?,objects are initialized by stating the classname first then assigning a name to the object. Within the object's ( ) is a place where it can be initialized.,By using constructors.
21,0.07171913339409913,0.4231344037949208,3.5,  constructor function definition,What are the elements typically included in a class definition?,They are initialized with a constructor.,By using constructors.
22,0.30222525299905456,0.0031898705228316964,5.0,  name data function method,What are the elements typically included in a class definition?,"The value is specified after declaration,  It can initialized anywhere between the declaration and the corresponding }.",By using constructors.
23,0.08311624971849875,1.5373854361124695,3.0,  constructor s public private function of course # header necessary libraries,What are the elements typically included in a class definition?,"with the default constructor for that object in its class.  if no constructor is specified, it uses the default system constructor.",By using constructors.
24,0.9761386628763699,0.2687265371944807,2.5,  name semicoln end defination private bublic followed :,What are the elements typically included in a class definition?,initialized using the same name as the class,By using constructors.
25,-0.1452426848625618,1.5285181122775804,5.0,  constructor private public variable function prototype,What are the elements typically included in a class definition?,they are initialized to a value dependent on the compiler,By using constructors.
26,-0.3491533084476911,-0.3407530058349116,5.0,  datas variable functions data member,What are the elements typically included in a class definition?,memory is allocated in accordance with their type and initialization input.,By using constructors.
27,1.3669069045799125,-0.5240462626249831,1.5,  name type parameter,What are the elements typically included in a class definition?,Objects are assigned a space in memory when they are created. the name given to the object points to the memory address where the objects data resides.,By using constructors.
28,0.047743306468210185,0.31849890692966004,5.0,  variables function prototype,What are the elements typically included in a class definition?,using constructor,By using constructors.
29,1.3009605522314265,-0.6329947261979345,1.5,  input return type element,What are the elements typically included in a class definition?,by giving them a value,By using constructors.
0,-0.288252994846946,-0.25629320768806646,5.0,  public private specifier,What are the access-specifiers that can be used in a C++ class definition?,"By declaring the class first, the name of the variable, and then any variables that need to be put in the constructor.  Ex. Class myClass(x, y)",By using constructors.
1,-0.3207221639392104,-0.23040032304905556,4.5,  public private restricted,What are the access-specifiers that can be used in a C++ class definition?,"objects are initialized by giving the object a type, name, and initial value",By using constructors.
2,-0.308264659352891,-0.21626216842818624,5.0,  public private,What are the access-specifiers that can be used in a C++ class definition?,they are initialized to 0,By using constructors.
3,-0.4330567260394435,-0.06451615408864331,5.0,  public private protected,What are the access-specifiers that can be used in a C++ class definition?,"obj. are initialized by the variables that call them, when they are created within a class.   e.i. classname objectname etc. ",By using constructors.
4,-0.30826465935289166,-0.21626216842818718,5.0,  public private,What are the access-specifiers that can be used in a C++ class definition?,"Name of the function, parameters it must receive in order to perform and a return type.","The name of the function and the list of parameters, including their types."
5,1.2854843403296479,0.969100186173105,5.0,  public : function variable private : function variable only classes,What are the access-specifiers that can be used in a C++ class definition?,a function signature is the elements that make it unique such as the variables it calls for and also I suppose this includes the program it is in.,"The name of the function and the list of parameters, including their types."
6,-0.30826465935289166,-0.2162621684281868,5.0,  public private,What are the access-specifiers that can be used in a C++ class definition?,"A function signature is the return type of a function, its name, and the number and type of its parameters.","The name of the function and the list of parameters, including their types."
7,-0.43305672603944356,-0.06451615408864306,5.0,  public private protected,What are the access-specifiers that can be used in a C++ class definition?,function prototype that contains functions and data members.,"The name of the function and the list of parameters, including their types."
8,-0.30826465935289166,-0.21626216842818713,5.0,  public private,What are the access-specifiers that can be used in a C++ class definition?,A function signature is a declaration of the function that includes the parameter types and the number of parameters.,"The name of the function and the list of parameters, including their types."
9,-0.43305672603944356,-0.06451615408864306,5.0,  private public protected,What are the access-specifiers that can be used in a C++ class definition?,the declaration of the function.,"The name of the function and the list of parameters, including their types."
10,-0.30826465935289166,-0.21626216842818713,5.0,  private public,What are the access-specifiers that can be used in a C++ class definition?,"Includes the name, accepted parameters, and return type.","The name of the function and the list of parameters, including their types."
11,-0.30826465935289166,-0.21626216842818713,5.0,  public private,What are the access-specifiers that can be used in a C++ class definition?,its return type and its input parameters,"The name of the function and the list of parameters, including their types."
12,-0.4665462962822159,-0.3036076253570458,0.0,  static long unsigned,What are the access-specifiers that can be used in a C++ class definition?,Contains the function name and its paramaters.  The return type is not included,"The name of the function and the list of parameters, including their types."
13,-0.27855523744687644,-0.14781575082562481,5.0,  private public protected friend,What are the access-specifiers that can be used in a C++ class definition?,"Return type, function name, and the parameter types","The name of the function and the list of parameters, including their types."
14,-0.3538768740124432,-0.2677530690247777,4.0,  include public private static,What are the access-specifiers that can be used in a C++ class definition?,The function signature tells what the function parameters and includes all the function calls,"The name of the function and the list of parameters, including their types."
15,0.630462019682847,-0.027575690284079992,1.5,  local global local variable function specific,What are the access-specifiers that can be used in a C++ class definition?,"The function's name, as well as what it returns and what it accepts.","The name of the function and the list of parameters, including their types."
16,-0.30826465935289166,-0.21626216842818713,5.0,  public private,What are the access-specifiers that can be used in a C++ class definition?,the body of the function that holds all the actual code,"The name of the function and the list of parameters, including their types."
17,-0.43305672603944356,-0.06451615408864306,5.0,  public protected private,What are the access-specifiers that can be used in a C++ class definition?,A function signature is the return type and accepted pass value type it takes,"The name of the function and the list of parameters, including their types."
18,-0.30826465935289166,-0.21626216842818713,5.0,  private public,What are the access-specifiers that can be used in a C++ class definition?,A function signature specifies the name and input variables of a function.,"The name of the function and the list of parameters, including their types."
19,1.3657354783025986,1.8444998269443618,5.0,  public accessed program private only accessed function outside function call,What are the access-specifiers that can be used in a C++ class definition?,A function signature is the function's parameters and their type and the name of the function.  The return type is not a part of the function signature.,"The name of the function and the list of parameters, including their types."
20,-0.43305672603944356,-0.06451615408864306,5.0,  public private protected,What are the access-specifiers that can be used in a C++ class definition?,the name of the function and what it accepts/ returns,"The name of the function and the list of parameters, including their types."
21,-0.30826465935289166,-0.21626216842818713,5.0,  public private,What are the access-specifiers that can be used in a C++ class definition?,"the unique identifier of a function, which includes input variables along with the function name, but excludes the output type.","The name of the function and the list of parameters, including their types."
22,-0.43305672603944356,-0.06451615408864306,5.0,  public private protected,What are the access-specifiers that can be used in a C++ class definition?,"The order, number, and type of data items included inside the function parameters.","The name of the function and the list of parameters, including their types."
23,4.256242053444809,-1.2096636736622328,5.0,  function datum member give specification public private friend public give function member not give specific right,What are the access-specifiers that can be used in a C++ class definition?,"its the scope, type, and parameters of that function that give it it's properties and defines it against other functions.","The name of the function and the list of parameters, including their types."
24,0.8034592546480014,-0.39606663875552933,0.0,  data member datum function specifier,What are the access-specifiers that can be used in a C++ class definition?,"is the name of the fuction, return type, and parameters that are being used","The name of the function and the list of parameters, including their types."
25,-0.30826465935289166,-0.21626216842818713,5.0,  public private,What are the access-specifiers that can be used in a C++ class definition?,"a function signature should include the name of the function, parameters, and a body.","The name of the function and the list of parameters, including their types."
26,-0.30826465935289166,-0.21626216842818713,5.0,  public private,What are the access-specifiers that can be used in a C++ class definition?,the name of the function and the arguments passed to that function,"The name of the function and the list of parameters, including their types."
27,-0.30826465935289166,-0.21626216842818713,5.0,  public private,What are the access-specifiers that can be used in a C++ class definition?,"A function signature, used in a function's prototype, is the set of object types it take in as parameters, with or without names given for the objects.","The name of the function and the list of parameters, including their types."
28,0.09714341463059295,3.072335065287698,5.0,  public accessed private accessible only not inherited protected accessible only inherited,What are the access-specifiers that can be used in a C++ class definition?,function name and parameter are called function signature.,"The name of the function and the list of parameters, including their types."
29,-0.43305672603944356,-0.06451615408864306,5.0,  public private protected,What are the access-specifiers that can be used in a C++ class definition?,fuction name and parameters,"The name of the function and the list of parameters, including their types."
0,-0.3966375164589564,0.4242623194173047,0.0,  ie gradebook mygradebook call upon classes then give name like show,How are objects initialized when they are created?,"The parameters needed, the return type, and name of the function.","The name of the function and the list of parameters, including their types."
1,-0.19587961077599778,0.27229664304803697,3.0,  as name instance template formed classes name instance then modified different classes was create,How are objects initialized when they are created?,"the signature of a function includes the name of the function, the number and types of parameters, and the return type","The name of the function and the list of parameters, including their types."
2,-0.3993249330000046,-0.7173770901585113,0.0,  not answered,How are objects initialized when they are created?,"It is what uniquely separates overloaded functions. It includes the return type, and the parameter list of the function.","The name of the function and the list of parameters, including their types."
3,-0.07014587612279785,-0.8323222426502764,2.0,  value give define certain task,How are objects initialized when they are created?,"function sig is, is what is the class recognizes as the main function, or rather its specification ","The name of the function and the list of parameters, including their types."
4,-0.5154169471962253,-0.36183511826188336,0.0,  dot constructor being create,How are objects initialized when they are created?,A function that calls upon it self to solve a problem.  Each time it calls upon it self it splits up a problem into a simplier form until it reaches a 'base case' which is the most simplest form of the problem.,A function that calls itself.
5,-0.548518990634296,-0.3099100980369085,0.0,  objectname classname call function classes : objectname funciton,How are objects initialized when they are created?,A function that calls itself to perform an opperation such as a factorial recursive function.,A function that calls itself.
6,-0.2729552611876392,0.6617043309886976,5.0,  if refer class constructor s base return type parameter passed compiler auto one if not provide,How are objects initialized when they are created?,not answered,A function that calls itself.
7,-0.44082621343370165,-0.692768405179555,3.0,  classname objectname input parameter,How are objects initialized when they are created?,A base case that calls upon itself until the problem becomes smaller and terminates.,A function that calls itself.
8,-0.5896887157764583,0.06147679894668828,2.0,  classes called constructor,How are objects initialized when they are created?,It's a function that calls itself. It runs multiple times until the base case is reached.,A function that calls itself.
9,-0.7592963059333683,0.4144970297988148,5.0,  constructor default not provide user programmer specified constructor,How are objects initialized when they are created?,a function that calls itself untill it reaches a base case.,A function that calls itself.
10,-0.3155585889847137,-0.07266355376949245,1.0,  beginning program main function classes name,How are objects initialized when they are created?,"A function that calls itself. Each time it does, it must get smaller, and eventually MUST converge to a base case, otherwise you can start an infinite loop.",A function that calls itself.
11,8.91075189484822,0.9940924681905373,1.0,  lt variable type gt lt variable name gt if want variable certain value lt variable type gt lt variable name gt = lt value gt,How are objects initialized when they are created?,a function that calls itself until a base case is met,A function that calls itself.
12,0.4375620820262714,-0.49382368560465223,1.0,  variable set give value zero if none give,How are objects initialized when they are created?,A function that calls itself. With each function call the problem is diminished.,A function that calls itself.
13,-0.7186806391703455,0.25961867141148115,5.0,  constructor called whether provide c assign default constructor,How are objects initialized when they are created?,A function that calls itself to perform a certain task,A function that calls itself.
14,0.05945793621904437,-0.1282537890188113,2.0,  essentially as copies corresponding classes complete own separate variable,How are objects initialized when they are created?,A recursive function is a function that calls itself. Usually called the base case. If the base case is not correct it causes a infinite loop.,A function that calls itself.
15,-1.4266627599085728,6.235210527810242,5.0,  if have classes gradebook main function constructor gradebook classes if constructor specified found c default one parameter gradebook mygradebook bit code classes gradebook have been as mygradebook,How are objects initialized when they are created?,"A function that calls itself, in order to solve a problem.",A function that calls itself.
16,-0.20436648779666397,-0.8585593479348542,3.0,  stating classname first then assigning name place where initialize,How are objects initialized when they are created?,"a function that calls itself over and over until it finds the simplest form of solution, or the base case.",A function that calls itself.
17,-0.49534107914311426,-0.3460494500498536,5.0,  constructor,How are objects initialized when they are created?,"A recursive function is a function that calls itself repeatedly until a base case is achieved. The fundamental idea is to break one large problem into a series of smaller, similar problems.",A function that calls itself.
18,-0.2258303518906442,-0.6911723428191626,1.0,  value specified declaration anywhere declaration corresponding,How are objects initialized when they are created?,"A recursive function typically simplifies a problem by calling itself, until arriving at a base case, at which it recursively returns a solution.",A function that calls itself.
19,-0.9082916772049345,1.6726361491086776,4.0,  default constructor classes if constructor specified default system constructor,How are objects initialized when they are created?,"A recursive function is a function that breaks down a large problem into two or more smaller problems and calls itself to solve those smaller problems until a base case or terminating point is reached.  At the base case, a definite answer is called and the function no longer recurses, but unwinds itself back through function calls to determine the answer to the original large problem.",A function that calls itself.
20,-0.29586646707375003,-0.19768319337133752,1.0,  using same name as classes,How are objects initialized when they are created?,a function that calls itself into a loop with a base case for a loop exit.,A function that calls itself.
21,-0.17993378036544613,-0.7735003575020469,1.0,  value dependent compiler,How are objects initialized when they are created?,a function that calls itself until the base cases are met.,A function that calls itself.
22,-0.19700514215542608,-0.8227854229289598,1.0,  memory allocate accordance type initialization input,How are objects initialized when they are created?,A recursive function only knows how to solve base cases  A recursive function calls itself directly or indirectly until a base case is reached.,A function that calls itself.
23,-0.21437543140023796,-1.0169615574692152,1.0,  assigned space memory name give point memory addresses where datas reside,How are objects initialized when they are created?,a function that calls on itself and uses a base case to stop the recursion,A function that calls itself.
24,-0.5045650482583705,-0.3568131007554417,5.0,  using constructor,How are objects initialized when they are created?,"a function that calls itself, and which eaach calls get closer and close to the base case.",A function that calls itself.
25,-0.1719850549167065,-0.786633304174696,2.0,  giving value,How are objects initialized when they are created?,A function that divides and conquers a problem.  There is a base case that will eventually be reached.  The function calls itself over and over until the base case is satisfied.,A function that calls itself.
26,0.7491941834367135,0.2755817497987303,5.0,  declaring classes first name variable then variable need put constructor ex class myclass x y,How are objects initialized when they are created?,a function that calls itself in the definition code,A function that calls itself.
27,0.2289314935403088,-0.7752151586969798,1.0,  giving type name initial value,How are objects initialized when they are created?,A recursive function solves a problem by repeatedly calling itself. the initial problem is broken into successively smaller parts until a much simpler base case is reached. the solutions to each piece of the problem are then returned a step at a time.,A function that calls itself.
28,-0.3775343464007055,-0.7342559825457459,1.0,  zero,How are objects initialized when they are created?,"It invoke by itself again ana again, unless it reach bas case",A function that calls itself.
29,0.03878963511852641,-0.3027934875908255,1.0,  variable call classes e classname objectname etc,How are objects initialized when they are created?,"a function that solves a problem by dividing the problem into smaller problems, by calling its self again and again, until a base case is reached.",A function that calls itself.
0,-0.7676054913749812,-0.38008437423551106,5.0,  name parameter must receive order perform return type,What is a function signature?,"A function that calls itself over and over again till a base case is reached, then it returns back to the original function.",A function that calls itself.
1,1.571731812682692,0.5919293370337241,3.5,  element unique as variable call suppose include program,What is a function signature?,"a recursive function is a function that during execution, calls itself over and over until a base case is reached",A function that calls itself.
2,-1.5203177288787226,-0.16188125295840775,5.0,  return type name number type parameter,What is a function signature?,A function that calls itself. Usually used to split a problem into several smaller problems of the same type.,A function that calls itself.
3,1.1209316182179696,0.10253291514276316,1.0,  prototype contain datum member,What is a function signature?,function that calls it self till the base case is met,A function that calls itself.
4,-0.6554756776763373,1.6009374991483079,5.0,  declaration include parameter type number parameter,What is a function signature?,"Iteration, performers  a series of checks and loops.",Through iteration.
5,1.0728159058903255,0.23892898853390707,2.0,  declaration function,What is a function signature?,The alternative method is to use loops in the program instead of a function which calls itself.,Through iteration.
6,-0.7502640615927152,0.054796282922642096,5.0,  include name accepted parameter return type,What is a function signature?,An alternative to solving a problem using recursive functions is to solve the problem using iteration.,Through iteration.
7,-0.4442424951424278,0.05016510882730015,5.0,  return type input parameter,What is a function signature?,"Iteration, this would be more efficient and has repetition structure.",Through iteration.
8,-0.3786722892868913,-0.40012768900323803,5.0,  contain name paramater return type not include,What is a function signature?,One can use iteration or by using a simple while/for loop.,Through iteration.
9,-1.3645679846677592,-0.3974044888289402,5.0,  return type name parameter type,What is a function signature?,iteration,Through iteration.
10,0.6866691387130824,1.095361038507269,2.5,  tell parameter include call,What is a function signature?,"Iteration. A while loop or a for loop will be able to accomplish the same desired outcome... It may be faster than recursion, but could also be harder to understand.",Through iteration.
11,0.9062351521847364,-1.579637951454758,5.0,  name as well as return accept,What is a function signature?,you can also solve the problem iteratively,Through iteration.
12,1.180048978068163,0.13240114624263352,1.0,  body hold actual code,What is a function signature?,iterative,Through iteration.
13,-1.0370786368803264,-0.5629228179122022,3.0,  return type accepted passes value type take,What is a function signature?,Using iteration loops.,Through iteration.
14,1.0925043155106609,-0.31848974535125646,5.0,  specifies name input variable function,What is a function signature?,Another alternative way to solve a problem instead of using recursive functions is by using iteration.,Through iteration.
15,-1.538843461846126,-0.5574993212055906,5.0,  parameter type name return type not part signature,What is a function signature?,"A recursive function can often be solved using an iterative function, which runs faster, but is often more complicated.",Through iteration.
16,0.5062860328340794,-0.8976790263712779,5.0,  name accept return,What is a function signature?,iteration,Through iteration.
17,0.3112095695901268,0.1997786105332886,5.0,  unique identifier include input variable name exclude output type,What is a function signature?,Any recursive function can be solved using an iterative method.,Through iteration.
18,-0.33350341432965613,1.3862065104010526,4.5,  order number type datum item include parameter,What is a function signature?,"Many recursive solutions may also be solved with looping control statements, such as while, for, do-while, etc.",Through iteration.
19,-0.04619095978947817,0.6169612828851435,5.0,  scope type parameter give properties define other function,What is a function signature?,"Using an iterative function, which repeats a specified operation or set of operations until a terminating point or base case is reached.  ",Through iteration.
20,-0.6714720228487032,-0.43903615972670257,5.0,  name fuction return type parameter being,What is a function signature?,iteratively,Through iteration.
21,0.4810302318599954,0.5087251468913665,2.5,  include name parameter body,What is a function signature?,using an Iterative calls,Through iteration.
22,0.9748441780286334,-0.382631527553688,5.0,  name argument passed function,What is a function signature?,Iteration.,Through iteration.
23,-0.11670605869585757,-0.7543644409400059,5.0,  prototype set object type take as parameter name give object,What is a function signature?,iteration is the alternative way to solve a problem,Through iteration.
24,0.43653559431541084,-0.05254171372814739,5.0,  name parameter called signature,What is a function signature?,using an iterative solution instead,Through iteration.
25,0.4536609173272624,-0.038609914082802524,5.0,  fuction name parameter,What is a function signature?,"Using an iterative solution.  For, while, or do while loop.",Through iteration.
26,-0.5841547178107235,-0.3502169092498397,5.0,  parameter needed return type name function,What is a function signature?,the alternative way to solve a problem that could be solved using recursion is iteration.,Through iteration.
27,-1.564777416224796,0.3011735403109063,5.0,  include name number type parameter return type,What is a function signature?,"Any problem solved recursively could be solved with an iterative function. Iterative replacements for recursive functions may be more difficult to program, but often lead to more efficient solutions to a problem. ",Through iteration.
28,-0.5309165247544801,0.8080073545496408,4.5,  uniquely separate overloaded include return type parameter list function,What is a function signature?,by iteration,Through iteration.
29,1.5102854965768218,-0.41477742932758516,0.0,  sig classes recognize as main rather specification,What is a function signature?,"itteration, like a for loop, a while loop, or a do while loop",Through iteration.
0,2.4737231260998382,-1.5853459561609746,5.0,  call upon self solve problem time call upon self split problem simplier form reaches base case most simplest form problem,What is a recursive function?,Iteration by using loops,Through iteration.
1,-1.227368618322682,-0.864033492795391,5.0,  call perform opperation as factorial function,What is a recursive function?,iterative functions,Through iteration.
2,-1.2142200642398324,-0.8617781479638917,0.0,  not answered,What is a recursive function?,iteration,Through iteration.
3,0.33115693892311604,-0.11554156408707077,2.5,  base case call upon problem become smaller terminate,What is a recursive function?,"the alt, way is to use a functions parameter in a call ""to"" function. ",Through iteration.
4,-0.6151152478787051,0.4035358314082802,5.0,  call run multiple time base case reached,What is a recursive function?,The array that is declared static retains its modified elements so once it is called upon again the latest elements are modified again.  An array that is not declared static will keep its original elements.,The static arrays are intialized only once when the function is called.
5,-0.76582423503291,0.235402286953492,5.0,  call reaches base case,What is a recursive function?,A static array only has a specific size and it cannot grow. Also static arrays cannot be accessed outside the program which created it.,The static arrays are intialized only once when the function is called.
6,-0.6239387757293573,0.8289446961011306,5.0,  call time does must get smaller eventually must converge base case otherwise start infinite loop,What is a recursive function?,Arrays declared as static are not created and initialized when a function is called and destroyed when the function terminates.,The static arrays are intialized only once when the function is called.
7,-0.8298926314374275,0.3105072781891553,5.0,  call base case meet,What is a recursive function?,Static can be initialized and non-static cannot in C++.,The static arrays are intialized only once when the function is called.
8,-0.29089228917783455,-0.8724088114466023,5.0,  call call problem diminished,What is a recursive function?,An array declared static remains the same throughout the execution of the program.,The static arrays are intialized only once when the function is called.
9,-1.1795820606933904,-0.8226234813191762,5.0,  call perform certain task,What is a recursive function?,a static array will be called only once. once it has been declared the complier will ignore the static line if it comes to it again.,The static arrays are intialized only once when the function is called.
10,-0.5185433716753336,1.8594896421526146,5.0,  call called base case if base case not correct cause infinite loop,What is a recursive function?,"The static array will be available to the whole of the program, whereas an array that is not static is only available within the scope in which it is declared.   //pass-by-reference???",The static arrays are intialized only once when the function is called.
11,-0.15755932364479813,-1.0908114244611395,5.0,  call order solve problem,What is a recursive function?,a static array has a predetermined size and that size cannot be altered,The static arrays are intialized only once when the function is called.
12,-0.7029677535995521,0.18756643676043627,5.0,  call over find simplest form solution base case,What is a recursive function?,Arrays declared static can not be changed.  One not declared static can be altered.,The static arrays are intialized only once when the function is called.
13,1.496688301218016,-0.18152859067480526,5.0,  call repeatedly base case achieve fundamental idea break one large problem series smaller similar problem,What is a recursive function?,"an array that is declared as static will retain the values stored in it's elements between function calls, and will not reinitialize them to default values.",The static arrays are intialized only once when the function is called.
14,7.614570770324725e-05,-0.3654572591286749,5.0,  typically simplifies problem calling arriving base case recursively return solution,What is a recursive function?,An array that is declared static causes anything that is not initialized to be set to 0.,The static arrays are intialized only once when the function is called.
15,5.373697163705216,2.0194332185034276,5.0,  break large problem two more smaller problem call solve smaller problem base case terminating point reached base case definite answer called no longer recurse unwind back call determine answer original large problem,What is a recursive function?,A static array will have a null character at the end of the array.,The static arrays are intialized only once when the function is called.
16,-0.8978453654529142,0.5667368707756879,2.5,  call loop base case loop exit,What is a recursive function?,static arrays cannot be changed while normal arrays can be changed,The static arrays are intialized only once when the function is called.
17,-0.8298926314374275,0.3105072781891553,5.0,  call base case meet,What is a recursive function?,An array they is declared as static can be accessed outside of the method it was declared without passing it as an argument to other functions in the same class.,The static arrays are intialized only once when the function is called.
18,-0.1619225544608793,1.6601823216494154,5.0,  only know how solve base case call directly indirectly base case reached,What is a recursive function?,"A static array has class scope, allowing it to remain where other arrays might be recycled.",The static arrays are intialized only once when the function is called.
19,-0.8178668511817566,0.3032027538889514,5.0,  call base case stop recursion,What is a recursive function?,An array that is static does not change or uninitialize if called later unless explicitly acted upon.  It does not terminate or change across objects.  An automatic local array will be cleared and uninitialized if called later outside of it's specific scope.,The static arrays are intialized only once when the function is called.
20,-0.8153063048412694,0.5937091786597777,5.0,  call eaach call get close close base case,What is a recursive function?,"one declared as static is one that is already defined. The program knows the length and the array from the start, whereas non-static arrays are declared or assigned later.",The static arrays are intialized only once when the function is called.
21,0.39945726959493244,1.5533149879920451,5.0,  that divide conquer problem base case eventually reached call over base case satisfied,What is a recursive function?,"a non static array must reinitialize itself every function call, while a static array will only initialize itself once, unless otherwise forced.",The static arrays are intialized only once when the function is called.
22,-1.1409149271980972,-0.759816264100992,5.0,  call definition code,What is a recursive function?,A static array retains any modified values after a function call. Automatic arrays reset to their initial values when the function ends.,The static arrays are intialized only once when the function is called.
23,2.655917222214245,-1.3522298531427626,5.0,  solve problem repeatedly calling initial problem broken successively smaller part much simple base case reached solution piece problem then returned step time,What is a recursive function?,"a static array is one that keeps its values and is not initialized every time a class function is called, it's data is not lost at function end.",The static arrays are intialized only once when the function is called.
24,-1.0388413971740427,-0.7256731953641968,4.0,  invoke again ana again unless reach bas case,What is a recursive function?,an array that is declared as static can only be used in the function that its being called in. Its a constant array. Static is another way of say const.,The static arrays are intialized only once when the function is called.
25,2.2937369749001175,-1.1370998752139285,5.0,  solve problem dividing problem smaller problem calling self again again base case reached,What is a recursive function?,Values in an array that is not delcared as static will remain constant.  When an array is declared const values within the array can be manipulated.,The static arrays are intialized only once when the function is called.
26,-0.519879108982535,0.616021463626344,5.0,  call over again till base case reached then return back original function,What is a recursive function?,the data of a static array cannot be changed,The static arrays are intialized only once when the function is called.
27,-0.6956017302930128,0.6363327107292449,5.0,  that execution call over base case reached,What is a recursive function?,"Standard arrays terminate when the functions that call them finish. A static array is not removed from memory when it's parent function terminates, leaving it available for other functions (or new instances of the original function).",The static arrays are intialized only once when the function is called.
28,0.7681025438829265,-1.5466984525897467,5.0,  call split problem several smaller problem same type,What is a recursive function?,by defining static array it doese not lose scope in locala function. static array makes programm more scalable. non static array lose scope inside the local function.,The static arrays are intialized only once when the function is called.
29,-0.7485804437923507,0.19615941287020283,5.0,  call self till base case meet,What is a recursive function?,static arrays can be called from anywhere,The static arrays are intialized only once when the function is called.
0,-0.9001488869062086,0.18216186747223387,5.0,  iteration performer series check loop,What is the alternative way to solve a problem that could be solved through recursive functions?,A static array cannot be changed. A regular array can be changed when it is passed to a function or manually.,The static arrays are intialized only once when the function is called.
1,-0.3692160621135728,0.5222157895697236,5.0,  method loop program instead call,What is the alternative way to solve a problem that could be solved through recursive functions?,"a static array can be can be edited throughout the program, while a non-static array can only be edited within a given function",The static arrays are intialized only once when the function is called.
2,-0.06969068558259134,-1.2187836278810043,5.0,  solving using using iteration,What is the alternative way to solve a problem that could be solved through recursive functions?,"An array that is declared static is allocated when the program begins to run, and is not freed until the program exits, but has limited scope. A non-static array is allocated and freed every time that it comes in and out of scope.",The static arrays are intialized only once when the function is called.
3,0.20009227332864102,0.05720626070479688,5.0,  iteration more efficient have repetition structure,What is the alternative way to solve a problem that could be solved through recursive functions?,static has a predetermined size that cannot be passed while vis versa.,The static arrays are intialized only once when the function is called.
4,-0.7279626264455564,-0.24817850542879136,5.0,  iteration using simple loop,What is the alternative way to solve a problem that could be solved through recursive functions?,the type char[] has a  null ('\n' ) element at the very end.,The char[] will automatically add a null \0 character at the end of the string.
5,-0.24718627058408962,-0.3794660742044513,5.0,  iteration,What is the alternative way to solve a problem that could be solved through recursive functions?,a variable char is basically any non command key on the keyboard that you can press. A string is a collection of letters or numbers that is stored together to be used later. Comonly strings are used for words. Chars can be used for less but can have opperations performed on them in a useful way.,The char[] will automatically add a null \0 character at the end of the string.
6,-2.1883125324116657,1.5939406804894565,5.0,  iteration loop loop able accomplish same desire outcome faster than recursion harder understand,What is the alternative way to solve a problem that could be solved through recursive functions?,The programmer must provide the null terminating character in a string of characters using type char[] and must also ensure that the array is large enough to contain the input string of characters and the null terminating character.,The char[] will automatically add a null \0 character at the end of the string.
7,0.03715141043222018,-0.15685039654419167,5.0,  iteratively,What is the alternative way to solve a problem that could be solved through recursive functions?,String of characters are followed by a null statement.  type string is for example   string s;,The char[] will automatically add a null \0 character at the end of the string.
8,0.5065960761944556,0.10626030911271932,5.0,  iterative,What is the alternative way to solve a problem that could be solved through recursive functions?,String contains a word where as char can contain phrases or a string of characters.,The char[] will automatically add a null \0 character at the end of the string.
9,-0.6977034736743675,-0.23387014614541843,5.0,  using iteration loop,What is the alternative way to solve a problem that could be solved through recursive functions?,a string is a variable with a single entinty of letters combined into one while in a char[] each letter is assigned a memory value and each has its own variable assigned i.e. char[0] char[1].,The char[] will automatically add a null \0 character at the end of the string.
10,-0.05220331588546242,-1.196485010221553,5.0,  instead using using iteration,What is the alternative way to solve a problem that could be solved through recursive functions?,"A string contains a null character at the end of the string, which makes it easily possible to get the string length. A char array can have a virtually unlimited length, therefore, its size must be declared/limited.",The char[] will automatically add a null \0 character at the end of the string.
11,1.459524044598505,0.6126463990822492,5.0,  often using iterative run faster often more complicated,What is the alternative way to solve a problem that could be solved through recursive functions?,an array of characters stores a null character at the end,The char[] will automatically add a null \0 character at the end of the string.
12,-0.24718627058408962,-0.37946607420445083,5.0,  iteration,What is the alternative way to solve a problem that could be solved through recursive functions?,"When you read a string of characters, you also read in the white space.  When you read characters declared char you only read the characters, no white space.",The char[] will automatically add a null \0 character at the end of the string.
13,0.6066621818382729,-0.26333978996484214,5.0,  using iterative method,What is the alternative way to solve a problem that could be solved through recursive functions?,"Character arrays will terminate at any whitespace, including spaces. Strings terminate when they encounter the new line character.",The char[] will automatically add a null \0 character at the end of the string.
14,0.17891447429945206,0.2807747311683331,5.0,  many solution looping control statement as do etc,What is the alternative way to solve a problem that could be solved through recursive functions?,The difference is that a string that is declared a variable of type char[] is each char is included in the array versus the string of characters that is read into a variable.,The char[] will automatically add a null \0 character at the end of the string.
15,1.1907335916069774,-0.9029942087809104,5.0,  using iterative repeat specified operation set operation terminating point base case reached,What is the alternative way to solve a problem that could be solved through recursive functions?,"An array of strings reads the string literals, meaning anything within ""quotes"". A char array reads a string as each individual character.",The char[] will automatically add a null \0 character at the end of the string.
16,0.03715141043222018,-0.15685039654419164,5.0,  iteratively,What is the alternative way to solve a problem that could be solved through recursive functions?,character arrays can call on individual letters were a string array can only call words.,The char[] will automatically add a null \0 character at the end of the string.
17,0.6101052923172503,-0.27275675237747027,5.0,  using iterative call,What is the alternative way to solve a problem that could be solved through recursive functions?,The character array has an end of line character at the end of it.,The char[] will automatically add a null \0 character at the end of the string.
18,-0.24718627058408962,-0.37946607420445083,5.0,  iteration,What is the alternative way to solve a problem that could be solved through recursive functions?,"Type char[] may contain a null value as the last element, whereas type string will not.",The char[] will automatically add a null \0 character at the end of the string.
19,-0.13791059858186325,-0.26654661224361725,5.0,  iteration problem,What is the alternative way to solve a problem that could be solved through recursive functions?,The variable of type string has a terminating character \0 at the end of it.,The char[] will automatically add a null \0 character at the end of the string.
20,0.7724328565616819,-0.15774486263985332,5.0,  using iterative solution instead,What is the alternative way to solve a problem that could be solved through recursive functions?,the one that is type string has an extra string member. The /0 at the end.,The char[] will automatically add a null \0 character at the end of the string.
21,0.15630895030616923,0.5742695418737419,5.0,  using iterative solution do loop,What is the alternative way to solve a problem that could be solved through recursive functions?,"a string has variable size and function calls available, while an character array usually has a static size.",The char[] will automatically add a null \0 character at the end of the string.
22,-0.25870500882484126,-0.7132143241918587,5.0,  using recursion iteration,What is the alternative way to solve a problem that could be solved through recursive functions?,a string char[] adds a null value to the end of the string.,The char[] will automatically add a null \0 character at the end of the string.
23,2.7668211235680884,2.2251347877466716,5.0,  recursively iterative iterative replacement more difficult program often lead more efficient solution problem,What is the alternative way to solve a problem that could be solved through recursive functions?,"char array needs an end character signature and is made up of characters each separate from each other, a string is an object in itself, with a value that the user enters.",The char[] will automatically add a null \0 character at the end of the string.
24,-0.24718627058408962,-0.37946607420445083,5.0,  iteration,What is the alternative way to solve a problem that could be solved through recursive functions?,"the variable of type char[], each character is stored into a different memory address and can be accessed easly, where as in a string of character, its not easy to be able to access each character in the string.",The char[] will automatically add a null \0 character at the end of the string.
25,-1.798405615607361,1.8147806066392596,5.0,  itteration like loop loop do loop,What is the alternative way to solve a problem that could be solved through recursive functions?,"When the string is passed into the array char, individual characters are stored and can be manipulated.  Although when a word is stored into a string variable, it is stored as one word and not as individual characters.",The char[] will automatically add a null \0 character at the end of the string.
26,-0.6977034736743675,-0.23387014614541843,5.0,  iteration using loop,What is the alternative way to solve a problem that could be solved through recursive functions?,"a string variable can change in size and is passed to functions by value, whereas a type char[] cannot change in size and is passed to functions by reference only",The char[] will automatically add a null \0 character at the end of the string.
27,0.5320100792391859,0.10334443589598029,5.0,  iterative function,What is the alternative way to solve a problem that could be solved through recursive functions?,"A string type string acts as a single object, with individual char entities accessible only through specific string class functions. A char array is less robust, but allows direct access to specific char entities.",The char[] will automatically add a null \0 character at the end of the string.
28,-0.24718627058408962,-0.37946607420445083,5.0,  iteration,What is the alternative way to solve a problem that could be solved through recursive functions?,"In arrays strings are stored as a characters (char[]), each character of string will be stored in each memory location of the array, while string of characters is only one memory location.",The char[] will automatically add a null \0 character at the end of the string.
29,0.07938986790517133,-0.15392025962379038,2.5,  alt parameter call function,What is the alternative way to solve a problem that could be solved through recursive functions?,"an array of characters has one more element, its last element,the terminating element, or null, which doesnt exist in a variable of type string",The char[] will automatically add a null \0 character at the end of the string.
0,-0.5660890319774939,-0.035700601510915066,5.0,  retain modified element once called again latest element modified again keep original element,What is the difference between an array that is declared as static and one that is not?,A string of characters is a specific variable type that has no extra data at the end. A string of type char[] is all the characters and a null ('\0'),The char[] will automatically add a null \0 character at the end of the string.
1,-0.9156090645691749,-0.5918872992407763,2.0,  only have specific size grow accessed program create,What is the difference between an array that is declared as static and one that is not?,a string of characters will have a null character or value at the end of the string,The char[] will automatically add a null \0 character at the end of the string.
2,1.949964244791042,0.5040338814746667,5.0,  arrays create initialize when function called destroyed when function terminate,What is the difference between an array that is declared as static and one that is not?,"when the characters are put in a char array, there is also a null terminating character added to the end, '\0'",The char[] will automatically add a null \0 character at the end of the string.
3,-0.46143984341645206,-0.4087036751861898,1.0,  initialize non c,What is the difference between an array that is declared as static and one that is not?,"string of characters that is read into a variable of type string includes, ",The char[] will automatically add a null \0 character at the end of the string.
4,-0.6578779610656149,-0.5429044154780851,0.5,  remain same execution program,What is the difference between an array that is declared as static and one that is not?,"For example we have an array on n elements, the divide and conquer splits up the array into equal halves and repeats this process until each element is by itself","Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem."
5,-1.0889010167019189,0.1644123597923633,3.5,  called only once once have been complier ignore line if come again,What is the difference between an array that is declared as static and one that is not?,Divide and coquer means dividing a problem into 2+ problems which are solved and then merged  back together for a final solution to the whole problem.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem."
6,-0.6258835110196815,-0.524076347062888,3.5,  available whole program whereas only available scope passes reference,What is the difference between an array that is declared as static and one that is not?,The divide and conquer paradigm divides a problem into smaller and smaller portions that are easier to solve.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem."
7,-0.845303054219242,-0.6169948335960479,2.0,  have predetermine size size altered,What is the difference between an array that is declared as static and one that is not?,"Divide elements,recur then conquer, which works in merge sort and quicksort.","Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem."
8,-0.6181719712262553,0.04688990408150309,0.5,  arrays change altered,What is the difference between an array that is declared as static and one that is not?,"To divide and conquer, you divide the program in half once or multiple times to the extent that the program as a whole is easier to work in groups to solve the problem.","Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem."
9,0.805332137967209,-0.41346330376593676,5.0,  retain value store element function call reinitialize default value,What is the difference between an array that is declared as static and one that is not?,to divide one larger string/line of values and sepereate them into smallers lines to easily manipulate them and then replace them in the order in which they should be.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem."
10,-0.48943965609869483,-0.3812103771372272,1.0,  cause anything initialize set zero,What is the difference between an array that is declared as static and one that is not?,"Split the problem into smaller, more manageable parts, and proceed to address the smaller problems.","Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem."
11,-0.6125583851484842,-0.4848971748452587,2.5,  have null character end array,What is the difference between an array that is declared as static and one that is not?,dived and conquer is the breaking up of a large complex program into small easy to solve components.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem."
12,-0.7401175397084745,0.4309672781621217,0.5,  change normal change,What is the difference between an array that is declared as static and one that is not?,Dividing a larger problem into the smallest incident of the problem and solving the smallest incident.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem."
13,0.36820694597036113,-0.34572973372691135,3.0,  accessed method was passing argument other function same classes,What is the difference between an array that is declared as static and one that is not?,"Break up very large data structures into smaller sub-units, that are easier to manipulate.","Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem."
14,-0.6276941606618066,-0.46195681459516846,5.0,  have classes scope allowing remain where other recycle,What is the difference between an array that is declared as static and one that is not?,The divide-and-conquer technique is where it takes the sorting algorithm and breaks up the array into smaller elements of the array to tackle the problem and run the algorithm.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem."
15,-1.5031454623267444,5.356786152192474,5.0,  does change uninitialize if called later unless explicitly acted upon does terminate change object automatic local cleared uninitialize if called later outside specific scope,What is the difference between an array that is declared as static and one that is not?,"The divide-and-conquer paradigm divides the problem into two pieces and works on each piece separately, allowing for a faster approach to 2 separate smaller problems. ","Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem."
16,-0.8516367786859205,-0.30703667741011226,2.0,  already define program know length start whereas non assigned later,What is the difference between an array that is declared as static and one that is not?,"Take a problem and divide it into a smaller problem and solve that smaller problem, or divide it into a smaller problem and solve it, thus solving the whole problem in the process.","Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem."
17,0.3822305824800435,-0.25969614096062976,5.0,  non must reinitialize function call only initialize once unless otherwise force,What is the difference between an array that is declared as static and one that is not?,The idea is to split the problem into half and solve for the smaller split-problems.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem."
18,2.002015775091258,-0.0925730378570253,5.0,  retain modified value function call automatic reset initial value when function end,What is the difference between an array that is declared as static and one that is not?,"The divide and conquer paradigm, splits a large problem into simpler problems, at which point it solves the simpler problems and merges the simple solutions together to answer the large problem.","Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem."
19,1.3679070513319551,0.07688542851252003,5.0,  keep value initialize time classes function called datas lose function end,What is the difference between an array that is declared as static and one that is not?,"Divide-and-conquer refers to abstraction, the act of separating large, complex problems into smaller, easier problems that can be solved by a relatively simple algorithm.","Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem."
20,0.1737167118159184,0.04413633849007162,0.5,  only function that being called constant way say,What is the difference between an array that is declared as static and one that is not?,"It takes a large problem and splits it into two or more easier or faster solutions, and  makes for better readability. ","Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem."
21,0.11337729250518552,-0.4735746411254971,0.5,  value delcare remain constant when value manipulate,What is the difference between an array that is declared as static and one that is not?,it is the taking of a larger problem and splitting it into simpler smaller problems.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem."
22,-0.6288943204234091,0.048854962231374234,0.5,  datum change,What is the difference between an array that is declared as static and one that is not?,It divides the problem into singular units and works on the problem piece by piece until the problem is solved.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem."
23,4.794557548014632,0.7358030685220874,5.0,  standard terminate when function call finish remove memory when parent function terminate leaving available other function new instance original function,What is the difference between an array that is declared as static and one that is not?,"smaller parts are easier to compare than comparing the whole, so it divides the problem down in halves until it can easily compare, then works backwards putting it back together to give the solution.","Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem."
24,1.1565854381962835,0.14114285792248316,4.0,  defining doese lose scope locala function programm more scalable non lose scope local function,What is the difference between an array that is declared as static and one that is not?,"a divide-and-conquer paradigm. takes some data, divides it into two parts, and works on each part indiviually until the item is found.","Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem."
25,-0.5556991940537737,0.008038667395921425,3.0,  called anywhere,What is the difference between an array that is declared as static and one that is not?,"The idea of divide and conquer is to take a large problem, split it into n smaller problems, making the program easier to read and modify.","Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem."
26,0.3436132087398132,0.5882454056782785,0.5,  change regular change when passed function manually,What is the difference between an array that is declared as static and one that is not?,the divide and conquer paradigm is a recursive solution that keeps dividing the problem into halves until a base case is reached.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem."
27,0.07831576227470108,-0.5689163023636644,3.0,  edited program non only edited give function,What is the difference between an array that is declared as static and one that is not?,"dividing and conquering means breaking a problem into two smaller problems, solving both of those, and putting the two solutions together.","Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem."
28,-0.9634200725731031,-1.0735305999449405,5.0,  allocate when program begin run free program exit have limited scope non allocate free time come in out scope,What is the difference between an array that is declared as static and one that is not?,"Divide the big problem into small problem, solve small problem and join small solved elements of the problem. if there is two ore more elements in the array, divide the array into parts and compare the elements, after comperison, conquer the elements. If array have n element, first half have n/2 elements","Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem."
29,-0.7839416753021151,-0.5633443286485935,2.0,  have predetermine size passed vis versa,What is the difference between an array that is declared as static and one that is not?,"divide the array in half, sort each half, then sort them back in one array","Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem."
0,-1.0230280497045896,0.07813468979501141,5.0,  have null n element very end,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,You take a class and break down everything it is supposed to do into easily managed functions.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem."
1,0.6753891987859539,-1.23703220603224,0.0,  basically non command key keyboard press collection letter number store together later comonly word less have opperation performed useful way,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,"this is shown by the use of .cpp and header files.  by splitting the program up into smaller subsections of individual code, it becomes easier to write and keep up with as opposed to having all of your code in one file","Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem."
2,-1.1989014659985642,3.0944983708728113,5.0,  programmer must provide null terminating using must ensure that array large enough contain input null terminating character,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,"When a problem is too big, split it into smaller problems of the same type, and solve those, then from the solutions of the smaller problem, give the solution to the larger original problem.","Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem."
3,-0.49012576624910487,0.10591287340128142,5.0,  followed null statement example s,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,it is the separating of large program into smaller classes then until target is reached.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem."
4,0.5266366613545593,0.5736167688919606,0.0,  contain word where as contain phrase character,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,"It uses the divide and conqure technique recursively and then when merging back together it compares each element together in a sorted list, this is done by reversing the divide and conquer technique","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays."
5,-0.22585489352204569,-1.9710853802827097,0.0,  single entinty letter combine one letter assigned memory value have own assigned e char[0 char[1 ],What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,A merge sort works by removing all items to sepperate memory locations and merging them back together in order.,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays."
6,-1.4400266732666576,0.715962176706504,5.0,  contain null end easily possible get length array have virtually unlimited length therefore size must declare limited,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,"It divides the array into two halves, sorts each half, then merges the two halves together.","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays."
7,-0.10566779306498647,0.4505084521588579,5.0,  array store null end,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,"Divide into two sublists and then those sublists break into length 1, then merges the sublists sorted. ","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays."
8,0.5019059616720789,-0.19389999645893627,1.5,  when white space when declare only white space,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,"Merge sort uses the ""divide and conquer"" idea where it divides the array in half multiple times and then joins each element of the array back into one sorted array. This is one of the best sorting algorithms besides Quicksort.","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays."
9,0.3583883271131145,0.05051730726918043,1.5,  arrays terminate whitespace including space strings terminate when encounter new line character,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,divides the line in half coninuously until you get to only a single value then recombine the values to form a sorted line.,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays."
10,-0.18277531332870425,0.1038356604692995,0.0,  that declare include array variable,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,"Continually split array in half, sort each side of the halves, then put them back together once organized.","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays."
11,0.8714259911691233,0.6983771853400534,0.0,  array literal meaning anything quotes array as individual character,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,merge sort splits the array of elements into smaller arrays until the arrays reach size 1 and then the merge sort merges the smaller arrays into arrays of size 2 then it moves to the next step and merges the next arrays.,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays."
12,0.7508570985037856,-0.4224721821239528,0.0,  arrays call individual letter were array only call word,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,By divide and conquer.,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays."
13,-0.7956387551012658,-0.1821524813950262,4.5,  array have end line end,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,"Break a single array down into many arrays with individual elements, then sort the elements as you reconstruct them back into a single array.","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays."
14,-0.21393791032911189,0.4450435681796262,5.0,  contain null value as last element whereas not,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,"Merge sort breaks the array in half, and continues to do so until it has 2 elements to compare and sorts them, after doing so it ""merges"" back as it keeps on sorting the algorithm as it does so.","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays."
15,-0.7638412560993714,-0.12395697926597006,2.5,  have terminating 0 end,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,"Merge sort divides the problem in half, organizes each half, then brings the two halves together again.","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays."
16,-0.5808138701547704,-0.45822368329039986,2.5,  one have extra member 0 end,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,"Take an array and split it into two, then solve these simpler problems and merge the two answers in correct order.","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays."
17,-0.6439951216895012,-1.1979980612810581,2.5,  have size function call available array have static size,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,"A merge sort recursively divides the array into half until only one element remains, then it sorts the data on its way out of the recursive call by merging the cells.","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays."
18,-0.8159331148444344,-0.0001312343762932492,5.0,  add null value end string,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,"Merge sort recursively divides an array into two arrays until all arrays have 1 element, at which point it merges the 1 element arrays into larger sorted arrays, the final returned array being the sorted version of the initial array.","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays."
19,-0.4579897112025355,-0.26474406377202364,5.0,  array need end signature separate other object value user enter,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,Merge sort continuously breaks an array in half then sorts the arrays as it concatenates them back together into one sorted array.,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays."
20,1.0749539689581313,0.0013795923430817906,0.0,  store different memory addresses accessed easly where as not easy able access string,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,"It takes an array, splits itself in half, sorts the two halves (either by recursion or iteration) and compares them together giving a third array a full sorted list with both halves rejoined. ","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays."
21,4.42450887397241,1.2696302514852624,0.0,  when passed array individual store manipulate although when word store store as one word not as individual character,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,"it splits a large array into small arrays and recurs until the array is a size of 1, and then merges all of the arrays back together until the source array is completely sourted.","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays."
22,0.12668239783973922,-1.9943447166813286,0.0,  change size passed function value whereas not change size passed function reference only,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,Mergesort divides the array into smaller halves and then combines the sorted subarrays into one sorted array.,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays."
23,1.1367826282730045,-0.8844210764019387,1.5,  act as single object individual entities accessible only specific classes function array less robust direct accesses specific entities,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,"merge sort breaks the array down in halves until it is comparing two values, sorts those two values, then merges that back with the other broken down parts that it sorted, each level merging more sets together till you return back to your whole array in order.","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays."
24,1.9913439579480734,0.0539216395183923,0.0,  arrays store as store memory location array only one memory location,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,"Divides the data into twor separate arrays, sorts the two arrays and merges them back to back together recursively. ","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays."
25,-0.8757716711567697,1.0989403574828542,5.0,  array have one more element last element terminating element null does not exist string,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,"Take the initial array and split it into two, temporary, smaller arrays, sort the two smaller arrays, and merge them back into a single array.","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays."
26,-0.9258720019290408,-0.16648533932382856,5.0,  specific have extra datum end null 0,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,merge sort divides the data into halves until data of one element is reached and then merges each element together according to its placement in comparison to the rest of the data,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays."
27,-1.0058629484404937,-0.17810836645468694,5.0,  have null value end string,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,"merge sort uses the divide and conquer strategy, sorting an array in parts, then merging the sorted parts back together.","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays."
28,-0.47990501961819537,0.7986848010263929,5.0,  when put array null terminating added end 0,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,"Divide recursuivly big array into two arrays, sort two array and merge them togather recuruivly.","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays."
29,-0.21293372988984172,-0.26390792780018163,0.0,  include,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,"divides an array in half and sorts each half by calling its self, thus dividing each half again and again and sorting it until the array is sorted. then putting the elements back in the original array sorted.","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays."
0,0.2524283055358221,2.7352963691496064,3.0,  example have array element split array equal halves repeat processes element,Briefly describe the divide-and-conquer paradigm.,Merge sort takes an array and splits it in half and sends each half back to itself recursively and merges and sorts the two halves when it starts going back up.,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays."
1,0.8982072665578594,-1.3631109606191936,5.0,  coquer mean dividing problem 2 problem solve then merge back together final solution whole problem,Briefly describe the divide-and-conquer paradigm.,"merge sort splits an array into two halves and then sorts the two smaller arrays, and then merges them back together to form a sorted array","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays."
2,-0.5422602180838124,-0.4240871745972779,4.0,  problem smaller smaller portion easier solve,Briefly describe the divide-and-conquer paradigm.,"the merge sort continually divides the array (or set of containers) into halves, until it reaches the point where there is just one element left, then merges each of the sets of two sorted arrays (containers).","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays."
3,-1.032762370177802,1.3948047684648104,3.0,  element recur then work merge sort quicksort,Briefly describe the divide-and-conquer paradigm.,merge sort splits an array of elements into smaller and smaller array's till the value of 1 is reached.,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays."
4,-0.7860957543954094,0.2022386064668539,4.0,  program half once multiple time extent that program as whole easier work group solve problem,Briefly describe the divide-and-conquer paradigm.,A variable in memory that hold the address of another memory location to which it points too,The address of a location in memory.
5,-1.7193840029336747,0.5898338160470877,2.0,  one large string line value sepereate smaller line easily manipulate then replace order,Briefly describe the divide-and-conquer paradigm.,A pointer is a variable that contains the memory address of a given value.,The address of a location in memory.
6,0.203731594187794,-0.770922448381115,4.0,  split problem smaller more manageable part proceed address smaller problem,Briefly describe the divide-and-conquer paradigm.,A pointer is a variable that stores the address of another variable.,The address of a location in memory.
7,-1.149263231233293,0.7815163690947285,4.0,  dive breaking large complex program small easy solve component,Briefly describe the divide-and-conquer paradigm.,A pointer is a variable that holds a memory address or location of another variable.,The address of a location in memory.
8,-0.045771126732484485,-0.5536208456704353,4.0,  dividing large problem smallest incident problem solving smallest incident,Briefly describe the divide-and-conquer paradigm.,A data type that points to an address in memory which contains certain information. Used for pass-by-reference to save memory.,The address of a location in memory.
9,-1.5956576352810279,0.490289740671444,4.0,  break very large datas structure smaller sub unit easier manipulate,Briefly describe the divide-and-conquer paradigm.,a pointer points to a location in memory of a certain data type,The address of a location in memory.
10,0.23660693469097938,1.3974472437172334,4.0,  technique where take sorting algorithm break array smaller element array tackle problem run algorithm,Briefly describe the divide-and-conquer paradigm.,A pointer is a variable that points to the address location of another variable.  Represented by (*).,The address of a location in memory.
11,0.12703750472158545,-0.5738924867911532,4.0,  problem two piece work piece separately allowing faster approach two separate smaller problem,Briefly describe the divide-and-conquer paradigm.,A pointer is a variable that holds the address of a given variable (and of a given data type),The address of a location in memory.
12,2.5692910684974613,-3.2068844344062524,4.5,  take problem smaller problem solve that smaller problem smaller problem solve thus solving whole problem processes,Briefly describe the divide-and-conquer paradigm.,pointer is a programming data type whose value points to another value stored in computer memory by its address.,The address of a location in memory.
13,0.30370776905390323,-0.7554052008045735,4.0,  idea split problem half solve smaller split problem,Briefly describe the divide-and-conquer paradigm.,A data type that points to a specific memory address.,The address of a location in memory.
14,1.7988795209790789,-2.5419564651936652,5.0,  split large problem simple problem point solve simple problem merge simple solution together answer large problem,Briefly describe the divide-and-conquer paradigm.,Its like a variable except it only holds the address in memory of the variable not the physical information.,The address of a location in memory.
15,0.12253346028438887,-0.9910470783770884,4.0,  refer abstraction act separating large complex problem smaller easier problem solve relatively simple algorithm,Briefly describe the divide-and-conquer paradigm.,a pointer is a reference to a memory location.,The address of a location in memory.
16,-0.607355534559541,-0.012884263451244172,4.0,  take large problem split two more easier faster solution better readability,Briefly describe the divide-and-conquer paradigm.,A pointer is an alias to an object in memory.,The address of a location in memory.
17,0.00968957202243732,-0.794910977558898,4.0,  taking large problem splitting simple smaller problem,Briefly describe the divide-and-conquer paradigm.,"A pointer is a variable that contains a memory address for something that you can use, such as a value, array, or even a function.",The address of a location in memory.
18,0.7949732413917151,-1.062007990034221,4.0,  problem singular unit work problem piece piece problem solve,Briefly describe the divide-and-conquer paradigm.,its a data type with a memory address and a value,The address of a location in memory.
19,-0.6224937427014939,-0.035839370198524824,5.0,  smaller part easier compare than comparing whole problem halves easily compare then work backwards putting back together give solution,Briefly describe the divide-and-conquer paradigm.,a form of storing data that keeps the location in memory of an data type or object.,The address of a location in memory.
20,-1.3522359799810384,1.0745965714656678,4.0,  take datum two part work part indiviually item found,Briefly describe the divide-and-conquer paradigm.,it contains a object's memory address,The address of a location in memory.
21,-0.14055549996726552,-0.7785741497833428,4.0,  idea take large problem split smaller problem making program easier read modify,Briefly describe the divide-and-conquer paradigm.,variable that contains the memory address of a data object.,The address of a location in memory.
22,-0.7756890821172573,0.16268670306092323,4.0,  recursive solution keep dividing problem halves base case reached,Briefly describe the divide-and-conquer paradigm.,A pointer is an element that references a memory location.,The address of a location in memory.
23,0.23075880607398788,-0.8221166913282771,5.0,  dividing conquering mean breaking problem two smaller problem solving putting two solution together,Briefly describe the divide-and-conquer paradigm.,"an object that points to a specific place in memory, where a variable or value is stored.",The address of a location in memory.
24,7.188408721018175,4.337520411468167,5.0,  big problem small problem solve small problem join small solved element problem if two ore more element array array part compare element comperison element if array have element first half have n 2 element,Briefly describe the divide-and-conquer paradigm.,a variable that stores the address of a memory location,The address of a location in memory.
25,-1.006380622500922,1.956497414732621,3.0,  array half sort half then sort back one array,Briefly describe the divide-and-conquer paradigm.,"A pointer is a variable that points to an address in memory, which contains some data. The pointer does not contain or point to any data, only a memory address.",The address of a location in memory.
26,-1.622319052709098,0.9502217903107925,1.0,  take classes break everything suppose do easily manage function,Briefly describe the divide-and-conquer paradigm.,Pointer is a variable which have a memory address of a variable.,The address of a location in memory.
27,-2.029721322469622,0.8439640489171113,1.0,  show cpp header file splitting program smaller subsection individual code become easier write keep as oppose having code one file,Briefly describe the divide-and-conquer paradigm.,a pointer points to a location in memory where data is stored,The address of a location in memory.
28,1.871351793179806,-2.712827691446456,5.0,  when problem too big split smaller problem same type solve then solution smaller problem give solution large original problem,Briefly describe the divide-and-conquer paradigm.,a variable that holds the address of another variable and can access the contents of the variable.,The address of a location in memory.
29,-1.5796603823512263,0.48317437507459676,1.5,  separating large program smaller classes then target reached,Briefly describe the divide-and-conquer paradigm.,a pointer is a memory address that points to a data member,The address of a location in memory.
0,-2.2455764815770665,1.4219521792228214,5.0,  divide conqure technique recursively then when merging back together compare element together sorted list done reversing divide conquer technique,Briefly describe in one sentence how does merge sort work?,A data type that stores the memory address of another variable.,The address of a location in memory.
1,-1.9330965685503554,-0.5929623798844104,2.0,  removing item sepperate memory location merging back together order,Briefly describe in one sentence how does merge sort work?,its like a variable but only holds an address in meomrry not the physical address.,The address of a location in memory.
2,-1.0060486393541443,-0.9898639316807148,5.0,  divide array two halves half then two halves together,Briefly describe in one sentence how does merge sort work?,"Try several sets of data on an algorithm that includes worst case, best case, and random cases.  Also try and run the same program on a different computer with the same specs",Implement the algorithm and measure the physical running time.
3,-1.7984708756123993,-0.07182120061149451,5.0,  divide two sublist then sublist break length 1 then sublist sorted,Briefly describe in one sentence how does merge sort work?,not answered,Implement the algorithm and measure the physical running time.
4,0.9643519803661671,2.230670972742763,5.0,  divide conquer idea where divide array half multiple time then join element array back sorted array best sorting algorithm quicksort,Briefly describe in one sentence how does merge sort work?,time complexity using big O  logarthmic O(log n) linear O(n) exponential O(n^2) quadratic O(n^k) k&gt;=1 Polynomial O(a^n) n&gt;1,Implement the algorithm and measure the physical running time.
5,-1.9844611534476553,0.569725345616851,5.0,  divide line half coninuously get only single value then recombine value form sorted line,Briefly describe in one sentence how does merge sort work?,Using some sort of counting principle of the number of operations performed in an algorithm.,Implement the algorithm and measure the physical running time.
6,-0.9718298082875639,-0.6130617999319558,5.0,  continually split array half side halves then put back together once organize,Briefly describe in one sentence how does merge sort work?,Experimental means you would actually write a prototype of the algorithm and measure the time it takes to run given certain parameters.,Implement the algorithm and measure the physical running time.
7,3.157862267895712,-0.8350473415985976,5.0,  split array element smaller array arrays reach size then smaller array array size two then move next step next arrays,Briefly describe in one sentence how does merge sort work?,measuring the relationship of running an algorithm with different input sizes.,Implement the algorithm and measure the physical running time.
8,-1.8174106054947503,0.18257136000722404,1.5,  divide conquer,Briefly describe in one sentence how does merge sort work?,"Oposite of a theoretical assessment of the algorithm to determine runtime, but to run the code first to determine the the runtime.  This is not recommended because it is a limited test.  It does not include all possibilities of the data, nor the hardware used to process the data.",Implement the algorithm and measure the physical running time.
9,1.3621240556807006,0.7504409756484942,5.0,  break single array many array individual element then element as reconstruct back single array,Briefly describe in one sentence how does merge sort work?,not answered,Implement the algorithm and measure the physical running time.
10,-0.6337370196584188,0.27313334010593837,5.0,  break array half continue do have two element compare doing as keep sorting algorithm as,Briefly describe in one sentence how does merge sort work?,The experimental approach for measuring the running time is by using the Big O equation which tells you the running time.,Implement the algorithm and measure the physical running time.
11,-2.071104437890212,-0.16557431819564072,5.0,  divide problem half organize half then bring two halves together again,Briefly describe in one sentence how does merge sort work?,"You create and run  the algorithm multiple times, while measuring the amount of time it takes, you then average the results.",Implement the algorithm and measure the physical running time.
12,-0.5562428334997047,-1.8419161095393606,5.0,  take array split two then solve simple problem two answer correct order,Briefly describe in one sentence how does merge sort work?,keep a value of how many operations it takes and add to this value each time a function is called.,Implement the algorithm and measure the physical running time.
13,-1.125228058388275,1.1655002167113993,5.0,  recursively divide array half only element remain then datum way out recursive call merging cell,Briefly describe in one sentence how does merge sort work?,BIG-OH,Implement the algorithm and measure the physical running time.
14,4.590534646594766,1.835419504012594,5.0,  recursively divide array two array array have element point element array large sorted arrays final returned array being sorted version initial array,Briefly describe in one sentence how does merge sort work?,Running the program with various input data and measuring the running time with system time.,Implement the algorithm and measure the physical running time.
15,0.993148418960041,0.40576624665605354,5.0,  continuously break array half then array as concatenate back together sorted array,Briefly describe in one sentence how does merge sort work?,"You run a program with different data sizes, like 10^x.  As you increase x and measure the completion speeds for the program, you can find patterns and attempt the measure the running time.  It's very important to keep the same software and hardware however, which makes experimental testing inferior to theoretical in the eyes of most.",Implement the algorithm and measure the physical running time.
16,0.04806771838095927,-1.064057218549411,5.0,  take array split half two halves recursion iteration compare together giving third array full sorted list halves rejoined,Briefly describe in one sentence how does merge sort work?,to run the program through and see how many times each thing is called and the runtime of each function is based on that.,Implement the algorithm and measure the physical running time.
17,3.1885670195798683,-0.2408800452628033,5.0,  split large array small array recur array size 1 then array back together source array completely sourte,Briefly describe in one sentence how does merge sort work?,the number of times a specific segments get called per unit work.,Implement the algorithm and measure the physical running time.
18,0.2719990549969458,0.5228450357249341,5.0,  mergesort divide array smaller halves then combine sorted subarray sorted array,Briefly describe in one sentence how does merge sort work?,"For every call into memory, add/ multiply it into an equation of type O(n)",Implement the algorithm and measure the physical running time.
19,0.08956260572860482,-1.8242603173563274,5.0,  break array halves comparing two value two value then back other broken part sorted level merging more set together till return back whole array order,Briefly describe in one sentence how does merge sort work?,"adding a time marker at the before the algorithm is called and another time marker immediately after so that you have the change in time, then you can calculate the efficiency by the speed of the computers cpu.",Implement the algorithm and measure the physical running time.
20,-0.8296200782298107,-0.3516106375331191,5.0,  divide datum separate arrays two array back back together recursively,Briefly describe in one sentence how does merge sort work?,Big O(h) notation,Implement the algorithm and measure the physical running time.
21,2.6965286520055898,-1.7328777359721785,5.0,  take initial array split two temporary smaller array two smaller array back single array,Briefly describe in one sentence how does merge sort work?,the experimental approach measures actual running time in t.  t= seconds.,Implement the algorithm and measure the physical running time.
22,-2.136861023822113,0.9670869667932628,5.0,  divide datum halves datum element reached then element together according placement comparison rest datum,Briefly describe in one sentence how does merge sort work?,running an algorithm on a specific set of data,Implement the algorithm and measure the physical running time.
23,-1.0311166832909653,0.6120800286324418,5.0,  divide conquer strategy sorting array part then merging sorted part back together,Briefly describe in one sentence how does merge sort work?,"In experimental terms, the running time of an algorithm is measured by the number of operations required to complete the function. This number can usually be expressed in big-O notation.",Implement the algorithm and measure the physical running time.
24,1.1452719868334509,-0.6795588292837142,5.0,  divide recursuivly big array two array two array togather recuruivly,Briefly describe in one sentence how does merge sort work?,"run the code for n-times and get average values, drop the constant and lowest number. for example if             f(x) = 3n +1 the running time will bef  f(x) = O(n)",Implement the algorithm and measure the physical running time.
25,1.06527291809463,2.6417279452640527,5.0,  divide array half half calling self thus dividing half again again sorting array sorted then putting element back original array sorted,Briefly describe in one sentence how does merge sort work?,to measure the actual time of the program to run. and calculate the running time using the input and operations done,Implement the algorithm and measure the physical running time.
26,-0.7867366800131402,-0.9806329793527634,5.0,  take array split half send half back recursively two halves when start going back,Briefly describe in one sentence how does merge sort work?,adding up the number of operations performed based on the worst case possible.,Implement the algorithm and measure the physical running time.
27,1.3839482669105487,-1.372706161067017,5.0,  split array two halves then two smaller array then back together form sorted array,Briefly describe in one sentence how does merge sort work?,the experimental approach would be to run through the algorithm and see how long it takes,Implement the algorithm and measure the physical running time.
28,-0.6156628366478625,0.26448301713990563,5.0,  continually divide array set container halves reaches point where element left then set two sorted arrays container,Briefly describe in one sentence how does merge sort work?,"trying it with different sets of inputs, and measuring the amount of time that the algorithm actually takes.",Implement the algorithm and measure the physical running time.
29,0.5859641917364014,-0.4865721284592139,2.5,  split array element smaller smaller array till value reached,Briefly describe in one sentence how does merge sort work?,running the input with various inputs measuring the running time with  system time,Implement the algorithm and measure the physical running time.
0,2.910971190811679,-0.6087258360405576,5.0,  try several set datum include worst case best case random case try run same program different computer same spec,What is the experimental approach for measuring the running time of an algorithm?,"it scans the list and selects the smallest(largest) element and places it in the front, increment the curPtr by one, scan the list again for the next smallest(largest) element and place it in with respect with the other sorted elements.","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth."
1,-0.27764142856087853,0.3834170025096308,0.0,  not answered,What is the experimental approach for measuring the running time of an algorithm?,"Selection sort searches the array for the lowest value and swaps it with the first value in the array. Then searches for the next lowest value and swaps it with the second item in the array, and so on.","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth."
2,-0.830113565643852,0.014455694707591307,1.5,  complexity using big logarthmic o log n linear o n exponential o n^2 quadratic o n^k k gt = 1 polynomial o a^n n gt 1,What is the experimental approach for measuring the running time of an algorithm?,Compare the largest element to the front element and swap data according to value if needed.,"It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth."
3,-0.7678112304433001,-0.062094755028748165,5.0,  using sort counting principle number operation performed algorithm,What is the experimental approach for measuring the running time of an algorithm?,"Selection sort is a sorting algorithm that divides a list in half and has two lists. It then compares the first elements in both these lists and puts these elements in another list, having the smaller element before the bigger one.","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth."
4,-0.02979604974799532,-0.28865715696914135,5.0,  mean actually write prototype measure take run give certain parameter,What is the experimental approach for measuring the running time of an algorithm?,"Iterate through the list (assume list of integers), find the smallest one, and put it in a separate ""sorted"" list... then traverse again and find the next smallest, and move it to the sorted section... and repeat until you run out of elements to sort.","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth."
5,-0.17756263875890269,-0.24256210849526544,5.0,  relationship different input size,What is the experimental approach for measuring the running time of an algorithm?,selection sort selects the smallest element out of the list then the second smallest ....and sorts them acordingly.,"It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth."
6,2.777230993390132,4.412052838996724,5.0,  oposite theoretical assessment determine runtime run code first determine runtime not recommended because limited test does not include possibilities datum nor hardware process datum,What is the experimental approach for measuring the running time of an algorithm?,You select the smallest element and place it on the left.  You select the smallest element and sort it with respect the the item already on the left.  You continue this till the end of the collection of items.,"It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth."
7,-0.2776414285608793,0.3834170025096314,0.0,  not answered,What is the experimental approach for measuring the running time of an algorithm?,"A selection sort scrolls through the data structure looking for the lowest (or highest) unsorted piece of data, moves it to the held spot, increments that spot by one, and starts the process over.","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth."
8,-0.6519484055568756,0.013288871492219434,1.5,  using big equation tell time,What is the experimental approach for measuring the running time of an algorithm?,Selection sort works by finding the smallest element and then compares it with the largest and sorts the elements.,"It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth."
9,-0.2803627474057688,0.036913729567905805,5.0,  create run multiple amount take then average result,What is the experimental approach for measuring the running time of an algorithm?,"Selection sort is usually a recursive sorting method where you divide the elements to be sorted in half repeatedly. You then sort the smallest case, then work your way up, sorting each until they are all sorted.","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth."
10,-0.6979592462566168,-0.15969134833333196,3.0,  keep value how many operation take add value function called,What is the experimental approach for measuring the running time of an algorithm?,"goes to the middle of the list, checks to see if it is greater or less then the value given and moves through the list accordingly to add the value into the proper place.","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth."
11,-0.5184909298425735,0.031433129387539956,1.5,  big oh,What is the experimental approach for measuring the running time of an algorithm?,selection sort finds the lowest element in the data set and places it behind the pivot point.,"It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth."
12,0.037949637093094214,0.06193397925322889,5.0,  program various input datum system time,What is the experimental approach for measuring the running time of an algorithm?,"Selection sort iterates through the array one element at a time, seeking the least value from the right and replacing the current value with it.","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth."
13,3.570053236936825,-3.0045058296720515,5.0,  run program different datas size like 10^x as increase measure completion speed program find pattern attempt measure very important keep same software hardware testing inferior theoretical eye most,What is the experimental approach for measuring the running time of an algorithm?,"Selection sort traverses an unsorted array looking for the smallest value, when it's found it is put at the beginning of the unsorted array.  Performed several times, this will output a sorted array.","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth."
14,0.2044405702230965,0.09774254634311486,5.0,  run program through see how many thing called runtime function base,What is the experimental approach for measuring the running time of an algorithm?,it runs through the list and finds the smallest (or largest) value and puts it at the appropriate position,"It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth."
15,-0.6761675052638089,0.03669831406471603,3.0,  number specific segment get called unit work,What is the experimental approach for measuring the running time of an algorithm?,"pick a number, and set all values less than that number to the left, while all numbers on the right of that number is larger.","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth."
16,-0.5406128246741062,0.0445900345608146,1.5,  call memory add multiply equation type o n,What is the experimental approach for measuring the running time of an algorithm?,It takes the largest item in the unsorted array and swaps it with last item in the unsorted array.,"It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth."
17,-0.4974981045662746,-0.21969279778092918,3.0,  adding marker called marker immediately that have change then calculate efficiency speed computer cpu,What is the experimental approach for measuring the running time of an algorithm?,"by selecting the first object and comparing it with the next objects to find one that is smaller, if it does it switches the two.  then it comes back the other way and sees if the objects previous to the last one is greater, if it does it switches them.  it does this while decreasing the range it looks at until it finishes in the middle.","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth."
18,-0.5416467627755988,0.018246228708237444,1.5,  big o h notation,What is the experimental approach for measuring the running time of an algorithm?,"Selection sorts works by going through a certain list. Goes through the unsorted list and selecting the largest item in the list and placing it in a sorted array. There are two arrays, unsorted and sorted. Complete these steps until the list is sorted.","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth."
19,-0.2340544823716219,-0.24508211354340873,5.0,  measure actual t t= second,What is the experimental approach for measuring the running time of an algorithm?,"selection sort works by pulling all of the values off to the side, leaving one value in the list.  It will then insert a value into the list.  if the value is bigger it will go to the right, if smaller if will go to the left.","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth."
20,-0.11228133487597894,0.32128797698715644,5.0,  specific set datum,What is the experimental approach for measuring the running time of an algorithm?,selection sort searches for the smallest element of the remaining data organization and places it at the largest point of the new data organization,"It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth."
21,-0.7726356497515853,-0.38521557147048846,2.5,  term measure number operation require complete function number expressed big o notation,What is the experimental approach for measuring the running time of an algorithm?,"Selection sort sorts an array one element at at time. It first finds the element with the smallest key and puts it into the first location within its array or list, then finds the next smallest and puts it in the second location, and so on.","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth."
22,-0.38328473062637153,0.2796358584883254,2.5,  run code n get average value drop constant lowest number example if f x = 3n one bef f x = o n,What is the experimental approach for measuring the running time of an algorithm?,"select an element compare it with 2nd element if it is greater, swap it ","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth."
23,0.15316403056043007,-0.6061513597411973,5.0,  measure actual program run calculate using input operation done,What is the experimental approach for measuring the running time of an algorithm?,"it selects the smallest element in a list and switches it with the element in its correct position, then it selects the next smallest and does the same...","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth."
24,-0.3360402317682157,-0.14056722134140204,2.0,  adding number operation performed base worst case possible,What is the experimental approach for measuring the running time of an algorithm?,It starts at the first element and replaces it with the smallest element found to the right. It then repeats with the next element in the list.,"It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth."
25,-0.22593112890825975,0.03888077995930868,5.0,  run see how long take,What is the experimental approach for measuring the running time of an algorithm?,"selection sort is when you pick a data member and put it in a new array, then you pick another data member and put it in order with the new array, then pick another and insert it in the correct place in the new array, etc etc","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth."
26,-0.2745517873127088,-0.1884178547756591,5.0,  trying different set input amount actually take,What is the experimental approach for measuring the running time of an algorithm?,"it searches through the entire data set for the best element to go in the current position, then it moves up a position and searches through the remainder of the set for the best element for the new position.","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth."
27,-0.549777445343102,-0.02263003434396088,5.0,  input various input system time,What is the experimental approach for measuring the running time of an algorithm?,selection sort  iterates through the array one element @ a time searching for the right and replacing current value with it.,"It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth."
0,3.417179452471614,-0.36392869039892856,5.0,  scan list select smallest largest element place front increment curptr one scan list again next smallest largest element place respect other sorted element,"Briefly, how does selection sort work?",A link list can grow to a infinite size as a array has a fixes size.,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored."
1,-3.2637039049595344,0.010699836589718495,5.0,  searches array lowest value swap first value array then searches next lowest value swap second item array on,"Briefly, how does selection sort work?",The advantage of linked lists is that they are not limited in size like arrays.,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored."
2,-0.031118382486209538,-0.12117928084399678,4.0,  compare largest element front element swap datum according value if needed,"Briefly, how does selection sort work?",link lists dont have a fixed size,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored."
3,2.793791120431653,1.5422127509682377,1.0,  sorting algorithm divide list half have two list then compare first element list put element list having smaller element bigger one,"Briefly, how does selection sort work?","Linked Lists can be of variable size, where arrays have fixed size.","Linked lists are dynamic structures, which allow for a variable number of elements to be stored."
4,2.5888085917370747,1.2107538651538596,5.0,  iterate list assume list integer find smallest one put separate sorted list then traverse again find next smallest move sorted section repeat run out element sort,"Briefly, how does selection sort work?","Linked lists do not have a definite size. They can be as big or as small as needed, and they don't have to allocate extra memory for elements you don't need. Arrays size must be defined.","Linked lists are dynamic structures, which allow for a variable number of elements to be stored."
5,1.1080124844485846,-0.497914971584576,5.0,  select smallest element out list then second smallest acordingly,"Briefly, how does selection sort work?","a linked list has a dynamic size , but an array only has a fixed size and takes allot of extra operations to increase its size.","Linked lists are dynamic structures, which allow for a variable number of elements to be stored."
6,1.4330902566716484,-1.5625501790806213,5.0,  select smallest element place left select smallest element respect item already left continue till end collection item,"Briefly, how does selection sort work?",You do not have to predetermine your list size as you do with arrays. Linked list have the ability to be as large as you want them adding memory as needed.,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored."
7,-0.9786212294662338,-0.4334670868833326,5.0,  scroll datas structure looking lowest highest unsorted piece datum move hold spot increment spot one start processes,"Briefly, how does selection sort work?",The main advantage to a linked list is that it can have it's size adjusted during runtime.,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored."
8,0.8550133029101022,-0.9122289809929778,0.0,  finding smallest element then compare largest element,"Briefly, how does selection sort work?",Linked lists are able to grow in size. So elements can be added to the list.,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored."
9,0.7223215864267246,-0.36676165164028485,1.0,  recursive sorting method where divide element sorted half repeatedly then smallest case then way sorting sorted,"Briefly, how does selection sort work?","Linked lists are not confined to a specific size, and can have elements added and removed far easier. They are also easier to traverse.","Linked lists are dynamic structures, which allow for a variable number of elements to be stored."
10,-0.662274744619312,2.1652414280943266,0.0,  goes middle list check see if greater less then value give move list accordingly add value proper place,"Briefly, how does selection sort work?",There is no predetermined length,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored."
11,-0.1478391635122354,-0.7908001571328619,5.0,  find lowest element datas set place pivot point,"Briefly, how does selection sort work?","Inserts into a linked list are far cheaper than an insert into an array. With an array, all items after the one being inserted must me shifted, with a linked list, only the pointers are replaced.","Linked lists are dynamic structures, which allow for a variable number of elements to be stored."
12,-1.2837533831307473,0.2423103186982527,5.0,  iterate array one element time seeking least value right replacing current value,"Briefly, how does selection sort work?",Linked lists may be dynamically grown.,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored."
13,-2.096394346346778,-0.8046748660272773,5.0,  traverse unsorted array looking smallest value when found put beginning unsorted array performed several time output sorted array,"Briefly, how does selection sort work?","Linked lists are very dynamic in that they can change and be added/subtracted to very easily because they are not linear in memory.   Arrays are pre-specified in size to be cast over a certain amount of disk space.  This makes insertion into Arrays difficult because all elements must be shifted, and if you reach the end of the array, you are done even if you have more data to input.  Linked Lists do not run into these problems.","Linked lists are dynamic structures, which allow for a variable number of elements to be stored."
14,-0.024563366679650544,0.1752168079778665,5.0,  run list find smallest largest value put appropriate position,"Briefly, how does selection sort work?","linked lists have an indefinite size, whereas arrays are a specific size.","Linked lists are dynamic structures, which allow for a variable number of elements to be stored."
15,-1.539834167419823,-0.14015991880615813,1.0,  pick number set value less than number left number right number large,"Briefly, how does selection sort work?","Linked lists have no predefined length, and thus you can have virtually unlimited items in that list.","Linked lists are dynamic structures, which allow for a variable number of elements to be stored."
16,-1.7164344801061917,-0.8165422124081939,5.0,  take largest item unsorted array swap last item unsorted array,"Briefly, how does selection sort work?","They grow dynamically, unlike the fixed size array","Linked lists are dynamic structures, which allow for a variable number of elements to be stored."
17,-0.8192891562413295,3.5021976641974857,1.0,  selecting first object comparing next object find one smaller if switches two then come back other way see if object previous last one greater if switches decreasing range look finishes middle,"Briefly, how does selection sort work?","you can add as many nodes as you like without having to specify a list size, if an array gets too big you have to copy its entire contents to another larger array to get more room","Linked lists are dynamic structures, which allow for a variable number of elements to be stored."
18,0.39715198746627706,1.665644874601089,5.0,  going certain list goes unsorted list selecting largest item list placing sorted array two array unsorted sorted complete step list sorted,"Briefly, how does selection sort work?",Linkded list does not have a fixed size. Arrays have a fixed size.,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored."
19,-1.6881566706212698,4.196497255511457,1.0,  pulling value side leaving one value list then insert value list if value bigger go right if smaller if go left,"Briefly, how does selection sort work?","Linked lists have a dynamic size, where as arrays have a static size.","Linked lists are dynamic structures, which allow for a variable number of elements to be stored."
20,0.1037743918251995,-1.3113035345656125,5.0,  searches smallest element remaining datum organization place largest point new data organization,"Briefly, how does selection sort work?",linked lists do not have a memory constraint other than total memory,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored."
21,0.9380771175297783,-0.6576473989392612,5.0,  array one element time first find element smallest key put first location array list then find next smallest put second location on,"Briefly, how does selection sort work?","The primary advantage of linked lists over arrays is their ability to become larger or smaller as data is added and removed from the list, whereas arrays may waste memory for small data sets, and run out of space for large data sets.","Linked lists are dynamic structures, which allow for a variable number of elements to be stored."
22,0.36560923348023866,-0.3629667818360951,1.0,  select element compare 2nd element if greater swap,"Briefly, how does selection sort work?","Array have fixed size, in Link List are flexible for adding or deleting an element. ","Linked lists are dynamic structures, which allow for a variable number of elements to be stored."
23,1.8163715432158207,-0.7916972846152178,5.0,  select smallest element list switches element correct position then select next smallest same,"Briefly, how does selection sort work?",they are resizeable,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored."
24,1.7165961093568722,-0.49651568636171045,5.0,  start first element replace smallest element found right then repeat next element list,"Briefly, how does selection sort work?",Linked lists can be dynamically allocated and their size can change as needed.,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored."
25,-3.085296675284135,-2.5773954978462523,1.0,  when pick datum member put new array then pick datas member put order new array then pick insert correct place new array etc etc,"Briefly, how does selection sort work?","linked lists do not have to have a specified size, they are easier to add to and remove from","Linked lists are dynamic structures, which allow for a variable number of elements to be stored."
26,0.011580193290688306,-1.5889584038556217,5.0,  searches entire datas set best element go current position then move position searches remainder set best element new position,"Briefly, how does selection sort work?","they dont have a fixed size, no shiftnig needs to be done for insertion/deletion.","Linked lists are dynamic structures, which allow for a variable number of elements to be stored."
27,-0.9300977003888895,-0.11408221797330376,5.0,  iterate array one element @ time searching right replacing current value,"Briefly, how does selection sort work?",linked list many be dynamically grown. It has not limit,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored."
0,-0.12492011967204257,-0.797208822867853,5.0,  link grow infinite size as array have fixes size,What is the advantage of linked lists over arrays?,A data structure in C++ where the the first element in the queue is the first element taken out of the queue.,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.
1,-0.674646564674007,0.2492625305314272,5.0,  that not limited size like arrays,What is the advantage of linked lists over arrays?,A queue is an abstract data type that performs operations on both ends of the list and exhibits first-in first-out behavior.,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.
2,-0.0037186590904659342,-0.26819376446001353,5.0,  link do not have fixed size,What is the advantage of linked lists over arrays?,First in first out.,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.
3,-0.6115651112410493,-0.5584384812832723,5.0,  variable size where array have fixed size,What is the advantage of linked lists over arrays?,"A queue is an abstract data type that involves putting an element at the back of the list. Queues use the FIFO, first in first out, idea where the first element in the list is the first that comes out.",A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.
4,4.893071339469062,-1.3353719270183446,5.0,  do not have definite size as big as small as needed do not have allocate extra memory element do not need size must define,What is the advantage of linked lists over arrays?,"A data structure that implements first in, first out. The element that has been there the longest is the first to get served.",A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.
5,-0.01856534565795317,-1.0351970324235842,5.0,  have dynamic size array only have fixed size take allot extra operation increase size,What is the advantage of linked lists over arrays?,a data structure that inserts elements at the end of it and removes elements from the front.,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.
6,3.555597594815566,-1.6654893996223032,5.0,  do not have predetermine size as do array have ability as large as want adding memory as needed,What is the advantage of linked lists over arrays?,A queue is a collection of elements with the characteristics of first in first out (FIFO).  The first item in is the first item out.  All additional items are added to the end of the list.,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.
7,-0.797222883097595,-0.09465684649512915,5.0,  main that have size adjusted runtime,What is the advantage of linked lists over arrays?,"A queue is a data structure that inserts data into a FIFO configuration, that is, data input to the structure is always at it's end, and data taken is always from the beginning.",A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.
8,-1.079536631948895,0.2754339070822522,5.0,  able grow size element added list,What is the advantage of linked lists over arrays?,It is a particular set of entities that are put in to a certain order by the enqueue and the dequeue functions.,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.
9,-0.33386938482316975,0.2585843255818919,4.5,  not confine specific size have element added remove far easier easier traverse,What is the advantage of linked lists over arrays?,A queue is a data type that operates under a FILO (First In Last Out) method. This means that the first element inserted into the queue is the first element removed.,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.
10,-1.2403320797276836,0.19281314852233858,5.0,  predetermine length,What is the advantage of linked lists over arrays?,like a linked list except it is first in last out,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.
11,-1.3810965491754241,0.8227984056777352,4.0,  insert far cheaper than insert array array item one being inserted must shifted only pointer replace,What is the advantage of linked lists over arrays?,A queue is like a stack except it follows FIFO (First in first out) .,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.
12,-1.3847974233605367,0.22128116688651678,5.0,  dynamically grow,What is the advantage of linked lists over arrays?,A queue is a data structure where the first node in is the first node out.,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.
13,2.6517121064298923,5.511732387588159,5.0,  very dynamic that change added subtracted very easily because not linear memory pre specified size cast certain amount disk space insertion difficult because element must shifted if reach end array done even if have more datum input lists do not run problem,What is the advantage of linked lists over arrays?,A queue is a First in First out data structure much like a line for a movie theatre.  The first object in line is the first object to be handled or enacted upon.,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.
14,-0.5921111303110582,-0.4139956196259181,5.0,  have indefinite size whereas array specific size,What is the advantage of linked lists over arrays?,"its a lot like a stack, except that the first item put into the list is the first item to be taken from the list.",A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.
15,-0.8275425318302241,-0.20622223740831658,5.0,  have predefine length thus have virtually unlimited item list,What is the advantage of linked lists over arrays?,"a first in first out list of items, like if you put 5, 4, 3, 2, and 1 in the queue it will when you dequeue items remove the items in the same order as put in, so thus it will put out, 5, 4, 3, 2, and 1 in that exact order.",A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.
16,-1.2043028954389707,-0.06718030326476124,5.0,  grow dynamically fixed size array,What is the advantage of linked lists over arrays?,"A linked list with a First In, Out structure dequeue at the head of the list enqueue at the end of the list",A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.
17,0.9326420375714156,-0.6649913481504125,5.0,  add as many node as like having specify size if array get too big have copy entire content large array get more room,What is the advantage of linked lists over arrays?,"a list of objects that follow the rule first in first out, essentially a linked list that goes in order of the first object in the list is the first to be taken off.",A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.
18,0.0033478451627108816,-0.7646620800851891,5.0,  linkded does not have fixed size have fixed size,What is the advantage of linked lists over arrays?,A queue is an abstract data type that is based off of the priniple of first in first out. FIFO. The first item inserted into the list will the first item taken out.,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.
19,0.3115448001764152,-0.909287260861771,5.0,  have dynamic size where as array have static size,What is the advantage of linked lists over arrays?,"It is a ""first in first out"" data structure.  It can be implemented with either a linked list or an array.",A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.
20,0.2673916142582046,0.35467511614047903,5.0,  do not have memory constraint other than total memory,What is the advantage of linked lists over arrays?,an ordered list that performs task in the order of first in first out. adding items to the queue places items behind the rest of them. taking items off the queue takes the one that has waited the longest.,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.
21,0.03424011554881538,1.3344042940010077,5.0,  primary ability become large smaller as datum added remove whereas array waste memory small datum set run out space large datas set,What is the advantage of linked lists over arrays?,"A queue is a linear, first-in first-out data structure. Data must be accessed in the same order it was put into the queue, so only the oldest item in the queue is accessible at any time. Main functions defined are enqueue and dequeue.",A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.
22,-0.666906878451738,-0.25965728275891414,5.0,  array have fixed size link flexible adding deleting element,What is the advantage of linked lists over arrays?,"Queue is a buffer, it follows the rule of First In and First out. Queue is very useful in computer science for scheduleing .",A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.
23,-1.2663641602544238,0.23350665730658393,5.0,  resizeable,What is the advantage of linked lists over arrays?,a queue is a set of elements where the first element inserted is the first element to be removed,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.
24,-0.3450517355349823,-0.3008641199696685,5.0,  dynamically allocate size change as needed,What is the advantage of linked lists over arrays?,Is a list of items where the the user only has access to the first element and each new element is added at the end.,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.
25,0.41300881642589965,-0.2201524592550312,5.0,  do not have have specified size easier add remove,What is the advantage of linked lists over arrays?,"a queue is a list of data that follows the fifo principle, an example of this would be when you get into a line at a movie theater...the first one there gets to buy a ticket first",A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.
26,0.202744756660259,-0.008587701476668775,5.0,  do not have fixed size shiftnig need done insertion deletion,What is the advantage of linked lists over arrays?,"A queue is a data structure that holds a set of objects, which has a FIFO (first in first out) priority.",A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.
27,-0.7127509422280319,0.11566474770879383,5.0,  many dynamically grow have not limit,What is the advantage of linked lists over arrays?,like a linked list expect first in last out,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.
0,-0.6610631640138215,-0.14458548657290016,5.0,  push pop,What are the main operations associated with a stack?,push and pop,push and pop
1,-0.0647598678464604,0.37127634706289253,5.0,  pop remove head least recently inserted node push insert new node head stack,What are the main operations associated with a stack?,"Pop, which removes the head, or least recently inserted node from the stack. Push, which inserts a new node at the head of the stack.",push and pop
2,-0.6610631640138219,-0.14458548657289974,5.0,  push pop,What are the main operations associated with a stack?,Push and pop,push and pop
3,-0.628938778768014,-0.25665551366947725,5.0,  push function pop function,What are the main operations associated with a stack?,The Push function and the Pop function.,push and pop
4,-0.6610631640138219,-0.14458548657290027,5.0,  push pop,What are the main operations associated with a stack?,push and pop,push and pop
5,0.730437277680795,1.3168557239024605,5.0,  push put element pop take element stack,What are the main operations associated with a stack?,push - puts an element on the stack pop- takes an element off the stack,push and pop
6,-0.6610631640138219,-0.1445854865729004,5.0,  push pop,What are the main operations associated with a stack?,Push  and pop.,push and pop
7,-0.6610631640138219,-0.14458548657290032,5.0,  push pop,What are the main operations associated with a stack?,Push and Pop,push and pop
8,-0.6610631640138219,-0.1445854865729003,5.0,  push pop,What are the main operations associated with a stack?,push and pop.,push and pop
9,2.0055273787967636,0.8333688674113802,5.0,  push pop push add element pop remove top element stack,What are the main operations associated with a stack?,"Push and Pop. Push adds an element to the stack, while Pop removes the top element from a stack.",push and pop
10,-0.6610631640138219,-0.1445854865729003,5.0,  pop push,What are the main operations associated with a stack?,pop and push,push and pop
11,-0.7320410726078457,-0.014576324408208444,4.0,  push pop search isempty,What are the main operations associated with a stack?,"push,pop,search,isEmpty",push and pop
12,-0.6610631640138219,-0.1445854865729003,5.0,  push pop,What are the main operations associated with a stack?,push and pop,push and pop
13,0.6869260386564343,2.43980409114848,4.5,  push pop isempty isfull maybe list show element count how many element stack,What are the main operations associated with a stack?,"Push, Pop, isEmpty, isFull  Maybe List to show all elements or an operation to count how many elements in the stack.",push and pop
14,-0.6610631640138219,-0.1445854865729003,5.0,  pop push,What are the main operations associated with a stack?,"pop, push",push and pop
15,-0.7086131246680323,-0.013780849328268976,5.0,  isempty push pop,What are the main operations associated with a stack?,"isempty, push and pop, along with usually, ",push and pop
16,-0.6610631640138219,-0.1445854865729003,5.0,  push pop,What are the main operations associated with a stack?,push and pop,push and pop
17,-0.23050432539783552,-0.7090177230653465,5.0,  push pop push put object pop take following first last out rule,What are the main operations associated with a stack?,push and pop. push puts objects into the stack and pop takes them out following the first in last out rule.,push and pop
18,2.340744387565372,-1.7160788656032226,5.0,  push pop push add item top pop remove top item stack,What are the main operations associated with a stack?,"The main operations in a stack are push and pop. Push adds an item to the top of the stack, pop removes the top item from the stack.",push and pop
19,-0.6610631640138219,-0.1445854865729003,5.0,  push pop,What are the main operations associated with a stack?,push and pop,push and pop
20,1.9226558510020388,-1.8036604572050527,5.0,  push add item top pop take first item top stack,What are the main operations associated with a stack?,"push, which adds an item to the top of the stack, and pop, which takes the first item off the top to the stack",push and pop
21,1.7597646518010255,-0.5134773112218463,5.0,  function define push put element top pop remove item top,What are the main operations associated with a stack?,"the main functions defined for a stack are push, which puts an element on the top of the stack, and pop, which removes an item from the top.",push and pop
22,-0.7320410726078457,-0.014576324408208847,4.5,  push pop full isempty,What are the main operations associated with a stack?,Push() Pop() Full() IsEmpty(),push and pop
23,0.5640437473360338,1.417319333410747,5.0,  pop push remove element insert element,What are the main operations associated with a stack?,pop and push to remove an element and to insert an element,push and pop
24,-0.6610631640138219,-0.1445854865729003,5.0,  push pop,What are the main operations associated with a stack?,"Push, Pop",push and pop
25,-0.6610631640138219,-0.1445854865729003,5.0,  push pop,What are the main operations associated with a stack?,push and pop,push and pop
26,2.341683205251063,0.6873958179942724,5.0,  push add element top pop remove top element stack,What are the main operations associated with a stack?,push - Add an element to the top of the stack pop - remove the top element from the stack,push and pop
27,-0.6610631640138219,-0.1445854865729003,5.0,  push pop,What are the main operations associated with a stack?,push and pop,push and pop
0,-0.6155817224166462,-0.9714197695769458,5.0,  when traverse size visit node three time order 3n o n running time,What is the Euler tour traversal of a tree?,When you traverse a tree of any size you will visit each node three times.  Its on the order of 3n or O(n) running time.,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right."
1,0.27668015788157596,1.0925696678666705,5.0,  begin root visit node left then bottom then right side,What is the Euler tour traversal of a tree?,"The Euler tour traversal of a tree begins at the root and visits each node in the tree from the left, then bottom, then right sides.","A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right."
2,-1.1030719643847482,-0.5183984072613839,2.5,  where visit order according datas value,What is the Euler tour traversal of a tree?,Where you visit the in order according to its data value.,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right."
3,-0.8794463544503097,0.1391994766624467,0.0,  show how function contain parent children sibling ancestor descendent type algorithm alternative sorting algorithm,What is the Euler tour traversal of a tree?,"It is a tree that shows how it functions. It contains parents, children, siblings, ancestors and descendents. The use of tree type algorithm is also an alternative sorting algorithm. ","A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right."
4,-0.7404459008770251,-0.7211777926656209,5.0,  start root circle _ whole _ naming node as see,What is the Euler tour traversal of a tree?,"Start from the root, circle around the _whole_ ""tree"", naming each node as you see it.","A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right."
5,-0.556194642436125,0.612068585531981,0.0,  where visit parent then vistit children,What is the Euler tour traversal of a tree?,it is where you visit the parent then you vistit the children,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right."
6,-0.4228724865258766,0.2324854386180511,4.0,  start root traveling left visiting ever child way till return root right,What is the Euler tour traversal of a tree?,"To start from the root , traveling left and visiting ever child along the way till you return to the root from the right.","A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right."
7,1.6627105190136418,1.5265444588012522,4.0,  traversing terminal child then sibling then traverse terminal child parent sibling repeating first step if sibling have children root node have been visited,What is the Euler tour traversal of a tree?,"Traversing a tree down to it's terminal child and then all of it's siblings, then it traverses up the terminal child's parent and all of it's siblings (repeating the first step if those siblings have children) until the root node has been visited.","A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right."
8,-0.7306372150485909,-0.7279951945837628,1.5,  function iteratively keep track pointer node,What is the Euler tour traversal of a tree?,The Euler tour traversal of a tree the function that iteratively keeps track of the pointer on each node.,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right."
9,-0.7459570774361727,-0.7154683356964042,4.5,  travel outside edge clockwise naming node,What is the Euler tour traversal of a tree?,"You travel the outside edge of the tree, clockwise, while naming each node.","A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right."
10,-1.2162261857865122,-0.06706034068730313,0.0,  children root,What is the Euler tour traversal of a tree?,children to root,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right."
11,-0.25502207392751675,1.0426463594740925,2.0,  go bottom left sub visit parent then children,What is the Euler tour traversal of a tree?,go to the bottom of the left sub tree and visit the parent and then its children,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right."
12,-1.3880537681795138,-0.309213167081823,3.5,  traverse rubber band style shape,What is the Euler tour traversal of a tree?,The Euler tour traverses through the tree in a rubber-band style shape.,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right."
13,5.259922288411206,4.299418886220297,5.0,  specific way navigating involve following starting very top moving left side first cupping visit parent children node node visited left right bottom first progresses left child if one then progresses parent then next child then parent parent,What is the Euler tour traversal of a tree?,"The Euler tour traversal of a tree is a specific way of navigating a tree that involves following the tree starting at the very top and moving along the left side of the tree first, cupping in to visit the parents of children nodes.  It allows for each node to be visited from the left, the right and the bottom.  The Euler tour first progresses to a left child if there is one, then progresses to it's parent, then it's next child, then it's parent's parent.","A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right."
14,-0.678012851207873,-0.2733544162797138,2.5,  run parent children order,What is the Euler tour traversal of a tree?,it runs through the parents and the children in order,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right."
15,1.4836711716045516,1.07885926716975,2.5,  start node left root then proceed visit node left right order visit root then proceed repeat previous step right side tree,What is the Euler tour traversal of a tree?,"it starts node on the left of the root and then proceeds to visits each node in a left to right order, visits the root, and then proceeds to repeat the previous step on the right side of the tree.","A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right."
16,0.05738940237978467,0.35173905156450647,3.5,  travel root farthest left child backup travel leftmost children right side repeat reaching rightmost child,What is the Euler tour traversal of a tree?,"Travel from the root to the farthest left child Backup, travel the leftmost children in the right side repeat until reaching the rightmost child.","A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right."
17,7.141354062516995,-4.1428616183392215,2.5,  have preorder order postorder preorder = put parent node front child node s order = put parent node left child right child node ss postorder = put parent node child node s,What is the Euler tour traversal of a tree?,"has preorder, in order, and postorder of a tree.  preorder = puts the parent node in front of the child node(s).  in order = puts the parent node between the left child and right child node(s).  postorder = puts the parent node after the child node(s).","A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right."
18,0.015521832859572569,-0.9140795539670971,2.5,  traveral when go looking node put order left root right like inorder traversal,What is the Euler tour traversal of a tree?,"The Euler traveral is when you go through a tree looking for nodes to put in the order of left, root, right. Like inOrder traversal. ","A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right."
19,-0.8533723598516934,0.36283833651045266,5.0,  begin root travel outside element visited three time left bottom right,What is the Euler tour traversal of a tree?,"An Euler traversal is a traversal that begins with the root, and travels around the outside of the tree.  Each element in the tree is visited 3 times.  From the left, from the bottom and from the right.","A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right."
20,-1.0287534818102515,0.5783540142485073,4.0,  traverse branch straight one leaf then start again root repeat element have been traverse,What is the Euler tour traversal of a tree?,Euler tour traversal of a tree traverses down each branch straight to one leaf then starts again at the root and repeats until all elements have been traversed.,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right."
21,-0.21682157368956995,-1.6122428981914123,4.0,  visit node starting root working counterclockwise order post order pre order see as variation traversal,What is the Euler tour traversal of a tree?,"The Euler tour visits every node in a tree, starting with the root and working around the tree counterclockwise. in-order, post-order, and pre-order traversals can be seen as variations of the Euler tour traversal.","A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right."
22,-1.269658891938466,-0.3158897627152901,0.0,  not answered,What is the Euler tour traversal of a tree?,not answered,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right."
23,-0.677892652393952,1.0590012727023372,5.0,  traverse going left then go right last children back top kind like going tree,What is the Euler tour traversal of a tree?,to traverse going down to the left then go to the right of last children and back to the top.. kind of like going around the tree,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right."
24,0.4423586885523672,-0.3318807068345725,5.0,  recursively visit node list visit node left bottom right,What is the Euler tour traversal of a tree?,"You recursively visit every node on the list. You visit the node from the left, the bottom, and from the right.","A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right."
25,-0.31521340547021537,-0.09538435820949881,5.0,  way traverse where come contact node three time left right bottom,What is the Euler tour traversal of a tree?,"the euler tour is a way to traverse a tree where you come into contact with each node three times, from the left, from the right, and from the bottom","A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right."
26,-1.2922888188317758,-0.3031405110496993,0.0,  traversing level level,What is the Euler tour traversal of a tree?,traversing a tree level by level,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right."
27,-1.3540846965568367,-0.3561579822305962,3.5,  rubber band style shape,What is the Euler tour traversal of a tree?,The Euler traversal through the tree in a rubber band style shape.,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right."
0,5.7860410997430245,6.177662930718548,4.5,  if root set root null else if deleting right leaf set rightptr parent null else if deleting left leaf set leftptr parent null else if deleting left right subtree child set max leaf child left subtree as new child node,How do you delete a node from a binary search tree?,"if root, set root to NULL else if deleting right leaf, set rightPtr of parent node to NULL else if deleting left leaf, set leftPtr of parent node to NULL else if deleting a left or right subtree child node, set the max leaf child in the left subtree as the new child node.","Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree)."
1,0.39692568053495336,-0.39955440694364647,3.0,  traverse find if have children simply otherwise set datum equal datum one children then set pointer child null,How do you delete a node from a binary search tree?,"Traverse the tree and find the node, if the node has no children, simply delete it; otherwise set the node's data equal to the data of one of its children then set the pointer for that child to NULL.","Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree)."
2,-2.1014049766832867,0.5889092682954336,3.0,  first attaching element deleting alternate then deleting node,How do you delete a node from a binary search tree?,first attaching the elements from the node to be deleting to alternate nodes and then deleting that node.    delete node;,"Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree)."
3,-1.033968473241271,-0.5734310788962497,2.5,  if have link that parent children node,How do you delete a node from a binary search tree?,"If you delete a node from a tree, you have to link that nodes parents to the children of that node.","Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree)."
4,-2.112280552726858,0.30087747725600583,0.5,  must information contain free memory garbage collect pointer parent point wish delete,How do you delete a node from a binary search tree?,"Must delete the information that the node contains (to free up memory/ ""garbage collect"") and also delete the pointer (in that node's ""parent"") that points to the node you wish to delete.","Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree)."
5,-1.251562675139581,0.23264429935206216,5.0,  replace largest element left subtree replace smallest element right subtree,How do you delete a node from a binary search tree?,you replace the node with the largest element of its left subtree or replace it with the smallest element of the right subtree.,"Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree)."
6,0.43742699969474763,-1.919709618263951,3.5,  traverse till find wanting if have children if have children find left most children attach root then node,How do you delete a node from a binary search tree?,"You traverse the tree till you find the node you are wanting to delete.  If the node has no children you delete it.  If the node has children, before you delete, you find the left-most of its children and attach it to the root then you can delete the node.","Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree)."
7,-0.4702132713418267,0.2612653224698053,3.5,  link left child parent left child pointer,How do you delete a node from a binary search tree?,Link the to-be-deleted's left child to the to-be-deleted's parent's left child pointer.,"Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree)."
8,-1.4348315016529236,0.7166892651761905,0.0,  way first have take root then see coming root set root null,How do you delete a node from a binary search tree?,The way you delete a node from a binary search tree is first you have take the root and then see the nodes that are coming from the root. And delete the nodes and set the root to NULL.,"Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree)."
9,-2.0498262626942103,0.15401736443775688,5.0,  remove element move next highest element left place,How do you delete a node from a binary search tree?,You remove the element from the tree and move the next highest element from the left into its place.,"Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree)."
10,-2.1480736617599985,0.07743188685070743,0.0,  node,How do you delete a node from a binary search tree?,delete node;,"Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree)."
11,7.1165773082734285,-3.19696117944642,5.0,  deletion depend upon if have children if avl assuming not avl being have children set pointer null if have left child right child exclusively that child replace if have two children left most child right sub right most child left subtree replace,How do you delete a node from a binary search tree?,"the deletion of a node depends upon if it has children and if it is an AVL binary search tree. Assuming it is not an AVL tree, and the node being deleted has no children, you just set its pointer to null. If it has a left child or a right child exclusively, that child replaces the deleted node, if it has two children, the left most child of the right sub tree (or right most child of the left subtree)will replace it","Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree)."
12,5.773954144041226,0.8158441383117523,5.0,  if leaf set parent pointer null if have single child set parent pointer child if have two children set one middle children remove child previous position as leaf rightmost child left subtree leftmost child right subtree,How do you delete a node from a binary search tree?,"If the node is a leaf, just set it's parent's pointer to null and delete it, if it has a single child, set the parent's pointer to the child and delete; if it has two children, set the node to one of the middle children and remove that child from its previous position as a leaf (rightmost child of the left subtree or leftmost child of the right subtree).","Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree)."
13,-1.304216113585645,-1.2585228205579875,4.0,  must first establish proper replacement about child soon once replacement have been found simply reassign where going have been usurped remove memory again,How do you delete a node from a binary search tree?,"In a binary search tree, you must first establish a proper replacement for the node you are about to delete, usually a child from the soon to be deleted node.  Once that replacement node has been found, you simply reassign it to where the node that is going to be deleted is.  After the deleted node has been usurped, you remove the deleted node from memory so it may be used again. ","Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree)."
14,-1.1360701352848903,-0.22567958723981546,3.0,  depend where locate if child must replace work place,How do you delete a node from a binary search tree?,It all depends on where the node is located. If its a child it can just be deleted but for a node inside the tree it must be replaced with another node that works in its place.,"Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree)."
15,0.2543580090445604,-1.355531319815158,5.0,  if have children right away otherwise put furthest right left side furthest left right side place perform above guarantee that children get handle properly,How do you delete a node from a binary search tree?,"if the node has no children, delete it right away, otherwise, put either the furthest right node on the left side or the furthest left node on the right side in that place and perform a the above on that node to guarantee that it's children get handled properly.","Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree)."
16,-1.8390612855287736,1.636992965365667,0.0,  create temp set temp value head null case only head list set head equal temp temp,How do you delete a node from a binary search tree?,Create a temp Node  Set temp's values to the Node after head  or NULL in the case of only head Node in the list.   Set head equal to temp. Delete temp,"Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree)."
17,-0.3568756136016354,0.2449284721213975,5.0,  searching find replacing link greatest child left subtree least child right subtree,How do you delete a node from a binary search tree?,"by searching down the tree until you find the node, and replacing the link to that node with the greatest child node on the left subtree or the least child node on the right subtree.","Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree)."
18,-1.8484643794469897,0.6212373896137192,0.0,  set null where that does not point anything opertator clear space memory,How do you delete a node from a binary search tree?,"Set the nodes to NULL, where that it doesn't point to anything, and the use the DELETE opertator to clear space from memory.","Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree)."
19,-1.6082307892191134,0.33521415435170543,1.5,  must first traverse find appropriate value then must that leaf if then pointer specific node,How do you delete a node from a binary search tree?,"You must first traverse the tree to find the appropriate value.  Then you must make sure that the node is a leaf node.  If it is, then you can delete the pointer to that specific node.","Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree)."
20,0.6014545035116876,1.2712024971112932,5.0,  if leaf set parent pointer null if must replace one : largest left smallest right done recursively if needed,How do you delete a node from a binary search tree?,"if the node is a leaf, you set it's parent's pointer to null. if the node is in the tree you must replace the node with one in the tree: either the largest in the left of the tree or the smallest in the right of the tree. this can be done recursively if needed.","Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree)."
21,1.835339314947341,-0.09306199170129441,4.0,  if leaf simply deallocate memory parent reference change null if have single child pointer point child deleting have two children easiest solution copy entire subtree new array descendant then add element take subtree back main tree,How do you delete a node from a binary search tree?,"if the node is a leaf it can simply be deallocated/deleted from memory, and its parent's reference to it changed to NULL. If the node has a single child, the pointer to it should be made to point to its child before deleting the node. Should the node have two children, the easiest solution may be to copy the node's entire subtree to a new array or tree, delete the node and all descendants, then add the elements taken from the subtree back into the main tree.","Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree)."
22,-2.1670857972453406,0.009747741209055853,0.0,  not answered,How do you delete a node from a binary search tree?,not answered,"Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree)."
23,-1.58657220362778,-0.9178762553204667,0.0,  not because cause have more than two children,How do you delete a node from a binary search tree?,you cannot delete a node because that can cause a node to have more than 2 children,"Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree)."
24,0.08390825437639532,1.1101514425746828,3.5,  using recursion when find determine whether leaf internal if leaf set parent pointer null if replace children node,How do you delete a node from a binary search tree?,"You search the tree for the node using recursion. When you find the node, you determine whether it is a leaf or a internal node. If it is a leaf, you just delete it and set the parent pointer to that node to NULL. If it is a  node, you replace the node with either of the children nodes.","Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree)."
25,-0.9179195751091963,-0.07780885490395209,3.0,  have link children connected remaining way right parent large than parent left parent smaller,How do you delete a node from a binary search tree?,"to delete the node, you would have to link the children nodes that are connected to the node to be deleted to the remaining nodes of the tree in such a way that nodes on the right of the parent node are larger than the parent and nodes on the left of the parent node are smaller","Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree)."
26,3.268294566474542,-3.852189138238442,3.5,  if have children if only have one child replace child have if have children replace one children send other child down other side new node,How do you delete a node from a binary search tree?,"if it has no children, you just delete it. if it only has one child, just replace the node with whichever child it has. if it has both children, replace it with one of its children, and send the other child down along the other side of the new node.","Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree)."
27,-0.18762261275247546,-0.6844903638883236,2.0,  pointer child have two children set child th middle then take place,How do you delete a node from a binary search tree?,pointer to the child and delete it has 2 children set the node to the child and delete it. the node to th middle will then take its place,"Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree)."
0,-0.0980093193239513,-0.5404026060273437,4.5,  log n where number node,How many steps does it take to search a node in a binary search tree?,Log(n) where n is the number of nodes.,The height of the tree.
1,-0.6043567808472077,-0.1336115188773127,4.5,  log step,How many steps does it take to search a node in a binary search tree?,log(n) steps,The height of the tree.
2,-0.29958342236237695,-0.4978390675300988,5.0,  number level height tree,How many steps does it take to search a node in a binary search tree?,The number of levels and the height of the tree,The height of the tree.
3,-0.5875598310777181,-0.3069173668386792,5.0,  same as height tree,How many steps does it take to search a node in a binary search tree?,It is the same as the height of the tree.,The height of the tree.
4,-0.6964165867384993,-0.020223438428843034,0.0,  give element n 2 find criterion,How many steps does it take to search a node in a binary search tree?,"Given n elements, it would take n/2 steps to find the search criteria.",The height of the tree.
5,-0.5842656215385313,-0.12234423745486503,4.5, log,How many steps does it take to search a node in a binary search tree?,log n,The height of the tree.
6,1.9008760447292834,4.323026618238603,0.0,  depend location looking if root one else if smaller than current go left if large than current go right,How many steps does it take to search a node in a binary search tree?,Depends on the location of the node you are looking for. If it is the root it is one step.  else If it is smaller than the current you are on node you go to the left.  If it is larger than the current node you are on go to the right.,The height of the tree.
7,-0.2692238654857889,-0.2810568606316328,0.0,  2^n where # level have,How many steps does it take to search a node in a binary search tree?,2^n where n is the # of levels the binary tree has,The height of the tree.
8,-0.38565001166563617,-0.2452680263072981,2.5,  number function n 1,How many steps does it take to search a node in a binary search tree?,The number of steps to search a node is the function n-1.,The height of the tree.
9,-0.6656346684331139,0.0010758111264497648,0.0,  2 element give,How many steps does it take to search a node in a binary search tree?,"It would take n/2 elements, given n.",The height of the tree.
10,-0.5842656215385313,-0.12234423745486499,4.5,  log n,How many steps does it take to search a node in a binary search tree?,log(n),The height of the tree.
11,-0.5842656215385313,-0.12234423745486499,4.5,  o log n,How many steps does it take to search a node in a binary search tree?,O(log n),The height of the tree.
12,-0.5842656215385313,-0.12234423745486499,4.5,  o log n,How many steps does it take to search a node in a binary search tree?,O( Log (n) ),The height of the tree.
13,6.664587638939251,-1.5344966482296793,5.0,  if constructed efficiently best case scenario o log n time where number item if constructed poorly instance root being 1 progressing downwards right children more than last : have one way linear linked list that worse case scenario full traversal o n time where number item tree,How many steps does it take to search a node in a binary search tree?,"If the binary search tree is constructed efficiently, best case scenario is O(log n) time.  Where n is the number of items in the tree.  If the binary search tree is constructed poorly, with for instance the root of the tree being 1, and progressing downwards and to the right its children are each more than the last: you have a one-way linear linked list.  That worse case scenario would be a full traversal at O(n) time. Where n is the number of items in the tree.",The height of the tree.
14,-0.23987528999727298,-0.31469475234366867,2.5,  n being number node,How many steps does it take to search a node in a binary search tree?,"N, n being the number of nodes.",The height of the tree.
15,-0.5338296645424833,-0.2177337364087129,5.0,  depending way ordered could anywhere log n step,How many steps does it take to search a node in a binary search tree?,"depending on the way that the tree is ordered, it could be anywhere between log(n) and N steps.",The height of the tree.
16,-0.5842656215385313,-0.12234423745486499,4.5,  log n,How many steps does it take to search a node in a binary search tree?,log(n),The height of the tree.
17,1.7576507413853657,0.22264553034736784,5.0,  worst case scenario = number level ie : farthest position root best case = one if root node,How many steps does it take to search a node in a binary search tree?,"worst case scenario = the number of levels of the tree, ie: the node at the farthest position from the root node.  best case = 1 step if its the root node.",The height of the tree.
18,-0.3717663956710169,0.07865149897828863,0.0,  three most three case,How many steps does it take to search a node in a binary search tree?,3 steps at most.  There are 3 cases.,The height of the tree.
19,-0.03725395318330474,-0.7265666107424504,4.5,  log n where equal total number tree,How many steps does it take to search a node in a binary search tree?,log(n)    where n equals the total number of nodes in the tree.,The height of the tree.
20,-0.07623436997247075,-0.8399365486635751,5.0,  same number as number level generation tree,How many steps does it take to search a node in a binary search tree?,the same number of steps as the number of levels or generations in the tree,The height of the tree.
21,-0.3509966195183439,-0.6237231204848391,5.0,  find most same number as level tree,How many steps does it take to search a node in a binary search tree?,to find a node in a binary search tree takes at most the same number of steps as there are levels of the tree.,The height of the tree.
22,-0.02335377280073535,2.698415306047057,0.0,  three visit root then go right subtree visiting right subtree visit left subtree,How many steps does it take to search a node in a binary search tree?,"three steps visit the root node, then go to right subtree, after visiting right subtree visit left subtree",The height of the tree.
23,-0.5842656215385313,-0.12234423745486499,4.5, log,How many steps does it take to search a node in a binary search tree?,log n,The height of the tree.
24,-0.6286458662635249,0.0023802322051080806,0.0,  n 1 two,How many steps does it take to search a node in a binary search tree?,( n(n-1) ) / 2,The height of the tree.
25,-0.628645866263525,0.002380232205108119,0.0,  2n 1,How many steps does it take to search a node in a binary search tree?,2n-1,The height of the tree.
26,-0.34865548919074885,-0.3834957803573712,5.0,  most where height tree,How many steps does it take to search a node in a binary search tree?,"it takes at most h steps, where h is the height of the tree.",The height of the tree.
27,0.028171077515001156,0.0714562774527337,0.0,  depend install then there case repeat back case primary node,How many steps does it take to search a node in a binary search tree?,it depends on the install search tree then from there for whatever the case is the it repeats it back along the case of the primary node,The height of the tree.
